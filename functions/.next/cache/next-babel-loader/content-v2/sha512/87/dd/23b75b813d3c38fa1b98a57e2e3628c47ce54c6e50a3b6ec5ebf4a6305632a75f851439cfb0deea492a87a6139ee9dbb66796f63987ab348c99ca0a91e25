{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Card, Row, Col, FormControl, Button, Spinner } from \"react-bootstrap\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../utils/fetchAssociations\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport styles from \"../../styles/MainSearch.module.css\"; // import styles from \"../../styles/ClientPage.module.css\";\n\nconst ClientPage = () => {\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: clientSearchTerm,\n    1: setClientSearchTerm\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const router = useRouter(); // Fetch clients when the component mounts\n\n  useEffect(() => {\n    const fetchClientData = async () => {\n      try {\n        const clientsData = await fetchClients();\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchClientData();\n  }, []); // Handle search input changes\n\n  const handleSearchChange = event => {\n    setClientSearchTerm(event.target.value);\n  }; // Handle client selection\n\n\n  const handleSelectClient = clientId => {\n    console.log(\"Selected client ID:\", clientId); // Redirect to client-specific page\n\n    router.push(`client/${clientId}`);\n  }; // Handle client info button click\n\n\n  const handleClientInfo = clientId => {\n    router.push(`client/${clientId}/addClient`);\n  }; // Clear search input\n\n\n  const clearSelection = () => {\n    setClientSearchTerm(\"\");\n  };\n\n  const addClient = () => {\n    const randomNumber = Math.floor(10000 + Math.random() * 90000); // Navigate to the new route with the random number\n\n    router.push(`client/AIS${randomNumber}/addClient`);\n  };\n\n  return __jsx(Container, {\n    className: \"py-4\"\n  }, __jsx(Card, null, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Clients\"), isLoading ? __jsx(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: \"300px\"\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(React.Fragment, null, __jsx(Row, {\n    className: \"mb-3\"\n  }, __jsx(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    value: clientSearchTerm,\n    onChange: handleSearchChange,\n    className: \"mb-3\"\n  }), __jsx(Row, {\n    className: \"mb-3\"\n  }, __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: clearSelection\n  }, \"Clear Search\")), __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"w-100\",\n    onClick: addClient\n  }, \"Add New Client\")), __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: () => router.push(\"../Warehousedb/WarehouseSelect\")\n  }, \"back\"))))), __jsx(ClientTable, {\n    clients: clients.filter(client => (client.name || \"\").toLowerCase().includes(clientSearchTerm.toLowerCase())),\n    onSelectClient: handleSelectClient,\n    onInfoClick: handleClientInfo,\n    isClientSearch: true // clearSelection={clearSelection}\n\n  })))));\n};\n\nexport default ClientPage;","map":null,"metadata":{},"sourceType":"module"}