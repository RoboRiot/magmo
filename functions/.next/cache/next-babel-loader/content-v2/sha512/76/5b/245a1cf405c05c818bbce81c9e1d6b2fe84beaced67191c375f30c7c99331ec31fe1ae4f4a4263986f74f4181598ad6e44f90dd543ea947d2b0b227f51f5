{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { Container } from \"react-bootstrap\";\n\nconst LoggedIn = ({\n  children\n}) => {\n  const {\n    authUser,\n    loading\n  } = useAuth();\n  const router = useRouter(); // Redirect only after a short delay if authUser remains null.\n\n  useEffect(() => {\n    console.log(\"=== LOGGEDIN AUTH CHECK ===\");\n    console.log(\"loading:\", loading);\n    console.log(\"authUser:\", authUser);\n    console.log(\"router.asPath:\", router.asPath);\n\n    if (!loading && authUser === null) {\n      console.log(\"No auth user, will redirect to login in 800ms\"); // Set a delay (e.g. 500ms) to give Firebase Auth a chance to rehydrate.\n\n      const timer = setTimeout(() => {\n        console.log(\"Redirecting to login now\");\n        router.push(`/?redirect=${encodeURIComponent(router.asPath)}`);\n      }, 800);\n      return () => clearTimeout(timer);\n    }\n  }, [authUser, loading, router]);\n\n  if (loading) {\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      }\n    }, __jsx(\"h3\", null, \"Loading...\"));\n  }\n\n  return __jsx(React.Fragment, null, authUser && children);\n};\n\nexport default LoggedIn;","map":null,"metadata":{},"sourceType":"module"}