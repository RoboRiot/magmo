{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport Firebase, { auth } from \"./Firebase\";\n\nvar formatAuthUser = function formatAuthUser(user) {\n  return {\n    uid: user.uid,\n    email: user.email\n  };\n};\n\nexport default function useFirebaseAuth() {\n  var _useState = useState(null),\n      authUser = _useState[0],\n      setAuthUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var authStateChanged = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authState) {\n      var formattedUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (authState) {\n                _context.next = 4;\n                break;\n              }\n\n              setAuthUser(null);\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              setLoading(true);\n              formattedUser = formatAuthUser(authState);\n              setAuthUser(formattedUser);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function authStateChanged(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var clear = function clear() {\n    setAuthUser(null);\n    setLoading(true);\n  }; //sign in with google\n\n\n  var signInWithGoogle = function signInWithGoogle() {\n    var provider = new Firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    return auth.signInWithRedirect(provider)[\"catch\"](function (error) {\n      console.error(\"Google Sign-In Error:\", error);\n      throw error;\n    });\n  };\n\n  var signOut = function signOut() {\n    return auth.signOut().then(clear);\n  }; // Listen for Firebase auth state changes\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged(authStateChanged);\n  //   return () => unsubscribe();\n  // }, []);\n\n\n  useEffect(function () {\n    var unsubscribe;\n    auth.setPersistence(Firebase.auth.Auth.Persistence.LOCAL).then(function () {\n      // Now set up the listener\n      unsubscribe = auth.onAuthStateChanged(authStateChanged);\n    })[\"catch\"](function (error) {\n      return console.error(\"Error setting persistence:\", error);\n    });\n    return function () {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, []);\n  return {\n    authUser: authUser,\n    loading: loading,\n    signInWithGoogle: signInWithGoogle,\n    signOut: signOut\n  };\n}","map":null,"metadata":{},"sourceType":"module"}