{"ast":null,"code":"import { initializeApp, getApps, cert } from \"firebase-admin/app\";\nimport { getFirestore } from \"firebase-admin/firestore\"; // Import Firebase Functions for config access\n\nlet functions;\n\ntry {\n  functions = require(\"firebase-functions\");\n} catch (error) {\n  // Not running in Firebase Functions environment\n  functions = null;\n} // Initialize Firebase Admin if it hasn't been initialized\n\n\nif (!getApps().length) {\n  var _functions$config$adm, _functions$config$ssr, _functions$config$adm2, _functions$config$ssr2;\n\n  // Only initialize if we have valid credentials\n  const clientEmail = process.env.FIREBASE_CLIENT_EMAIL || process.env.FIREBASE_FUNCTIONS_CLIENT_EMAIL || process.env.FIREBASE_ADMIN_CLIENT_EMAIL || (functions ? ((_functions$config$adm = functions.config().admin) === null || _functions$config$adm === void 0 ? void 0 : _functions$config$adm.client_email) || ((_functions$config$ssr = functions.config().ssr) === null || _functions$config$ssr === void 0 ? void 0 : _functions$config$ssr.firebase_client_email) : undefined);\n  const privateKey = process.env.FIREBASE_PRIVATE_KEY || process.env.FIREBASE_FUNCTIONS_PRIVATE_KEY || process.env.FIREBASE_ADMIN_PRIVATE_KEY || (functions ? ((_functions$config$adm2 = functions.config().admin) === null || _functions$config$adm2 === void 0 ? void 0 : _functions$config$adm2.private_key) || ((_functions$config$ssr2 = functions.config().ssr) === null || _functions$config$ssr2 === void 0 ? void 0 : _functions$config$ssr2.firebase_private_key) : undefined);\n\n  if (clientEmail && privateKey) {\n    try {\n      initializeApp({\n        credential: cert({\n          projectId: \"magmo-ac10c\",\n          clientEmail: clientEmail,\n          privateKey: privateKey.replace(/\\\\n/g, \"\\n\")\n        }),\n        databaseURL: \"https://magmo-ac10c.firebaseio.com\"\n      });\n    } catch (error) {\n      console.warn(\"Firebase Admin initialization failed:\", error.message); // Don't throw error during build process\n    }\n  } else {\n    console.warn(\"Firebase Admin credentials not available, skipping initialization\");\n  }\n} // Only export Firestore if Firebase Admin is properly initialized\n\n\nlet adminDb = null;\n\ntry {\n  if (getApps().length > 0) {\n    adminDb = getFirestore();\n  }\n} catch (error) {\n  console.warn(\"Firebase Admin not available:\", error.message);\n}\n\nexport { adminDb };\nexport default adminDb;","map":null,"metadata":{},"sourceType":"module"}