{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\LoggedIn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { Container } from \"react-bootstrap\";\n\nconst LoggedIn = ({\n  children\n}) => {\n  const {\n    authUser,\n    loading\n  } = useAuth();\n  const router = useRouter(); // Redirect only after a short delay if authUser remains null.\n\n  useEffect(() => {\n    console.log(\"=== LOGGEDIN AUTH CHECK ===\");\n    console.log(\"loading:\", loading);\n    console.log(\"authUser:\", authUser);\n    console.log(\"router.asPath:\", router.asPath);\n\n    if (!loading && authUser === null) {\n      console.log(\"No auth user, will redirect to login in 800ms\"); // Set a delay (e.g. 500ms) to give Firebase Auth a chance to rehydrate.\n\n      const timer = setTimeout(() => {\n        console.log(\"Redirecting to login now\");\n        router.push(`/?redirect=${encodeURIComponent(router.asPath)}`);\n      }, 800);\n      return () => clearTimeout(timer);\n    }\n  }, [authUser, loading, router]);\n\n  if (loading) {\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  return __jsx(React.Fragment, null, authUser && children);\n};\n\nexport default LoggedIn;","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/LoggedIn.js"],"names":["useEffect","useRouter","useAuth","Container","LoggedIn","children","authUser","loading","router","console","log","asPath","timer","setTimeout","push","encodeURIComponent","clearTimeout","minHeight"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBL,OAAO,EAArC;AACA,QAAMM,MAAM,GAAGP,SAAS,EAAxB,CAFiC,CAIjC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,OAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,QAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAAM,CAACG,MAArC;;AAEA,QAAI,CAACJ,OAAD,IAAYD,QAAQ,KAAK,IAA7B,EAAmC;AACjCG,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EADiC,CAEjC;;AACA,YAAME,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAF,QAAAA,MAAM,CAACM,IAAP,CAAa,cAAaC,kBAAkB,CAACP,MAAM,CAACG,MAAR,CAAgB,EAA5D;AACD,OAHuB,EAGrB,GAHqB,CAAxB;AAIA,aAAO,MAAMK,YAAY,CAACJ,KAAD,CAAzB;AACD;AACF,GAfQ,EAeN,CAACN,QAAD,EAAWC,OAAX,EAAoBC,MAApB,CAfM,CAAT;;AAiBA,MAAID,OAAJ,EAAa;AACX,WACE,MAAC,SAAD;AACE,MAAA,SAAS,EAAC,kDADZ;AAEE,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF;AAQD;;AAED,SAAO,4BAAGX,QAAQ,IAAID,QAAf,CAAP;AACD,CAlCD;;AAoCA,eAAeD,QAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { Container } from \"react-bootstrap\";\n\nconst LoggedIn = ({ children }) => {\n  const { authUser, loading } = useAuth();\n  const router = useRouter();\n\n  // Redirect only after a short delay if authUser remains null.\n  useEffect(() => {\n    console.log(\"=== LOGGEDIN AUTH CHECK ===\");\n    console.log(\"loading:\", loading);\n    console.log(\"authUser:\", authUser);\n    console.log(\"router.asPath:\", router.asPath);\n\n    if (!loading && authUser === null) {\n      console.log(\"No auth user, will redirect to login in 800ms\");\n      // Set a delay (e.g. 500ms) to give Firebase Auth a chance to rehydrate.\n      const timer = setTimeout(() => {\n        console.log(\"Redirecting to login now\");\n        router.push(`/?redirect=${encodeURIComponent(router.asPath)}`);\n      }, 800);\n      return () => clearTimeout(timer);\n    }\n  }, [authUser, loading, router]);\n\n  if (loading) {\n    return (\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <h3>Loading...</h3>\n      </Container>\n    );\n  }\n\n  return <>{authUser && children}</>;\n};\n\nexport default LoggedIn;\n"]},"metadata":{},"sourceType":"module"}