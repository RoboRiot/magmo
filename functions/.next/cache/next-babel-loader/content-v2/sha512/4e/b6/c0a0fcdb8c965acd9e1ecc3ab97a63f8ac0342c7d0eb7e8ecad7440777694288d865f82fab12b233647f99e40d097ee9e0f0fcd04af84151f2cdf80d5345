{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\nimport styles from \"../styles/Home.module.css\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { useRouter } from \"next/router\";\nimport LoggedIn from \"./LoggedIn\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nfunction LoadingButton({\n  type,\n  name,\n  route,\n  enable = true\n}) {\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true); // Guard against falsy route values\n\n\n  if (!route) return null;\n  const isExternal = route.startsWith('http://') || route.startsWith('https://');\n\n  if (isExternal) {\n    return __jsx(\"a\", {\n      href: route,\n      className: `btn btn-${type}`,\n      disabled: !enable || isLoading,\n      onClick: !isLoading ? handleClick : null,\n      style: {\n        pointerEvents: !enable ? 'none' : 'auto',\n        opacity: !enable ? 0.65 : 1\n      }\n    }, isLoading ? \"Loading…\" : name);\n  } else {\n    return __jsx(Link, {\n      href: route\n    }, __jsx(\"a\", {\n      className: `btn btn-${type}`,\n      disabled: !enable || isLoading,\n      onClick: !isLoading ? handleClick : null,\n      style: {\n        pointerEvents: !enable ? 'none' : 'auto',\n        opacity: !enable ? 0.65 : 1\n      }\n    }, isLoading ? \"Loading…\" : name));\n  }\n}\n\nexport default function dashboard() {\n  const {\n    authUser,\n    loading,\n    signOut\n  } = useAuth();\n  const router = useRouter(); // Redirect to login if not authenticated and not still loading\n\n  useEffect(() => {\n    if (!loading && !authUser) {\n      // router.push(\"/\");\n      console.log(\"user noy logged in also should not be here\");\n    }\n  }, [authUser, loading, router]); // Show a loading message until auth state is determined\n\n  if (loading || !authUser) {\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      }\n    }, __jsx(\"h3\", null, \"Loading...\"));\n  }\n\n  return __jsx(LoggedIn, null, __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\"\n  }, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Main Menu\"), __jsx(\"div\", {\n    class: \"d-grid gap-3\"\n  }, __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Service Docs\",\n    route: \"ServiceDocs/ServiceSelect\",\n    enable: false\n  }), __jsx(LoadingButton, {\n    type: \"secondary\",\n    name: \"MagMon\",\n    route: \"http://mri.advancedimagingparts.com/login\"\n  }), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Warehouse db\",\n    route: \"Warehousedb/WarehouseSelect\"\n  }), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Interview\",\n    route: \"schedule/interview\",\n    enable: false\n  }), __jsx(Button, {\n    variant: \"link\",\n    onClick: signOut\n  }, \"Sign out\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}