{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../styles/global.css\";\nimport Layout from \"../components/Layout\";\nimport { AuthUserProvider } from \"../context/AuthUserContext\"; // Setup pdfjs (if used) - only on client side\n\nlet pdfjs = null;\n\nif (false) {\n  // Only import on client side\n  try {\n    const {\n      pdfjs: pdfjsModule\n    } = require(\"react-pdf\");\n\n    pdfjs = pdfjsModule;\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n  } catch (error) {\n    console.warn(\"PDF.js not available:\", error);\n  }\n}\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const router = useRouter(); // Load Bootstrap JS once\n\n  useEffect(() => {\n    require(\"bootstrap/dist/js/bootstrap.bundle.min.js\");\n  }, []); // NEW: On initial client mount, check if the browser URL (window.location.pathname)\n  // is different from what Next's router thinks (which will be \"/\" when served via index.html).\n  // If so, replace the route so that Next loads the proper dynamic page.\n\n  useEffect(() => {\n    if (false && router.isReady) {\n      const actualPath = window.location.pathname; // Only if the current browser path is not \"/\" but the router shows \"/\"\n      // (which happens because Firebase Hosting serves index.html for every route),\n      // then navigate to the actual path.\n\n      if (actualPath !== \"/\" && router.asPath === \"/\") {\n        router.replace(actualPath + window.location.search);\n      }\n    }\n  }, [router.isReady, router.asPath]);\n  return __jsx(AuthUserProvider, null, __jsx(Layout, null, __jsx(Component, pageProps)));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}