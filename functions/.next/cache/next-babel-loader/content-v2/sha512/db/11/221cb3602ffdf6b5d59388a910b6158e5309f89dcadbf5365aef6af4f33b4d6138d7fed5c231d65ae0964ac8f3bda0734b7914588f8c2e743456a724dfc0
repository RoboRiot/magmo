{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\item\\\\[id]\\\\NewLocal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// NewLocal.js\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button, Stack } from \"react-bootstrap\";\nimport firebase from \"../../../../context/Firebase\";\nexport default function NewLocal(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$onSave = _ref.onSave,\n      onSave = _ref$onSave === void 0 ? function () {} : _ref$onSave,\n      _ref$onCancel = _ref.onCancel,\n      onCancel = _ref$onCancel === void 0 ? function () {} : _ref$onCancel,\n      selectedClient = _ref.selectedClient,\n      showLocalLoc = _ref.showLocalLoc,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? {} : _ref$value,\n      onChange = _ref.onChange;\n\n  var _useState = useState([]),\n      regionOptions = _useState[0],\n      setRegionOptions = _useState[1];\n\n  var _useState2 = useState({}),\n      sectionMap = _useState2[0],\n      setSectionMap = _useState2[1];\n\n  var _useState3 = useState(0),\n      binCount = _useState3[0],\n      setBinCount = _useState3[1];\n\n  var _useState4 = useState(0),\n      palletCount = _useState4[0],\n      setPalletCount = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      region = _useState5[0],\n      setRegion = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      sectionLetter = _useState6[0],\n      setSectionLetter = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      sectionNumber = _useState7[0],\n      setSectionNumber = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      binSelected = _useState8[0],\n      setBinSelected = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      palletSelected = _useState9[0],\n      setPalletSelected = _useState9[1]; // 1) load directory exactly as before\n\n\n  useEffect(function () {\n    if (!showLocalLoc) return;\n    var db = firebase.firestore();\n    db.collection(\"Warehouse\").doc(\"directory\").get().then(function (doc) {\n      var d = doc.data() || {};\n      setRegionOptions(d.Region || []);\n      setSectionMap(d.Section || {});\n      setBinCount(d.Bin || 0);\n      setPalletCount(d.Pallet || 0);\n    });\n  }, [showLocalLoc]); // 2) when we open the modal (or value changes), initialize from value\n\n  useEffect(function () {\n    var _value$section, _value$section2, _value$bin, _value$pallet;\n\n    if (!showLocalLoc) return;\n    setRegion(value.region || \"\");\n    setSectionLetter(((_value$section = value.section) === null || _value$section === void 0 ? void 0 : _value$section.letter) || \"\");\n    setSectionNumber(((_value$section2 = value.section) === null || _value$section2 === void 0 ? void 0 : _value$section2.number) || \"\");\n    setBinSelected(((_value$bin = value.bin) === null || _value$bin === void 0 ? void 0 : _value$bin.toString()) || \"\");\n    setPalletSelected(((_value$pallet = value.pallet) === null || _value$pallet === void 0 ? void 0 : _value$pallet.toString()) || \"\");\n  }, [showLocalLoc]); // 3) notify parent on any change\n\n  useEffect(function () {\n    var p = {};\n    if (region) p.region = region;\n    if (sectionLetter && sectionNumber) p.section = {\n      letter: sectionLetter,\n      number: sectionNumber\n    };\n    if (binSelected) p.bin = parseInt(binSelected, 10);\n    if (palletSelected) p.pallet = parseInt(palletSelected, 10);\n    onChange(p);\n  }, [region, sectionLetter, sectionNumber, binSelected, palletSelected]); // helpers:\n\n  var letters = Array.from({\n    length: 26\n  }, function (_, i) {\n    return String.fromCharCode(65 + i);\n  });\n  var numbers = Array.from({\n    length: 50\n  }, function (_, i) {\n    return i + 1;\n  });\n  var binOptions = Array.from({\n    length: binCount\n  }, function (_, i) {\n    return i + 1;\n  });\n  var palletOptions = Array.from({\n    length: palletCount\n  }, function (_, i) {\n    return i + 1;\n  }); // bump and persist bin count\n\n  var handleAddBin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var next;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              next = binCount + 1;\n              _context.next = 3;\n              return firebase.firestore().collection(\"Warehouse\").doc(\"directory\").update({\n                Bin: next\n              });\n\n            case 3:\n              setBinCount(next);\n              setBinSelected(next.toString());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleAddBin() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // bump and persist pallet count\n\n\n  var handleAddPallet = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var next;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              next = palletCount + 1;\n              _context2.next = 3;\n              return firebase.firestore().collection(\"Warehouse\").doc(\"directory\").update({\n                Pallet: next\n              });\n\n            case 3:\n              setPalletCount(next);\n              setPalletSelected(next.toString());\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleAddPallet() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // only fire parent when they click OK\n\n\n  var handleOk = function handleOk() {\n    var p = {};\n    if (region) p.region = region;\n    if (sectionLetter && sectionNumber) p.section = {\n      letter: sectionLetter,\n      number: sectionNumber\n    };\n    if (binSelected) p.bin = parseInt(binSelected, 10);\n    if (palletSelected) p.pallet = parseInt(palletSelected, 10);\n    onSave(p);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Region\"), __jsx(Form.Select, {\n    value: region,\n    onChange: function onChange(e) {\n      return setRegion(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Select region\"), regionOptions.map(function (r) {\n    return __jsx(\"option\", {\n      key: r,\n      value: r,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 38\n      }\n    }, r);\n  })))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Section Letter\"), __jsx(Form.Select, {\n    value: sectionLetter,\n    onChange: function onChange(e) {\n      return setSectionLetter(e.target.value);\n    } // disabled={!region}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Letter\"), letters.map(function (l) {\n    return __jsx(\"option\", {\n      key: l,\n      value: l,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 32\n      }\n    }, l);\n  })))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Section Number\"), __jsx(Form.Select, {\n    value: sectionNumber,\n    onChange: function onChange(e) {\n      return setSectionNumber(e.target.value);\n    } // disabled={!region}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"Number\"), numbers.map(function (n) {\n    return __jsx(\"option\", {\n      key: n,\n      value: n,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 32\n      }\n    }, n);\n  }))))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Bin\"), __jsx(Stack, {\n    direction: \"horizontal\",\n    gap: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Select, {\n    value: binSelected,\n    onChange: function onChange(e) {\n      return setBinSelected(e.target.value);\n    } // disabled={!region}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Select bin\"), binOptions.map(function (b) {\n    return __jsx(\"option\", {\n      key: b,\n      value: b,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 38\n      }\n    }, b);\n  })), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleAddBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"+ Bin\")))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Pallet\"), __jsx(Stack, {\n    direction: \"horizontal\",\n    gap: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Select, {\n    value: palletSelected,\n    onChange: function onChange(e) {\n      return setPalletSelected(e.target.value);\n    } // disabled={!region}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Select pallet\"), palletOptions.map(function (p) {\n    return __jsx(\"option\", {\n      key: p,\n      value: p,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, p);\n  })), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleAddPallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"+ Pallet\"))))), __jsx(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-3 text-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"OK\")))));\n}\n\n_s(NewLocal, \"6/IMAwglVOW2NM3wycXdBTcfkRs=\");\n\n_c = NewLocal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLocal\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/item/[id]/NewLocal.js"],"names":["React","useState","useEffect","Form","Row","Col","Button","Stack","firebase","NewLocal","onSave","onCancel","selectedClient","showLocalLoc","value","onChange","regionOptions","setRegionOptions","sectionMap","setSectionMap","binCount","setBinCount","palletCount","setPalletCount","region","setRegion","sectionLetter","setSectionLetter","sectionNumber","setSectionNumber","binSelected","setBinSelected","palletSelected","setPalletSelected","db","firestore","collection","doc","get","then","d","data","Region","Section","Bin","Pallet","section","letter","number","bin","toString","pallet","p","parseInt","letters","Array","from","length","_","i","String","fromCharCode","numbers","binOptions","palletOptions","handleAddBin","next","update","handleAddPallet","handleOk","e","target","map","r","l","n","b"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,iBAA9C;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,eAAe,SAASC,QAAT,OAOZ;AAAA;;AAAA;;AAAA,yBANDC,MAMC;AAAA,MANDA,MAMC,4BANQ,YAAM,CAAE,CAMhB;AAAA,2BALDC,QAKC;AAAA,MALDA,QAKC,8BALU,YAAM,CAAE,CAKlB;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,wBAFDC,KAEC;AAAA,MAFDA,KAEC,2BAFO,EAEP;AAAA,MADDC,QACC,QADDA,QACC;;AAAA,kBACyCd,QAAQ,CAAC,EAAD,CADjD;AAAA,MACMe,aADN;AAAA,MACqBC,gBADrB;;AAAA,mBAEuChB,QAAQ,CAAC,EAAD,CAF/C;AAAA,MAEMiB,UAFN;AAAA,MAEkBC,aAFlB;;AAAA,mBAGuClB,QAAQ,CAAC,CAAD,CAH/C;AAAA,MAGMmB,QAHN;AAAA,MAGgBC,WAHhB;;AAAA,mBAIuCpB,QAAQ,CAAC,CAAD,CAJ/C;AAAA,MAIMqB,WAJN;AAAA,MAImBC,cAJnB;;AAAA,mBAM2BtB,QAAQ,CAAC,EAAD,CANnC;AAAA,MAMMuB,MANN;AAAA,MAMcC,SANd;;AAAA,mBAOyCxB,QAAQ,CAAC,EAAD,CAPjD;AAAA,MAOMyB,aAPN;AAAA,MAOqBC,gBAPrB;;AAAA,mBAQyC1B,QAAQ,CAAC,EAAD,CARjD;AAAA,MAQM2B,aARN;AAAA,MAQqBC,gBARrB;;AAAA,mBASyC5B,QAAQ,CAAC,EAAD,CATjD;AAAA,MASM6B,WATN;AAAA,MASmBC,cATnB;;AAAA,mBAU2C9B,QAAQ,CAAC,EAAD,CAVnD;AAAA,MAUM+B,cAVN;AAAA,MAUsBC,iBAVtB,kBAYD;;;AACA/B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACW,YAAL,EAAmB;AACnB,QAAMqB,EAAE,GAAG1B,QAAQ,CAAC2B,SAAT,EAAX;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,WAA/B,EAA4CC,GAA5C,GAAkDC,IAAlD,CAAuD,UAAAF,GAAG,EAAI;AAC5D,UAAMG,CAAC,GAAGH,GAAG,CAACI,IAAJ,MAAc,EAAxB;AACAxB,MAAAA,gBAAgB,CAACuB,CAAC,CAACE,MAAF,IAAc,EAAf,CAAhB;AACAvB,MAAAA,aAAa,CAAIqB,CAAC,CAACG,OAAF,IAAc,EAAlB,CAAb;AACAtB,MAAAA,WAAW,CAAMmB,CAAC,CAACI,GAAF,IAAc,CAApB,CAAX;AACArB,MAAAA,cAAc,CAAGiB,CAAC,CAACK,MAAF,IAAc,CAAjB,CAAd;AACD,KAND;AAOD,GAVQ,EAUN,CAAChC,YAAD,CAVM,CAAT,CAbC,CAyBD;;AACAX,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAI,CAACW,YAAL,EAAmB;AACnBY,IAAAA,SAAS,CAASX,KAAK,CAACU,MAAN,IAA4B,EAArC,CAAT;AACAG,IAAAA,gBAAgB,CAAC,mBAAAb,KAAK,CAACgC,OAAN,kEAAeC,MAAf,KAA4B,EAA7B,CAAhB;AACAlB,IAAAA,gBAAgB,CAAC,oBAAAf,KAAK,CAACgC,OAAN,oEAAeE,MAAf,KAA4B,EAA7B,CAAhB;AACAjB,IAAAA,cAAc,CAAI,eAAAjB,KAAK,CAACmC,GAAN,0DAAWC,QAAX,OAA4B,EAAhC,CAAd;AACAjB,IAAAA,iBAAiB,CAAC,kBAAAnB,KAAK,CAACqC,MAAN,gEAAcD,QAAd,OAA2B,EAA5B,CAAjB;AACD,GAPQ,EAON,CAACrC,YAAD,CAPM,CAAT,CA1BC,CAmCD;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkD,CAAC,GAAG,EAAV;AACA,QAAI5B,MAAJ,EAAoB4B,CAAC,CAAC5B,MAAF,GAAYA,MAAZ;AACpB,QAAIE,aAAa,IAAIE,aAArB,EAAoCwB,CAAC,CAACN,OAAF,GAAY;AAAEC,MAAAA,MAAM,EAAErB,aAAV;AAAyBsB,MAAAA,MAAM,EAAEpB;AAAjC,KAAZ;AACpC,QAAIE,WAAJ,EAAoBsB,CAAC,CAACH,GAAF,GAAYI,QAAQ,CAACvB,WAAD,EAAa,EAAb,CAApB;AACpB,QAAIE,cAAJ,EAAoBoB,CAAC,CAACD,MAAF,GAAYE,QAAQ,CAACrB,cAAD,EAAgB,EAAhB,CAApB;AACpBjB,IAAAA,QAAQ,CAACqC,CAAD,CAAR;AACD,GAPQ,EAON,CAAC5B,MAAD,EAASE,aAAT,EAAwBE,aAAxB,EAAuCE,WAAvC,EAAoDE,cAApD,CAPM,CAAT,CApCC,CA6CD;;AACF,MAAMsB,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUC,MAAM,CAACC,YAAP,CAAoB,KAAKF,CAAzB,CAAV;AAAA,GAA3B,CAAhB;AACA,MAAMG,OAAO,GAAGP,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAG,CAAd;AAAA,GAA3B,CAAhB;AACE,MAAMI,UAAU,GAAGR,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAErC;AAAV,GAAX,EAAiC,UAACsC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAG,CAAd;AAAA,GAAjC,CAAnB;AACA,MAAMK,aAAa,GAAGT,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEnC;AAAV,GAAX,EAAoC,UAACoC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,GAAG,CAAd;AAAA,GAApC,CAAtB,CAjDC,CAmDD;;AACA,MAAMM,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,IADa,GACN9C,QAAQ,GAAG,CADL;AAAA;AAAA,qBAEbZ,QAAQ,CAAC2B,SAAT,GACHC,UADG,CACQ,WADR,EACqBC,GADrB,CACyB,WADzB,EAEH8B,MAFG,CAEI;AAAEvB,gBAAAA,GAAG,EAAEsB;AAAP,eAFJ,CAFa;;AAAA;AAKnB7C,cAAAA,WAAW,CAAC6C,IAAD,CAAX;AACAnC,cAAAA,cAAc,CAACmC,IAAI,CAAChB,QAAL,EAAD,CAAd;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZe,YAAY;AAAA;AAAA;AAAA,KAAlB,CApDC,CA6DD;;;AACA,MAAMG,eAAe;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBF,cAAAA,IADgB,GACT5C,WAAW,GAAG,CADL;AAAA;AAAA,qBAEhBd,QAAQ,CAAC2B,SAAT,GACHC,UADG,CACQ,WADR,EACqBC,GADrB,CACyB,WADzB,EAEH8B,MAFG,CAEI;AAAEtB,gBAAAA,MAAM,EAAEqB;AAAV,eAFJ,CAFgB;;AAAA;AAKtB3C,cAAAA,cAAc,CAAC2C,IAAD,CAAd;AACAjC,cAAAA,iBAAiB,CAACiC,IAAI,CAAChB,QAAL,EAAD,CAAjB;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfkB,eAAe;AAAA;AAAA;AAAA,KAArB,CA9DC,CAuED;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMjB,CAAC,GAAG,EAAV;AACA,QAAI5B,MAAJ,EAAY4B,CAAC,CAAC5B,MAAF,GAAWA,MAAX;AACZ,QAAIE,aAAa,IAAIE,aAArB,EACEwB,CAAC,CAACN,OAAF,GAAY;AAAEC,MAAAA,MAAM,EAAErB,aAAV;AAAyBsB,MAAAA,MAAM,EAAEpB;AAAjC,KAAZ;AACF,QAAIE,WAAJ,EAAiBsB,CAAC,CAACH,GAAF,GAAQI,QAAQ,CAACvB,WAAD,EAAc,EAAd,CAAhB;AACjB,QAAIE,cAAJ,EAAoBoB,CAAC,CAACD,MAAF,GAAWE,QAAQ,CAACrB,cAAD,EAAiB,EAAjB,CAAnB;AACpBtB,IAAAA,MAAM,CAAC0C,CAAD,CAAN;AACD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAE5B,MADT;AACiB,IAAA,QAAQ,EAAE,kBAAA8C,CAAC;AAAA,aAAE7C,SAAS,CAAC6C,CAAC,CAACC,MAAF,CAASzD,KAAV,CAAX;AAAA,KAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIGE,aAAa,CAACwD,GAAd,CAAkB,UAAAC,CAAC;AAAA,WAAG;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CAAH;AAAA,GAAnB,CAJH,CAFF,CADF,CADF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAE/C,aADT;AAEE,IAAA,QAAQ,EAAE,kBAAA4C,CAAC;AAAA,aAAE3C,gBAAgB,CAAC2C,CAAC,CAACC,MAAF,CAASzD,KAAV,CAAlB;AAAA,KAFb,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGwC,OAAO,CAACkB,GAAR,CAAY,UAAAE,CAAC;AAAA,WAAG;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CAAH;AAAA,GAAb,CANH,CAFF,CADF,CAZF,EAyBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAE9C,aADT;AAEE,IAAA,QAAQ,EAAE,kBAAA0C,CAAC;AAAA,aAAEzC,gBAAgB,CAACyC,CAAC,CAACC,MAAF,CAASzD,KAAV,CAAlB;AAAA,KAFb,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAMGgD,OAAO,CAACU,GAAR,CAAY,UAAAG,CAAC;AAAA,WAAG;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CAAH;AAAA,GAAb,CANH,CAFF,CADF,CAzBF,CADF,EAwCE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,GAAG,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAE7C,WADT;AAEE,IAAA,QAAQ,EAAE,kBAAAwC,CAAC;AAAA,aAAIvC,cAAc,CAACuC,CAAC,CAACC,MAAF,CAASzD,KAAV,CAAlB;AAAA,KAFb,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMGiD,UAAU,CAACS,GAAX,CAAe,UAAAI,CAAC;AAAA,WAAI;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CAAJ;AAAA,GAAhB,CANH,CADF,EASE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEX,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAFF,CADF,CADF,EAmBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,GAAG,EAAE,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAEjC,cADT;AAEE,IAAA,QAAQ,EAAE,kBAAAsC,CAAC;AAAA,aAAGrC,iBAAiB,CAACqC,CAAC,CAACC,MAAF,CAASzD,KAAV,CAApB;AAAA,KAFb,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMOkD,aAAa,CAACQ,GAAd,CAAkB,UAAApB,CAAC;AAAA,WAAI;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CAAJ;AAAA,GAAnB,CANP,CADA,EASI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAEgB,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CAFA,CADF,CAnBF,CAxCF,EA+EE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEzD,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE0D,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,CADF,CA/EF,CADF;AA8FD;;GAvLuB5D,Q;;KAAAA,Q","sourcesContent":["// NewLocal.js\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button, Stack } from \"react-bootstrap\";\nimport firebase from \"../../../../context/Firebase\";\n\nexport default function NewLocal({\n  onSave = () => {},\n  onCancel = () => {},\n  selectedClient,\n  showLocalLoc,\n  value = {},\n  onChange,\n}) {\n  const [regionOptions, setRegionOptions] = useState([]);\n  const [sectionMap, setSectionMap]     = useState({});\n  const [binCount, setBinCount]         = useState(0);\n  const [palletCount, setPalletCount]   = useState(0);\n\n  const [region, setRegion] = useState(\"\");\n  const [sectionLetter, setSectionLetter] = useState(\"\");\n  const [sectionNumber, setSectionNumber] = useState(\"\");\n  const [binSelected, setBinSelected]     = useState(\"\");\n  const [palletSelected, setPalletSelected] = useState(\"\");\n\n  // 1) load directory exactly as before\n  useEffect(() => {\n    if (!showLocalLoc) return;\n    const db = firebase.firestore();\n    db.collection(\"Warehouse\").doc(\"directory\").get().then(doc => {\n      const d = doc.data() || {};\n      setRegionOptions(d.Region   || []);\n      setSectionMap   (d.Section  || {});\n      setBinCount     (d.Bin      || 0);\n      setPalletCount  (d.Pallet   || 0);\n    });\n  }, [showLocalLoc]);\n\n  // 2) when we open the modal (or value changes), initialize from value\n  useEffect(() => {\n    if (!showLocalLoc) return;\n    setRegion        (value.region             || \"\");\n    setSectionLetter(value.section?.letter    || \"\");\n    setSectionNumber(value.section?.number    || \"\");\n    setBinSelected   (value.bin?.toString()    || \"\");\n    setPalletSelected(value.pallet?.toString()|| \"\");\n  }, [showLocalLoc]);\n\n  // 3) notify parent on any change\n  useEffect(() => {\n    const p = {};\n    if (region)         p.region  = region;\n    if (sectionLetter && sectionNumber) p.section = { letter: sectionLetter, number: sectionNumber };\n    if (binSelected)    p.bin     = parseInt(binSelected,10);\n    if (palletSelected) p.pallet  = parseInt(palletSelected,10);\n    onChange(p);\n  }, [region, sectionLetter, sectionNumber, binSelected, palletSelected]);\n\n  // helpers:\nconst letters = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst numbers = Array.from({ length: 50 }, (_, i) => i + 1);\n  const binOptions = Array.from({ length: binCount }, (_, i) => i + 1);\n  const palletOptions = Array.from({ length: palletCount }, (_, i) => i + 1);\n\n  // bump and persist bin count\n  const handleAddBin = async () => {\n    const next = binCount + 1;\n    await firebase.firestore()\n      .collection(\"Warehouse\").doc(\"directory\")\n      .update({ Bin: next });\n    setBinCount(next);\n    setBinSelected(next.toString());\n  };\n\n  // bump and persist pallet count\n  const handleAddPallet = async () => {\n    const next = palletCount + 1;\n    await firebase.firestore()\n      .collection(\"Warehouse\").doc(\"directory\")\n      .update({ Pallet: next });\n    setPalletCount(next);\n    setPalletSelected(next.toString());\n  };\n\n  // only fire parent when they click OK\n  const handleOk = () => {\n    const p = {};\n    if (region) p.region = region;\n    if (sectionLetter && sectionNumber)\n      p.section = { letter: sectionLetter, number: sectionNumber };\n    if (binSelected) p.bin = parseInt(binSelected, 10);\n    if (palletSelected) p.pallet = parseInt(palletSelected, 10);\n    onSave(p);\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>Region</Form.Label>\n            <Form.Select\n              value={region} onChange={e=>setRegion(e.target.value)}\n            >\n              <option value=\"\">Select region</option>\n              {regionOptions.map(r=> <option key={r} value={r}>{r}</option>)}\n            </Form.Select>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>Section Letter</Form.Label>\n            <Form.Select\n              value={sectionLetter}\n              onChange={e=>setSectionLetter(e.target.value)}\n              // disabled={!region}\n            >\n              <option value=\"\">Letter</option>\n              {letters.map(l=> <option key={l} value={l}>{l}</option>)}\n            </Form.Select>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>Section Number</Form.Label>\n            <Form.Select\n              value={sectionNumber}\n              onChange={e=>setSectionNumber(e.target.value)}\n              // disabled={!region}\n            >\n              <option value=\"\">Number</option>\n              {numbers.map(n=> <option key={n} value={n}>{n}</option>)}\n            </Form.Select>\n          </Form.Group>\n        </Col>\n      </Row>\n      <Row className=\"mt-3\">\n        <Col>\n          <Form.Group>\n            <Form.Label>Bin</Form.Label>\n            <Stack direction=\"horizontal\" gap={2}>\n              <Form.Select\n                value={binSelected}\n                onChange={e => setBinSelected(e.target.value)}\n                // disabled={!region}\n              >\n                <option value=\"\">Select bin</option>\n                {binOptions.map(b => <option key={b} value={b}>{b}</option>)}\n              </Form.Select>\n              <Button variant=\"outline-secondary\" onClick={handleAddBin} >\n                + Bin\n              </Button>\n            </Stack>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n          <Form.Label>Pallet</Form.Label>\n          <Stack direction=\"horizontal\" gap={2}>\n          <Form.Select\n            value={palletSelected}\n            onChange={e =>setPalletSelected(e.target.value)}\n              // disabled={!region}\n            >\n              <option value=\"\">Select pallet</option>\n                {palletOptions.map(p => <option key={p} value={p}>{p}</option>)}\n              </Form.Select>\n              <Button variant=\"outline-secondary\" onClick={handleAddPallet} >\n                + Pallet\n              </Button>\n            </Stack>\n          </Form.Group>\n        </Col>\n      </Row>\n      {/* OK / Cancel footer */}\n      <Row className=\"mt-4\">\n        <Col>\n          <div className=\"mt-3 text-end\">\n            <Button variant=\"secondary\" onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" onClick={handleOk}>\n              OK\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}