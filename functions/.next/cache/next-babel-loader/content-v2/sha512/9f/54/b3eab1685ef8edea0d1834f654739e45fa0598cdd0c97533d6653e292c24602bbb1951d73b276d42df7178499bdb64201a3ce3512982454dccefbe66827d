{"ast":null,"code":"import _slicedToArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Table, NavDropdown, FormControl } from \"react-bootstrap\";\nimport styles from \"../../styles/Home.module.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport firebase from \"../../context/Firebase\"; // import { useCollection } from \"react-firebase-hooks/firebase\";\n\nimport LoggedIn from \"../LoggedIn\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n}\n\nfunction LoadingButton(type, name, route) {\n  var _useState = useState({\n    name: false\n  }),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading.name) {\n      simulateNetworkRequest().then(function () {\n        setLoading({\n          name: false\n        });\n      });\n    }\n  }, [isLoading.name]);\n\n  var handleClick = function handleClick() {\n    return setLoading({\n      name: true\n    });\n  };\n\n  return (// <a\n    //   class={\"btn btn-\" + type}\n    //   variant={type}\n    //   href={\"/\" + route}\n    //   disabled={isLoading.name}\n    //   onClick={!isLoading.name ? handleClick : null}\n    // >\n    //   {isLoading.name ? \"Loading…\" : name}\n    // </a>\n    __jsx(Link, {\n      href: \"/\".concat(route)\n    }, __jsx(\"a\", {\n      className: \"btn btn-\".concat(type),\n      disabled: isLoading.name,\n      onClick: !isLoading.name ? handleClick : null\n    }, isLoading.name ? \"Loading…\" : name))\n  );\n}\n\nexport default function WarehouseList() {\n  var _useAuth = useAuth([]),\n      signOut = _useAuth.signOut;\n\n  var _useState2 = useState([]),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState([]),\n      backupInfo = _useState3[0],\n      setBackupInfo = _useState3[1];\n\n  var _useState4 = useState([]),\n      ids = _useState4[0],\n      setID = _useState4[1];\n\n  var db = firebase.firestore();\n\n  var _useState5 = useState(false),\n      show = _useState5[0],\n      setShow = _useState5[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useState6 = useState(),\n      dItem = _useState6[0],\n      setDItem = _useState6[1]; //search features//////\n\n\n  var _useState7 = useState(\"Name\"),\n      select = _useState7[0],\n      setSelect = _useState7[1];\n\n  var _useState8 = useState(false),\n      showList = _useState8[0],\n      setShowList = _useState8[1];\n\n  var _useState9 = useState(\"text\"),\n      showListSearch = _useState9[0],\n      setShowListSearch = _useState9[1];\n\n  var _useState10 = useState(),\n      search = _useState10[0],\n      setSearch = _useState10[1]; //This is getting input from warehouse select\n  //needs to reload page\n\n\n  var router = useRouter();\n  useEffect(function () {\n    if (backupInfo.length > 0 && search) {\n      // Call the function here\n      collectDataFromSearch();\n    }\n  }, [backupInfo]);\n\n  var collectDataFromSearch = function collectDataFromSearch() {\n    // useEffect(() => {\n    // checking if we have the query params and do something with it\n    if (router.query.inputText && router.query.selectedType) {\n      // const input = router.query.inputText;\n      // const type = router.query.selectedType;\n      // // window.location.reload();\n      // // Now you have the input and type, you can do whatever you want with it\n      // console.log(input, type);\n      // setSelect(type);\n      // setSearch(input);\n      searchFilter();\n    } else {\n      console.log(\"no input from previous page\");\n    } // }, [router.query]);\n\n  }; //dropdown and search management\n\n\n  var showDropdown = function showDropdown(e) {\n    setShowList(!show);\n  };\n\n  var hideDropdown = function hideDropdown(e) {\n    setShowList(false);\n  };\n\n  var searchChangeHandler = function searchChangeHandler(event) {\n    setSearch(event.target.value);\n  };\n\n  function searchFilter() {\n    var temp = [];\n    console.log(\"entered search filter\");\n    console.log(backupInfo);\n    backupInfo.map(function (item) {\n      console.log(select);\n      console.log(search);\n\n      if (select == \"Name\") {\n        if (item.name.toLowerCase().indexOf(search.toLowerCase()) > -1) {\n          temp.push(item);\n          console.log(\"enter Name\");\n        }\n      }\n\n      if (select == \"Date\") {\n        var dateComponents = item.date.split(\"/\");\n        var paddedMonth = String(dateComponents[0]).padStart(2, \"0\"); // Ensure month has 2 digits\n\n        var paddedDay = String(dateComponents[1]).padStart(2, \"0\"); // Ensure day has 2 digits\n\n        var reformattedItemDate = \"\".concat(dateComponents[2], \"-\").concat(paddedMonth, \"-\").concat(paddedDay); // Convert to \"YYYY-MM-DD\"\n\n        console.log(reformattedItemDate, search);\n\n        if (reformattedItemDate === search) {\n          temp.push(item);\n          console.log(\"enterDate\");\n        }\n      }\n\n      if (select == \"Work Order\") {\n        // WO for Work Order or whatever it stands for in your context\n        if (Number(item.wo) === Number(search)) {\n          temp.push(item);\n          console.log(\"enterWO\");\n        }\n      }\n\n      if (select == \"Product Number\") {\n        // WO for Work Order or whatever it stands for in your context\n        if (Number(item.pn) === Number(search)) {\n          temp.push(item);\n          console.log(\"enterWO\");\n        }\n      }\n\n      if (select == \"Description\") {\n        if (item.desc.toLowerCase().indexOf(search.toLowerCase()) > -1) {\n          temp.push(item);\n          console.log(\"enterDescription\");\n        }\n      } // if (select == \"Number\") {\n      //   const numberFromItem = item.split(\",\")[1].split(\":\")[1];\n      //   if (Number(numberFromItem) === Number(search)) {\n      //     temp.push(item);\n      //     console.log(\"enter Number\");\n      //   }\n      // }\n\n    });\n    console.log(temp);\n    setLabels(labelBase);\n    setSortCheck(sortCheckBase);\n    setInfo(temp);\n  } //////sorting items//////\n\n\n  var labelBase = [\"name\", \"date\", \"w/o\", \"p/n\", \"s/n\"];\n  var labelBaseNames = [\"name\", \"date\", \"wo\", \"pn\", \"sn\"];\n  var sortCheckBase = [false, false, false, false, false];\n\n  var _useState11 = useState(labelBase),\n      labels = _useState11[0],\n      setLabels = _useState11[1];\n\n  var _useState12 = useState(sortCheckBase),\n      sortCheck = _useState12[0],\n      setSortCheck = _useState12[1];\n\n  var hold = \"↓↑\";\n\n  function sortCheckAll(pos) {\n    if (!sortCheck[pos]) {\n      info.sort(function (a, b) {\n        if (pos === 0 || pos === 5) {\n          return a[labelBaseNames[pos]].localeCompare(b[labelBaseNames[pos]]);\n        } else if (pos === 1) {\n          return Date.parse(a[labelBaseNames[pos]]) - Date.parse(b[labelBaseNames[pos]]);\n        } else {\n          return Number(a[labelBaseNames[pos]]) - Number(b[labelBaseNames[pos]]);\n        }\n      });\n      setLabels(labelBase);\n      setLabels(function (prevLabels) {\n        return [].concat(_toConsumableArray(prevLabels.slice(0, pos)), [labelBase[pos] + \"↓\"], _toConsumableArray(prevLabels.slice(pos + 1)));\n      });\n      setSortCheck(function (prevSortCheck) {\n        return prevSortCheck.map(function (_, index) {\n          return index === pos;\n        });\n      });\n    } else {\n      info.sort(function (a, b) {\n        return Number(b.wo) - Number(a.wo);\n      });\n      info.sort(function (a, b) {\n        if (pos === 0 || pos === 5) {\n          return b[labelBaseNames[pos]].localeCompare(a[labelBaseNames[pos]]);\n        } else if (pos === 1) {\n          return Date.parse(b[labelBaseNames[pos]]) - Date.parse(a[labelBaseNames[pos]]);\n        } else {\n          return Number(b[labelBaseNames[pos]]) - Number(a[labelBaseNames[pos]]);\n        }\n      });\n      setLabels(function (prevLabels) {\n        return [].concat(_toConsumableArray(prevLabels.slice(0, pos)), [labelBase[pos] + \"↑\"], _toConsumableArray(prevLabels.slice(pos + 1)));\n      });\n      setSortCheck(function (prevSortCheck) {\n        return [].concat(_toConsumableArray(prevSortCheck.slice(0, pos)), [false], _toConsumableArray(prevSortCheck.slice(pos + 1)));\n      });\n    }\n  } // Start the fetch operation as soon as\n  // the page loads\n  // if (typeof window !== \"undefined\") {\n\n\n  useEffect(function () {\n    // window.addEventListener(\"load\", () => {\n    console.log(\"enter 1\");\n    fetchData(); // displayData();\n\n    console.log(\"not too bad\"); // });\n    // }\n  }, [router.route]); // runs every time `router.route` changes\n\n  function fetchStuff() {\n    return _fetchStuff.apply(this, arguments);\n  }\n\n  function _fetchStuff() {\n    _fetchStuff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, id, cityRef;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = [];\n              id = [];\n              _context3.next = 4;\n              return db.collection(\"Test\").get().then(function (querySnapshot) {\n                // Loop through the data and store\n                // it in array to display\n                querySnapshot.forEach(function (element) {\n                  console.log(\"enter 2\");\n                  console.log(element.id);\n                  id.push(element.id);\n                  data.push(element.data());\n                });\n              });\n\n            case 4:\n              cityRef = _context3.sent;\n              console.log(data);\n              setID(id);\n              console.log(ids);\n              return _context3.abrupt(\"return\", [data, id]);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchStuff.apply(this, arguments);\n  }\n\n  function toDateTime(secs) {\n    var t = new Date(1970, 0, 1); // Epoch\n\n    t.setSeconds(secs);\n    return t;\n  }\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var input, type, datas, data, itemValue, dateStorage, _iterator, _step, _step$value, index, value;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (router.query.inputText && router.query.selectedType) {\n                input = router.query.inputText;\n                type = router.query.selectedType; // window.location.reload();\n                // Now you have the input and type, you can do whatever you want with it\n\n                console.log(input, type);\n                setSelect(type);\n                setSearch(input);\n              }\n\n              _context4.next = 3;\n              return fetchStuff();\n\n            case 3:\n              datas = _context4.sent;\n              data = datas[0];\n              itemValue = [];\n              dateStorage = [];\n              data.map(function (elements) {\n                return dateStorage.push(toDateTime(elements.date.seconds).getMonth() + 1 + \"/\" + toDateTime(elements.date.seconds).getDate() + \"/\" + toDateTime(elements.date.seconds).getFullYear());\n              });\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], value = _step$value[1];\n                  data[index].date = dateStorage[index];\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              console.log(data);\n              setInfo(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n              });\n              setBackupInfo(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n              });\n              setID(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), _toConsumableArray(datas[1]));\n              });\n              console.log(data);\n              console.log(info);\n              console.log(ids); // router.reload();\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  var rowSelect = function rowSelect(id) {\n    console.log(id);\n    router.push(\"item/\" + id);\n  };\n\n  var _useState13 = useState(),\n      gPos = _useState13[0],\n      setGPos = _useState13[1];\n\n  var _useState14 = useState(),\n      gIde = _useState14[0],\n      setGIde = _useState14[1];\n\n  var checkDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pos, ide, name) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDItem(name);\n              setGPos(pos);\n              setGIde(ide);\n              console.log(gPos + \",\" + gIde);\n              handleShow();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkDelete(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var deleteItem = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var cityRef;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(gPos + \",\" + gIde);\n              setInfo(info.filter(function (o, i) {\n                return gPos !== i;\n              }));\n              cityRef = db.collection(\"Test\").doc(gIde)[\"delete\"]();\n              handleClose();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteItem() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //styling\n\n\n  var _useState15 = useState(null),\n      hoverIndex = _useState15[0],\n      setHoverIndex = _useState15[1];\n\n  var hoverStyle = function hoverStyle(index) {\n    return {\n      backgroundColor: hoverIndex === index ? \"#ddd\" : \"transparent\",\n      // Change colors as needed\n      textAlign: \"center\",\n      cursor: \"default\"\n    };\n  };\n\n  return __jsx(LoggedIn, null, __jsx(Modal, {\n    show: show,\n    onHide: handleClose\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"Delete\")), __jsx(Modal.Body, null, \"Would you like to delete \\\"\", dItem, \"\\\"\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"primary\",\n    onClick: deleteItem\n  }, \"Yes\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose\n  }, \"No\"))), __jsx(Container, {\n    className: \"\".concat(styles.myCustomContainer, \" d-flex align-items-center justify-content-center\"),\n    style: {\n      minHeight: \"100vh\",\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"100%\",\n      margin: \"0 auto\"\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Card.Body, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Main Menu\"), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, labels.map(function (item, index) {\n    return __jsx(\"th\", {\n      style: hoverStyle(index),\n      onMouseOver: function onMouseOver() {\n        return setHoverIndex(index);\n      },\n      onMouseOut: function onMouseOut() {\n        return setHoverIndex(null);\n      },\n      onClick: function onClick() {\n        return sortCheckAll(index);\n      }\n    }, item);\n  }))), __jsx(\"tbody\", null, info.map(function (item, index) {\n    return __jsx(\"tr\", {\n      \"class\": \"clickable-row\",\n      key: index // onClick={() => rowSelect(ids[index])}\n\n    }, __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      onClick: function onClick() {\n        return rowSelect(ids[index]);\n      }\n    }, item.name), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      onClick: function onClick() {\n        return rowSelect(ids[index]);\n      }\n    }, \" \", item.date, \" \"), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      onClick: function onClick() {\n        return rowSelect(ids[index]);\n      }\n    }, \" \", item.wo, \" \"), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      onClick: function onClick() {\n        return rowSelect(ids[index]);\n      }\n    }, \" \", item.pn, \" \"), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      onClick: function onClick() {\n        return rowSelect(ids[index]);\n      }\n    }, \" \", item.sn, \" \"), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return checkDelete(index, ids[index], item.name);\n      },\n      id: ids[index],\n      variant: \"danger\"\n    }, \"X\")));\n  }))), __jsx(Form, {\n    className: \"d-flex\",\n    style: {\n      paddingBottom: \"10px\"\n    }\n  }, __jsx(FormControl, {\n    type: showListSearch,\n    placeholder: \"Search\",\n    className: \"me-2\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: showList,\n    onMouseEnter: showDropdown,\n    onMouseLeave: hideDropdown,\n    style: {\n      marginTop: \"-5px\"\n    } // Adjust this value as needed\n\n  }, __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Name\") & setShowListSearch(\"text\");\n    }\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Date\") & setShowListSearch(\"date\");\n    }\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Work Order\") & setShowListSearch(\"number\");\n    }\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Product Number\") & setShowListSearch(\"number\");\n    }\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Description\") & setShowListSearch(\"text\");\n    }\n  }, \"Description\")), __jsx(Button, {\n    variant: \"info\",\n    onClick: searchFilter\n  }, \"Search\")), LoadingButton(\"secondary\", \"Add New Item\", \"Warehousedb/ModItem\"), __jsx(\"a\", {\n    style: {\n      paddingLeft: \"10px\",\n      paddingRight: \"10px\"\n    }\n  }), \" \", LoadingButton(\"primary\", \"Back\", \"Warehousedb/WarehouseSelect\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}