{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\clientSearch.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Card, Row, Col, FormControl, Button, Spinner } from \"react-bootstrap\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../utils/fetchAssociations\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport styles from \"../../styles/MainSearch.module.css\"; // import styles from \"../../styles/ClientPage.module.css\";\n\nconst ClientPage = () => {\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: clientSearchTerm,\n    1: setClientSearchTerm\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const router = useRouter(); // Fetch clients when the component mounts\n\n  useEffect(() => {\n    const fetchClientData = async () => {\n      try {\n        const clientsData = await fetchClients();\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchClientData();\n  }, []); // Handle search input changes\n\n  const handleSearchChange = event => {\n    setClientSearchTerm(event.target.value);\n  }; // Handle client selection\n\n\n  const handleSelectClient = clientId => {\n    console.log(\"Selected client ID:\", clientId); // Redirect to client-specific page\n\n    router.push(`client/${clientId}`);\n  }; // Handle client info button click\n\n\n  const handleClientInfo = clientId => {\n    router.push(`client/${clientId}/addClient`);\n  }; // Clear search input\n\n\n  const clearSelection = () => {\n    setClientSearchTerm(\"\");\n  };\n\n  const addClient = () => {\n    const randomNumber = Math.floor(10000 + Math.random() * 90000); // Navigate to the new route with the random number\n\n    router.push(`client/AIS${randomNumber}/addClient`);\n  };\n\n  return __jsx(Container, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Clients\"), isLoading ? __jsx(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Loading...\"))) : __jsx(React.Fragment, null, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    value: clientSearchTerm,\n    onChange: handleSearchChange,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: clearSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }, \"Clear Search\")), __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"w-100\",\n    onClick: addClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, \"Add New Client\")), __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: () => router.push(\"../Warehousedb/WarehouseSelect\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }, \"back\"))))), __jsx(ClientTable, {\n    clients: clients.filter(client => (client.name || \"\").toLowerCase().includes(clientSearchTerm.toLowerCase())),\n    onSelectClient: handleSelectClient,\n    onInfoClick: handleClientInfo,\n    isClientSearch: true // clearSelection={clearSelection}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default ClientPage;","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/clientSearch.js"],"names":["React","useState","useEffect","Container","Card","Row","Col","FormControl","Button","Spinner","useRouter","fetchClients","ClientTable","styles","ClientPage","clients","setClients","clientSearchTerm","setClientSearchTerm","isLoading","setIsLoading","router","fetchClientData","clientsData","error","console","handleSearchChange","event","target","value","handleSelectClient","clientId","log","push","handleClientInfo","clearSelection","addClient","randomNumber","Math","floor","random","minHeight","span","offset","filter","client","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  FormControl,\n  Button,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../utils/fetchAssociations\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport styles from \"../../styles/MainSearch.module.css\";\n\n// import styles from \"../../styles/ClientPage.module.css\";\n\nconst ClientPage = () => {\n  const [clients, setClients] = useState([]);\n  const [clientSearchTerm, setClientSearchTerm] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  // Fetch clients when the component mounts\n  useEffect(() => {\n    const fetchClientData = async () => {\n      try {\n        const clientsData = await fetchClients();\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchClientData();\n  }, []);\n\n  // Handle search input changes\n  const handleSearchChange = (event) => {\n    setClientSearchTerm(event.target.value);\n  };\n\n  // Handle client selection\n  const handleSelectClient = (clientId) => {\n    console.log(\"Selected client ID:\", clientId);\n    // Redirect to client-specific page\n    router.push(`client/${clientId}`);\n  };\n\n  // Handle client info button click\n  const handleClientInfo = (clientId) => {\n    router.push(`client/${clientId}/addClient`);\n  };\n  \n\n  // Clear search input\n  const clearSelection = () => {\n    setClientSearchTerm(\"\");\n  };\n\n  const addClient = () => {\n    const randomNumber = Math.floor(10000 + Math.random() * 90000);\n  \n  // Navigate to the new route with the random number\n  router.push(`client/AIS${randomNumber}/addClient`);\n  };\n\n  return (\n    <Container className=\"py-4\">\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Clients</h2>\n          {isLoading ? (\n            <div\n              className=\"d-flex justify-content-center align-items-center\"\n              style={{ minHeight: \"300px\" }}\n            >\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          ) : (\n            <>\n              <Row className=\"mb-3\">\n                <Col md={{ span: 6, offset: 3 }}>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Search by name\"\n                    value={clientSearchTerm}\n                    onChange={handleSearchChange}\n                    className=\"mb-3\"\n                  />\n                  <Row className=\"mb-3\">\n                    <Col md={4}>\n                      <Button\n                        variant=\"secondary\"\n                        className=\"w-100\"\n                        onClick={clearSelection}\n                      >\n                        Clear Search\n                      </Button>\n                    </Col>\n                    <Col md={4}>\n                      <Button\n                        variant=\"primary\"\n                        className=\"w-100\"\n                        onClick={addClient}\n                      >\n                        Add New Client\n                      </Button>\n                    </Col>\n                    <Col md={4}>\n                      <Button\n                        variant=\"secondary\"\n                        className=\"w-100\"\n                        onClick={() => router.push(\"../Warehousedb/WarehouseSelect\")}\n                      >\n                        back\n                      </Button>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n              <ClientTable\n                clients={clients.filter((client) =>\n                  (client.name || \"\")\n                    .toLowerCase()\n                    .includes(clientSearchTerm.toLowerCase())\n                )}\n                onSelectClient={handleSelectClient}\n                onInfoClick={handleClientInfo}\n                isClientSearch={true}\n                // clearSelection={clearSelection}\n              />\n            </>\n          )}\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default ClientPage;\n"]},"metadata":{},"sourceType":"module"}