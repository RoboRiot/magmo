{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\item\\\\[id]\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Row, Col, Modal, FormControl, Collapse, InputGroup, ButtonGroup } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../../../../context/AuthUserContext\";\nimport firebase from \"../../../../context/Firebase\";\nimport LoggedIn from \"../../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../../utils/ClientTable\";\nimport ClientInfoModal from \"../../ClientInfoModal\";\nimport ParentModal from \"../../AddItem/parentModal\";\nimport dynamic from \"next/dynamic\";\nimport InfoModal from \"../../InfoModal\";\nimport MachineSelectionModal from \"./MachineSelectionModal\";\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\nimport NewLocal from \"./NewLocal\"; //inflow API\n\nimport InflowAPI from \"../../../../utils/inflowAPI\"; // Import for SSR\n\n// === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\nfunction buildLocalLocObject(loc) {\n  var _loc$section, _loc$section2;\n\n  var o = {};\n  if (loc.region) o.region = loc.region;\n  if ((_loc$section = loc.section) !== null && _loc$section !== void 0 && _loc$section.letter && (_loc$section2 = loc.section) !== null && _loc$section2 !== void 0 && _loc$section2.number) o.section = loc.section; // pick up the new singular fields, too:\n\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\n  return o;\n} // This will only load the component on the client-side.\n\n\nvar BarcodeScannerComponent = dynamic(_c = function _c() {\n  return import(\"react-qr-barcode-scanner\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-qr-barcode-scanner\")];\n    },\n    modules: [\"NewSearch\\\\item\\\\[id]\\\\index.js -> \" + \"react-qr-barcode-scanner\"]\n  }\n}); // Simulates a network request delay.\n\n_c2 = BarcodeScannerComponent;\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n} // Custom LoadingButton component.\n\n\nfunction LoadingButton(_ref) {\n  _s();\n\n  var type = _ref.type,\n      name = _ref.name,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading) {\n      simulateNetworkRequest().then(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  var handleClick = function handleClick() {\n    return setLoading(true);\n  };\n\n  return __jsx(Link, {\n    href: \"/\".concat(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loading…\" : name));\n}\n\n_s(LoadingButton, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c3 = LoadingButton;\nexport var __N_SSP = true;\nexport default function DisplayItem() {\n  _s2();\n\n  var _initialItem,\n      _initialItem2,\n      _initialItem3,\n      _initialItem4,\n      _initialItem5,\n      _initialItem6,\n      _this = this,\n      _descriptions$selecte3,\n      _descriptions$selecte4,\n      _newLocalFrom$section,\n      _newLocalFrom$section2,\n      _newLocalCurrent$sect,\n      _newLocalCurrent$sect2;\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut; // const { id } = router.query;\n\n\n  var idFromRouter = router.query.id;\n  var initialId = ((_initialItem = initialItem) === null || _initialItem === void 0 ? void 0 : _initialItem.id) || idFromRouter;\n\n  var _useState2 = useState({\n    name: ((_initialItem2 = initialItem) === null || _initialItem2 === void 0 ? void 0 : _initialItem2.name) || \"\",\n    pn: Array.isArray((_initialItem3 = initialItem) === null || _initialItem3 === void 0 ? void 0 : _initialItem3.pn) ? initialItem.pn : (_initialItem4 = initialItem) !== null && _initialItem4 !== void 0 && _initialItem4.pn ? [initialItem.pn] : [],\n    sn: Array.isArray((_initialItem5 = initialItem) === null || _initialItem5 === void 0 ? void 0 : _initialItem5.sn) ? initialItem.sn : (_initialItem6 = initialItem) !== null && _initialItem6 !== void 0 && _initialItem6.sn ? [initialItem.sn] : [],\n    price: \"\",\n    status: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    poNumber: \"\",\n    trackingNumber: \"\",\n    localSN: \"\",\n    // NEW: localSN field added here\n    arrival_date: \"\",\n    // NEW FIELD: Arrival Date\n    visible: true\n  }),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  }),\n      newLocalFrom = _useState3[0],\n      setNewLocalFrom = _useState3[1];\n\n  var _useState4 = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  }),\n      newLocalCurrent = _useState4[0],\n      setNewLocalCurrent = _useState4[1]; // New states for separate client selections:\n\n\n  var _useState5 = useState(null),\n      selectedClientFrom = _useState5[0],\n      setSelectedClientFrom = _useState5[1];\n\n  var _useState6 = useState(null),\n      selectedClientCurrent = _useState6[0],\n      setSelectedClientCurrent = _useState6[1];\n\n  var _useState7 = useState(null),\n      selectedMachine = _useState7[0],\n      setSelectedMachine = _useState7[1];\n\n  var _useState8 = useState(null),\n      selectedCurrentMachine = _useState8[0],\n      setSelectedCurrentMachine = _useState8[1]; // whenever you pick a new “From” client or machine, clear the old From-loc:\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom, selectedMachine]);\n  // const didMountFrom = useRef(false);\n  // useEffect(() => {\n  //   if (!didMountFrom.current) {\n  //     // first time through (the data-load phase), don’t clear\n  //     didMountFrom.current = true;\n  //     return;\n  //   }\n  //   // thereafter, when the user picks a new client or machine, clear:\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  //   setLocalLocFrom(\"\");\n  // }, [selectedClientFrom, selectedMachine]);\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const [didFetch, setDidFetch] = useState(false);\n  // useEffect(() => {\n  //   if (!didFetch) {\n  //     // we’re in the data-load phase, skip clearing\n  //     setDidFetch(true);\n  //     return;\n  //   }\n  //   // only clear on subsequent user changes:\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // These arrays will be populated from Firebase.\n\n\n  var _useState9 = useState([]),\n      pnOptions = _useState9[0],\n      setPnOptions = _useState9[1];\n\n  var _useState10 = useState([]),\n      snOptions = _useState10[0],\n      setSnOptions = _useState10[1];\n\n  var _useState11 = useState([{\n    description: \"\",\n    date: \"\"\n  }]),\n      descriptions = _useState11[0],\n      setDescriptions = _useState11[1];\n\n  var _useState12 = useState([{\n    workOrder: \"\",\n    date: \"\"\n  }]),\n      workOrders = _useState12[0],\n      setWorkOrders = _useState12[1];\n\n  var _useState13 = useState([]),\n      clients = _useState13[0],\n      setClients = _useState13[1];\n\n  var _useState14 = useState([]),\n      photos = _useState14[0],\n      setPhotos = _useState14[1];\n\n  var _useState15 = useState(false),\n      show = _useState15[0],\n      setShow = _useState15[1];\n\n  var _useState16 = useState(false),\n      showErr = _useState16[0],\n      setShowErr = _useState16[1];\n\n  var _useState17 = useState(\"N/A\"),\n      Err = _useState17[0],\n      setErr = _useState17[1];\n\n  var _useState18 = useState(false),\n      showDescModal = _useState18[0],\n      setShowDescModal = _useState18[1];\n\n  var _useState19 = useState(false),\n      showWoModal = _useState19[0],\n      setShowWoModal = _useState19[1];\n\n  var _useState20 = useState(false),\n      showClientModal = _useState20[0],\n      setShowClientModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      showMachineModal = _useState21[0],\n      setShowMachineModal = _useState21[1];\n\n  var _useState22 = useState(false),\n      showParentModal = _useState22[0],\n      setShowParentModal = _useState22[1];\n\n  var _useState23 = useState(false),\n      showCameraModal = _useState23[0],\n      setShowCameraModal = _useState23[1];\n\n  var _useState24 = useState(false),\n      showSaveModal = _useState24[0],\n      setShowSaveModal = _useState24[1];\n\n  var _useState25 = useState(false),\n      showPrintModal = _useState25[0],\n      setShowPrintModal = _useState25[1];\n\n  var _useState26 = useState(false),\n      machineSelectionModal = _useState26[0],\n      setMachineSelectionModal = _useState26[1];\n\n  var _useState27 = useState(0),\n      selectedDesc = _useState27[0],\n      setSelectedDesc = _useState27[1];\n\n  var _useState28 = useState(null),\n      selectedClient = _useState28[0],\n      setSelectedClient = _useState28[1];\n\n  var _useState29 = useState(null),\n      selectedParent = _useState29[0],\n      setSelectedParent = _useState29[1];\n\n  var _useState30 = useState(null),\n      TheMachine = _useState30[0],\n      setTheMachine = _useState30[1];\n\n  var _useState31 = useState([]),\n      machineOptions = _useState31[0],\n      setMachineOptions = _useState31[1];\n\n  var _useState32 = useState(\"\"),\n      search = _useState32[0],\n      setSearch = _useState32[1];\n\n  var _useState33 = useState(null),\n      capturedPhoto = _useState33[0],\n      setCapturedPhoto = _useState33[1];\n\n  var _useState34 = useState(\"environment\"),\n      cameraFacing = _useState34[0],\n      setCameraFacing = _useState34[1];\n\n  var _useState35 = useState(false),\n      addToWebsite = _useState35[0],\n      setAddToWebsite = _useState35[1];\n\n  var _useState36 = useState(false),\n      machinePick = _useState36[0],\n      setMachinePick = _useState36[1];\n\n  var _useState37 = useState(0),\n      freqItem = _useState37[0],\n      setFreqItem = _useState37[1];\n\n  var _useState38 = useState(0),\n      usagePastYear = _useState38[0],\n      setUsagePastYear = _useState38[1];\n\n  var _useState39 = useState(0),\n      machineFrequency = _useState39[0],\n      setMachineFrequency = _useState39[1]; // State for the extra (dimensions/price/DOM/PO Number) section.\n\n\n  var _useState40 = useState(false),\n      showExtra = _useState40[0],\n      setShowExtra = _useState40[1]; // State for the local warehouse location inputs.\n\n\n  var _useState41 = useState(\"\"),\n      localLocFrom = _useState41[0],\n      setLocalLocFrom = _useState41[1];\n\n  var _useState42 = useState(\"\"),\n      localLocCurrent = _useState42[0],\n      setLocalLocCurrent = _useState42[1]; // New state for DOM (Date of Manufacture)\n\n\n  var _useState43 = useState(\"\"),\n      DOM = _useState43[0],\n      setDOM = _useState43[1]; // New state for OEM, Modality, and Model.\n\n\n  var _useState44 = useState(\"\"),\n      oem = _useState44[0],\n      setOem = _useState44[1];\n\n  var _useState45 = useState(\"\"),\n      modality = _useState45[0],\n      setModality = _useState45[1];\n\n  var _useState46 = useState(\"\"),\n      model = _useState46[0],\n      setModel = _useState46[1]; // More info modal state.\n\n\n  var _useState47 = useState(false),\n      showInfoModal = _useState47[0],\n      setShowInfoModal = _useState47[1];\n\n  var _useState48 = useState(\"\"),\n      itemName = _useState48[0],\n      setItemName = _useState48[1];\n\n  var _useState49 = useState(false),\n      machineFieldsInitialized = _useState49[0],\n      setMachineFieldsInitialized = _useState49[1]; // near the top of DisplayItem()\n\n\n  var _useState50 = useState(false),\n      showLocalModalFrom = _useState50[0],\n      setShowLocalModalFrom = _useState50[1];\n\n  var _useState51 = useState(false),\n      showLocalModalCurrent = _useState51[0],\n      setShowLocalModalCurrent = _useState51[1];\n\n  var openLocalModalFrom = function openLocalModalFrom() {\n    return setShowLocalModalFrom(true);\n  };\n\n  var closeLocalModalFrom = function closeLocalModalFrom() {\n    return setShowLocalModalFrom(false);\n  };\n\n  var openLocalModalCurrent = function openLocalModalCurrent() {\n    return setShowLocalModalCurrent(true);\n  };\n\n  var closeLocalModalCurrent = function closeLocalModalCurrent() {\n    return setShowLocalModalCurrent(false);\n  }; // at the top of DisplayItem()\n\n\n  var _useState52 = useState(false),\n      showNewLocalModalFrom = _useState52[0],\n      setShowNewLocalModalFrom = _useState52[1];\n\n  var _useState53 = useState(false),\n      showNewLocalModalCurrent = _useState53[0],\n      setShowNewLocalModalCurrent = _useState53[1];\n\n  function formatLoc(loc) {\n    var _loc$section3, _loc$section4;\n\n    if (!loc) return \"\";\n    var parts = [];\n    if (loc.region) parts.push(loc.region);\n    if ((_loc$section3 = loc.section) !== null && _loc$section3 !== void 0 && _loc$section3.letter && (_loc$section4 = loc.section) !== null && _loc$section4 !== void 0 && _loc$section4.number) parts.push(\"\".concat(loc.section.letter).concat(loc.section.number));\n    if (loc.bin) parts.push(\"B\".concat(loc.bin));\n    if (loc.pallet) parts.push(\"P\".concat(loc.pallet));\n    return parts.join(\"–\");\n  } // when the From-client changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom]);\n  // // when the From-machine changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedMachine]);\n  // same for Current:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n\n  var handleSendToInflow = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _descriptions$selecte, name, description, imageUrls;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              name = items.name;\n              description = ((_descriptions$selecte = descriptions[selectedDesc]) === null || _descriptions$selecte === void 0 ? void 0 : _descriptions$selecte.description) || \"\"; // gather every photo URL from Firebase Storage\n\n              imageUrls = photos.map(function (p) {\n                return p.url;\n              });\n              _context.next = 6;\n              return InflowAPI.upsertProduct({\n                name: name,\n                description: description,\n                imageUrls: imageUrls\n              });\n\n            case 6:\n              alert(\"Sent to inFlow successfully!\");\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              alert(\"Error sending to inFlow: \" + _context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function handleSendToInflow() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const [storedMachine, setStoredMachine] = useState(null);\n  // useEffect(() => {\n  //   // once any of these three change, re-merge:\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\n  //     const merged = updateMachineFields(\n  //       TheMachine,\n  //       selectedCurrentMachine,\n  //       selectedMachine\n  //     );\n  //     setOem(merged.oem);\n  //     setModality(merged.modality);\n  //     setModel(merged.model);\n  //   }\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\n  // whenever the “From” client changes:\n\n\n  useEffect(function () {\n    var _selectedClientFrom$n;\n\n    setShowLocalLocFrom((selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n = selectedClientFrom.name) === null || _selectedClientFrom$n === void 0 ? void 0 : _selectedClientFrom$n.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientFrom]); // whenever the “Current” client changes:\n\n  useEffect(function () {\n    var _selectedClientCurren;\n\n    setShowLocalLocCurrent((selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren = selectedClientCurrent.name) === null || _selectedClientCurren === void 0 ? void 0 : _selectedClientCurren.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientCurrent]); // Fetch clients data.\n\n  useEffect(function () {\n    function fetchClientsData() {\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    function _fetchClientsData() {\n      _fetchClientsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var clientsData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetchClients();\n\n              case 3:\n                clientsData = _context2.sent;\n                console.log(clientsData);\n                setClients(clientsData);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Error fetching clients: \", _context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    fetchClientsData();\n  }, []); // Fetch PN and SN options from Firebase.\n\n  useEffect(function () {\n    function fetchPnSn() {\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    function _fetchPnSn() {\n      _fetchPnSn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var db, snapshot, pnSet, snSet, pnArray, snArray;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                db = firebase.firestore();\n                _context3.next = 3;\n                return db.collection(\"Test\").get();\n\n              case 3:\n                snapshot = _context3.sent;\n                pnSet = new Set();\n                snSet = new Set();\n                snapshot.forEach(function (doc) {\n                  var data = doc.data();\n                  if (data.pn) pnSet.add(data.pn);\n                  if (data.sn) snSet.add(data.sn);\n                });\n                pnArray = _toConsumableArray(pnSet);\n                snArray = _toConsumableArray(snSet);\n                setPnOptions(pnArray);\n                setSnOptions(snArray);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    fetchPnSn();\n  }, []);\n  useEffect(function () {\n    if (id) {\n      fetchData();\n    }\n  }, [id]);\n\n  function resolveClientFromMachine(_x, _x2, _x3) {\n    return _resolveClientFromMachine.apply(this, arguments);\n  }\n\n  function _resolveClientFromMachine() {\n    _resolveClientFromMachine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(machineRef, setClient, setMachine) {\n      var isFrom,\n          machineDoc,\n          _machineData$name,\n          machineData,\n          clientDoc,\n          clientName,\n          isSocalInterior,\n          shouldShow,\n          _clientDoc2,\n          _args14 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              isFrom = _args14.length > 3 && _args14[3] !== undefined ? _args14[3] : true;\n              _context14.next = 3;\n              return machineRef.get();\n\n            case 3:\n              machineDoc = _context14.sent;\n\n              if (!machineDoc.exists) {\n                _context14.next = 24;\n                break;\n              }\n\n              machineData = machineDoc.data();\n              setMachine(_objectSpread({\n                id: machineDoc.id\n              }, machineData)); // Determine if the machine is \"interior socal\"\n              // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\n              // if (isSocalInterior) {\n              //   if (isFrom) {\n              //     setShowLocalLocFrom(true);\n              //   } else {\n              //     setShowLocalLocCurrent(true);\n              //   }\n              // } else {\n              // Optionally clear the flag if it is not \"interior socal\"\n              // if (isFrom) {\n              //   setShowLocalLocFrom(false);\n              // } else {\n              //   setShowLocalLocCurrent(false);\n              // }\n              // }\n              // new: fetch client name and combine both checks\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context14.next = 13;\n                break;\n              }\n\n              _context14.next = 10;\n              return machineData.client.get();\n\n            case 10:\n              _context14.t0 = _context14.sent;\n              _context14.next = 14;\n              break;\n\n            case 13:\n              _context14.t0 = null;\n\n            case 14:\n              clientDoc = _context14.t0;\n              clientName = clientDoc && clientDoc.exists ? clientDoc.data().name : null;\n              isSocalInterior = ((_machineData$name = machineData.name) === null || _machineData$name === void 0 ? void 0 : _machineData$name.toLowerCase()) === \"interior socal\";\n              shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\n\n              if (isFrom) {\n                setShowLocalLocFrom(shouldShow);\n              } else {\n                setShowLocalLocCurrent(shouldShow);\n              }\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context14.next = 24;\n                break;\n              }\n\n              _context14.next = 22;\n              return machineData.client.get();\n\n            case 22:\n              _clientDoc2 = _context14.sent;\n\n              if (_clientDoc2.exists) {\n                setClient(_objectSpread({\n                  id: _clientDoc2.id\n                }, _clientDoc2.data()));\n              }\n\n            case 24:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n    return _resolveClientFromMachine.apply(this, arguments);\n  }\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var db, doc, _machineFromData, _machineFromData$name, _machineCurrentData, _machineCurrentData$n, _selectedClientFrom$n2, _selectedClientCurren2, data, normalizedPN, normalizedSN, clientFromDoc, clientCurrentDoc, machineFromData, machineCurrentData, _doc, _doc2, nameFrom, nameCurrent, theMachineData, _theMachineData$oem, _theMachineData$modal, _theMachineData$model, OEM, Modality, Model, merged, parentDoc;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db = firebase.firestore();\n              _context4.next = 3;\n              return db.collection(\"Test\").doc(id).get();\n\n            case 3:\n              doc = _context4.sent;\n\n              if (!doc.exists) {\n                _context4.next = 75;\n                break;\n              }\n\n              console.log(\"test\");\n              data = doc.data();\n              normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\n              normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\n              setItems(_objectSpread(_objectSpread({}, data), {}, {\n                pn: normalizedPN,\n                sn: normalizedSN\n              }));\n              setDescriptions(data.descriptions || []);\n              setWorkOrders(data.workOrders || []);\n              if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\n              if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\n\n              if (data.DOM) {\n                setDOM(data.DOM);\n              } // …after you do setItems, setDescriptions, etc.\n              // load the “newLocal” maps\n\n\n              if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\n              if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent); // Load PO Number if it exists.\n\n              if (data.poNumber) {\n                setItems(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    poNumber: data.poNumber\n                  });\n                });\n              }\n\n              if (!data.ClientFrom) {\n                _context4.next = 23;\n                break;\n              }\n\n              _context4.next = 21;\n              return data.ClientFrom.get();\n\n            case 21:\n              clientFromDoc = _context4.sent;\n\n              if (clientFromDoc.exists) {\n                setSelectedClientFrom(_objectSpread({\n                  id: clientFromDoc.id\n                }, clientFromDoc.data()));\n              }\n\n            case 23:\n              if (!data.ClientCurrent) {\n                _context4.next = 28;\n                break;\n              }\n\n              _context4.next = 26;\n              return data.ClientCurrent.get();\n\n            case 26:\n              clientCurrentDoc = _context4.sent;\n\n              if (clientCurrentDoc.exists) {\n                setSelectedClientCurrent(_objectSpread({\n                  id: clientCurrentDoc.id\n                }, clientCurrentDoc.data()));\n              }\n\n            case 28:\n              if (!(!data.ClientFrom && data.Machine && typeof data.Machine.get === \"function\")) {\n                _context4.next = 32;\n                break;\n              }\n\n              console.log(\"Entered resolveClientFromMachine for Machine (old style for From)\");\n              _context4.next = 32;\n              return resolveClientFromMachine(data.Machine, setSelectedClientFrom, setSelectedMachine, true);\n\n            case 32:\n              if (!(!data.ClientCurrent && data.CurrentMachine && typeof data.CurrentMachine.get === \"function\")) {\n                _context4.next = 36;\n                break;\n              }\n\n              console.log(\"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\");\n              _context4.next = 36;\n              return resolveClientFromMachine(data.CurrentMachine, setSelectedClientCurrent, setSelectedCurrentMachine, false);\n\n            case 36:\n              machineFromData = null;\n              machineCurrentData = null;\n\n              if (!data.MachineFrom) {\n                _context4.next = 44;\n                break;\n              }\n\n              _context4.next = 41;\n              return data.MachineFrom.get();\n\n            case 41:\n              _doc = _context4.sent;\n              machineFromData = _doc.exists ? _doc.data() : null;\n              setSelectedMachine(_objectSpread({\n                id: _doc.id\n              }, _doc.data()));\n\n            case 44:\n              if (!data.MachineCurrent) {\n                _context4.next = 50;\n                break;\n              }\n\n              _context4.next = 47;\n              return data.MachineCurrent.get();\n\n            case 47:\n              _doc2 = _context4.sent;\n              machineCurrentData = _doc2.exists ? _doc2.data() : null;\n              setSelectedCurrentMachine(_objectSpread({\n                id: _doc2.id\n              }, _doc2.data()));\n\n            case 50:\n              nameFrom = (_machineFromData = machineFromData) === null || _machineFromData === void 0 ? void 0 : (_machineFromData$name = _machineFromData.name) === null || _machineFromData$name === void 0 ? void 0 : _machineFromData$name.toLowerCase();\n              nameCurrent = (_machineCurrentData = machineCurrentData) === null || _machineCurrentData === void 0 ? void 0 : (_machineCurrentData$n = _machineCurrentData.name) === null || _machineCurrentData$n === void 0 ? void 0 : _machineCurrentData$n.toLowerCase(); // If the machine’s name is “interior socal”, show that branch:\n              // setShowLocalLocFrom(nameFrom === \"interior socal\");\n              // // Or if your Firestore already has a value for localLocFrom, show it anyway:\n              // if (data.localLocFrom) setShowLocalLocFrom(true);\n              // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\n              // if (data.localLocCurrent) setShowLocalLocCurrent(true);\n              // new: combine machine-name OR client-name check, keep existing-data\n\n              setShowLocalLocFrom(nameFrom === \"interior socal\" || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n2 = selectedClientFrom.name) === null || _selectedClientFrom$n2 === void 0 ? void 0 : _selectedClientFrom$n2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocFrom));\n              setShowLocalLocCurrent(nameCurrent === \"interior socal\" || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren2 = selectedClientCurrent.name) === null || _selectedClientCurren2 === void 0 ? void 0 : _selectedClientCurren2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocCurrent));\n              theMachineData = data.TheMachine || null;\n              setTheMachine(theMachineData);\n\n              if (theMachineData) {\n                // pull both variants, prefer lowercase if it exists\n                OEM = (_theMachineData$oem = theMachineData.oem) !== null && _theMachineData$oem !== void 0 ? _theMachineData$oem : theMachineData.OEM;\n                Modality = (_theMachineData$modal = theMachineData.modality) !== null && _theMachineData$modal !== void 0 ? _theMachineData$modal : theMachineData.Modality;\n                Model = (_theMachineData$model = theMachineData.model) !== null && _theMachineData$model !== void 0 ? _theMachineData$model : theMachineData.Model;\n                setTheMachine(_objectSpread(_objectSpread({}, theMachineData), {}, {\n                  OEM: OEM,\n                  Modality: Modality,\n                  Model: Model\n                }));\n              } // setStoredMachine(theMachineData);\n              // **right here** merge from the three sources you just fetched:\n\n\n              merged = updateMachineFields(theMachineData, machineCurrentData, machineFromData);\n              setOem(merged.oem);\n              setModality(merged.modality);\n              setModel(merged.model);\n              console.log(\"SelectedMachine:\", selectedMachine, \"SelectedCurrentMachine:\", selectedCurrentMachine); // Show local loc inputs if applicable\n              // if (\n              //   selectedMachine &&\n              //   selectedMachine.name &&\n              //   selectedMachine.name.toLowerCase() === \"interior socal\"\n              // ) {\n              //   setShowLocalLocFrom(true);\n              // }\n              // if (\n              //   selectedCurrentMachine &&\n              //   selectedCurrentMachine.name &&\n              //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\n              // ) {\n              //   setShowLocalLocCurrent(true);\n              // }\n\n              if (!data.Parent) {\n                _context4.next = 67;\n                break;\n              }\n\n              _context4.next = 65;\n              return data.Parent.get();\n\n            case 65:\n              parentDoc = _context4.sent;\n              setSelectedParent(_objectSpread({\n                id: parentDoc.id\n              }, parentDoc.data()));\n\n            case 67:\n              _context4.next = 69;\n              return fetchPhotos(id);\n\n            case 69:\n              _context4.next = 71;\n              return checkIfAddedToWebsite(id);\n\n            case 71:\n              _context4.next = 73;\n              return calculateItemFrequencyAndUsage(data.pn);\n\n            case 73:\n              _context4.next = 76;\n              break;\n\n            case 75:\n              router.push({\n                pathname: \"../AddItem/NewItem\",\n                query: {\n                  signal: id\n                }\n              });\n\n            case 76:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchData() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Returns the value for a given field from the highest-priority source.\n\n\n  function getPriorityMachineField(field, theMachine, currentMachine, fromMachine) {\n    console.log(\"the machine: \", theMachine, \"field: \", field);\n\n    if (theMachine && theMachine[field] && theMachine[field] !== \"N/A\" && theMachine[field].trim() !== \"\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field] !== \"N/A\" && currentMachine[field].trim() !== \"\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field] !== \"N/A\" && fromMachine[field].trim() !== \"\") {\n      return fromMachine[field];\n    }\n\n    return \"\";\n  } // Returns an object with updated OEM, modality, and model fields.\n\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getPriorityMachineField(\"OEM\", theMachine, currentMachine, fromMachine),\n      modality: getPriorityMachineField(\"Modality\", theMachine, currentMachine, fromMachine),\n      model: getPriorityMachineField(\"Model\", theMachine, currentMachine, fromMachine)\n    };\n  }\n\n  var calculateItemFrequencyAndUsage = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(pn) {\n      var db, currentDate, oneYearAgo, normalizedPN, itemsSnapshot, usagePastYear;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db = firebase.firestore();\n              currentDate = new Date();\n              oneYearAgo = new Date();\n              oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n              normalizedPN = pn !== undefined ? pn : \"\";\n              _context5.next = 7;\n              return db.collection(\"Test\").where(\"pn\", \"==\", normalizedPN).get();\n\n            case 7:\n              itemsSnapshot = _context5.sent;\n              setFreqItem(itemsSnapshot.size);\n              usagePastYear = 0;\n              itemsSnapshot.forEach(function (doc) {\n                var itemData = doc.data();\n                itemData.workOrders.forEach(function (workOrder) {\n                  var workOrderDate = new Date(workOrder.date);\n\n                  if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n                    usagePastYear++;\n                  }\n                });\n              });\n              setUsagePastYear(usagePastYear);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function calculateItemFrequencyAndUsage(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fetchMachine = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(machineId) {\n      var db, doc, machineData, merged, machinesSnapshot;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              db = firebase.firestore();\n              _context6.next = 3;\n              return db.collection(\"Machine\").doc(machineId).get();\n\n            case 3:\n              doc = _context6.sent;\n\n              if (!doc.exists) {\n                _context6.next = 17;\n                break;\n              }\n\n              machineData = doc.data();\n              setTheMachine(machineData); // re-merge all three sources with correct priority:\n\n              merged = updateMachineFields(machineData, selectedCurrentMachine, selectedMachine);\n              setOem(merged.oem);\n              setModality(merged.modality);\n              setModel(merged.model);\n              _context6.next = 13;\n              return db.collection(\"Machine\").where(\"Model\", \"==\", machineData.Model || machineData.model).get();\n\n            case 13:\n              machinesSnapshot = _context6.sent;\n              setMachineFrequency(machinesSnapshot.size);\n              _context6.next = 18;\n              break;\n\n            case 17:\n              console.error(\"Machine not found\");\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function fetchMachine(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fetchPhotos = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(docID) {\n      var storageRef, listRef, res, urls;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              listRef = storageRef.child(\"Parts/\".concat(docID));\n              _context7.prev = 2;\n              _context7.next = 5;\n              return listRef.listAll();\n\n            case 5:\n              res = _context7.sent;\n              _context7.next = 8;\n              return Promise.all(res.items.map(function (item) {\n                return item.getDownloadURL();\n              }));\n\n            case 8:\n              urls = _context7.sent;\n              console.log(\"Fetched photo URLs:\", urls);\n              setPhotos(urls.map(function (url) {\n                return {\n                  url: url,\n                  file: null\n                };\n              }));\n              _context7.next = 16;\n              break;\n\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.error(\"Error fetching photos: \", _context7.t0);\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 13]]);\n    }));\n\n    return function fetchPhotos(_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var checkIfAddedToWebsite = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(docID) {\n      var db, partsDoc;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db = firebase.firestore();\n              _context8.next = 3;\n              return db.collection(\"Parts\").doc(docID).get();\n\n            case 3:\n              partsDoc = _context8.sent;\n\n              if (partsDoc.exists) {\n                setAddToWebsite(true);\n              }\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function checkIfAddedToWebsite(_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleCloseErr = function handleCloseErr() {\n    return setShowErr(false);\n  };\n\n  var handleShowErr = function handleShowErr() {\n    return setShowErr(true);\n  };\n\n  var handleCloseSaveModal = function handleCloseSaveModal() {\n    return setShowSaveModal(false);\n  };\n\n  var handleClosePrintModal = function handleClosePrintModal() {\n    return setShowPrintModal(false);\n  };\n\n  var handleShowSaveModal = function handleShowSaveModal() {\n    return setShowSaveModal(true);\n  };\n\n  var handleShowPrintModal = function handleShowPrintModal() {\n    return setShowPrintModal(true);\n  };\n\n  var handleMachineSelectionModal = function handleMachineSelectionModal() {\n    return setMachineSelectionModal(false);\n  };\n\n  var handleCloseDescModal = function handleCloseDescModal() {\n    return setShowDescModal(false);\n  };\n\n  var handleShowDescModal = function handleShowDescModal() {\n    return setShowDescModal(true);\n  };\n\n  var handleCloseWoModal = function handleCloseWoModal() {\n    return setShowWoModal(false);\n  };\n\n  var handleShowWoModal = function handleShowWoModal() {\n    return setShowWoModal(true);\n  };\n\n  var handleCloseClientModal = function handleCloseClientModal() {\n    return setShowClientModal(false);\n  };\n\n  var handleShowClientModal = function handleShowClientModal() {\n    return setShowClientModal(true);\n  };\n\n  var handleCloseMachineModal = function handleCloseMachineModal() {\n    return setShowMachineModal(false);\n  };\n\n  var handleShowMachineModal = function handleShowMachineModal() {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n\n  var handleCloseParentModal = function handleCloseParentModal() {\n    return setShowParentModal(false);\n  };\n\n  var handleShowParentModal = function handleShowParentModal() {\n    return setShowParentModal(true);\n  }; // When a client is selected from the client table.\n\n\n  var handleClientInfo = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(clientId) {\n      var db, clientDoc, clientData, machinePromises, machineDocs, machines;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              // Clear any previously selected machine and local loc info for this branch.\n              if (machinePick) {\n                setSelectedMachine(null);\n                setShowLocalLocFrom(false);\n              } else {\n                setSelectedCurrentMachine(null);\n                setShowLocalLocCurrent(false);\n              }\n\n              db = firebase.firestore();\n              _context9.next = 4;\n              return db.collection(\"Client\").doc(clientId).get();\n\n            case 4:\n              clientDoc = _context9.sent;\n\n              if (!clientDoc.exists) {\n                _context9.next = 16;\n                break;\n              }\n\n              clientData = _objectSpread({\n                id: clientDoc.id\n              }, clientDoc.data());\n\n              if (machinePick) {\n                setSelectedClientFrom(clientData);\n              } else {\n                setSelectedClientCurrent(clientData);\n              } // after setting selectedClientFrom/Current:\n\n\n              if (clientData.name === \"SoCalWarehouse\") {\n                if (machinePick) setShowLocalLocFrom(true);else setShowLocalLocCurrent(true);\n              } // Fetch machines for this client:\n\n\n              machinePromises = clientData.machines.map(function (machineRef) {\n                return machineRef.get();\n              });\n              _context9.next = 12;\n              return Promise.all(machinePromises);\n\n            case 12:\n              machineDocs = _context9.sent;\n              machines = machineDocs.map(function (machineDoc) {\n                return _objectSpread({\n                  id: machineDoc.id\n                }, machineDoc.data());\n              });\n              setMachineOptions(machines); // Close the client modal\n\n              handleCloseClientModal();\n\n            case 16:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleClientInfo(_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }(); // Reordering function for dropdowns.\n\n\n  var reorderArray = function reorderArray(arr, selectedValue) {\n    var newArr = arr.filter(function (val) {\n      return val !== selectedValue;\n    });\n    return [selectedValue].concat(_toConsumableArray(newArr));\n  };\n\n  var _useState54 = useState(false),\n      addingNewPn = _useState54[0],\n      setAddingNewPn = _useState54[1];\n\n  var _useState55 = useState(\"\"),\n      newPn = _useState55[0],\n      setNewPn = _useState55[1];\n\n  var _useState56 = useState(false),\n      addingNewSn = _useState56[0],\n      setAddingNewSn = _useState56[1];\n\n  var _useState57 = useState(\"\"),\n      newSn = _useState57[0],\n      setNewSn = _useState57[1];\n\n  var handlePnSelect = function handlePnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedPn = Array.isArray(prev.pn) ? _toConsumableArray(prev.pn) : [];\n      updatedPn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: updatedPn\n      });\n    });\n  };\n\n  var handleSnSelect = function handleSnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedSn = Array.isArray(prev.sn) ? _toConsumableArray(prev.sn) : [];\n      updatedSn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: updatedSn\n      });\n    });\n  };\n\n  var handleAddNewPn = function handleAddNewPn() {\n    if (newPn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          pn: [].concat(_toConsumableArray(prev.pn), [newPn.trim()])\n        });\n      });\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  var handleAddNewSn = function handleAddNewSn() {\n    if (newSn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          sn: [].concat(_toConsumableArray(prev.sn), [newSn.trim()])\n        });\n      });\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  }; // Generate custom document ID if needed.\n\n\n  var generateCustomID = function generateCustomID() {\n    var randomNum = Math.floor(10000 + Math.random() * 90000);\n    return \"AIS\".concat(randomNum);\n  };\n\n  function shallowClean(obj) {\n    var newObj = {};\n\n    for (var key in obj) {\n      console.log(key, obj[key]);\n\n      if (obj.hasOwnProperty(key)) {\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\n      }\n    }\n\n    return newObj;\n  }\n\n  function toSend() {\n    return _toSend.apply(this, arguments);\n  } // Additional state for local warehouse location inputs.\n\n\n  function _toSend() {\n    _toSend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n      var _fromDetails$section, _fromDetails$section2, _currentDetails$secti, _currentDetails$secti2;\n\n      var db, currentUser, userEmail, machineData, formattedItems, fromDetails, currentDetails, docId, newDocId, machineRef, machineDoc, currentMachineRef, currentMachineDoc, cleanFormattedItems, _machineRef, _machineDoc, _currentMachineRef, _currentMachineDoc, _machineRef2, _machineDoc2, _currentMachineRef2, _currentMachineDoc2;\n\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              db = firebase.firestore();\n              currentUser = firebase.auth().currentUser;\n              userEmail = currentUser ? currentUser.email : \"unknown\"; // Always use the current state values for OEM, modality, and model.\n\n              machineData = _objectSpread(_objectSpread({}, TheMachine || {}), {}, {\n                oem: oem,\n                modality: modality,\n                model: model\n              });\n              formattedItems = _objectSpread(_objectSpread({}, items), {}, {\n                descriptions: descriptions,\n                workOrders: workOrders\n              }); // Remove any unused fields.\n\n              formattedItems.status = items.status || \"\";\n              formattedItems.DOM = DOM; // Date of Manufacture\n\n              formattedItems.localLocFrom = localLocFrom || \"\";\n              formattedItems.localLocCurrent = localLocCurrent || \"\";\n              formattedItems.date = items.date || \"\";\n              formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n\n              formattedItems.poNumber = items.poNumber || \"\";\n              formattedItems.trackingNumber = items.trackingNumber || \"\";\n              formattedItems.TheMachine = machineData || {};\n              formattedItems.addedToWebsite = addToWebsite; // NEW: Add the user's email under the field \"user\"\n\n              formattedItems.lastEdited = userEmail; // Clean pn and sn arrays to replace undefined values with an empty string.\n\n              formattedItems.pn = (items.pn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              });\n              formattedItems.sn = (items.sn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              });\n              fromDetails = buildLocalLocObject(newLocalFrom);\n              currentDetails = buildLocalLocObject(newLocalCurrent);\n              console.log(\"From Details: \" + fromDetails.region + \" \" + ((_fromDetails$section = fromDetails.section) === null || _fromDetails$section === void 0 ? void 0 : _fromDetails$section.letter) + ((_fromDetails$section2 = fromDetails.section) === null || _fromDetails$section2 === void 0 ? void 0 : _fromDetails$section2.number) + \" \" + fromDetails.bin + \" \" + fromDetails.pallet);\n              console.log(\"Current Details: \" + currentDetails.region + \" \" + ((_currentDetails$secti = currentDetails.section) === null || _currentDetails$secti === void 0 ? void 0 : _currentDetails$secti.letter) + ((_currentDetails$secti2 = currentDetails.section) === null || _currentDetails$secti2 === void 0 ? void 0 : _currentDetails$secti2.number) + \" \" + currentDetails.bin + \" \" + currentDetails.pallet);\n\n              if (Object.keys(fromDetails).length) {\n                formattedItems.newLocalFrom = fromDetails;\n                formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\n              } else {\n                // all fields empty — force an empty string and remove any stray map\n                console.log(\"entered empty fromDetails else\");\n                formattedItems.localLocFrom = \"\";\n                formattedItems.newLocalFrom = {};\n              }\n\n              if (Object.keys(currentDetails).length) {\n                formattedItems.newLocalCurrent = currentDetails;\n                formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\n              } else {\n                // all fields empty — force an empty string and remove any stray map\n                formattedItems.localLocCurrent = \"\";\n                formattedItems.newLocalCurrent = {};\n              }\n\n              if (selectedMachine && selectedMachine.id) {\n                formattedItems.MachineFrom = db.collection(\"Machine\").doc(selectedMachine.id);\n              }\n\n              if (selectedCurrentMachine && selectedCurrentMachine.id) {\n                formattedItems.MachineCurrent = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              }\n\n              if (selectedParent && selectedParent.id) {\n                formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n              } // NEW: Set separate client references.\n\n\n              if (selectedClientFrom && selectedClientFrom.id) {\n                formattedItems.ClientFrom = db.collection(\"Client\").doc(selectedClientFrom.id);\n              }\n\n              if (selectedClientCurrent && selectedClientCurrent.id) {\n                formattedItems.ClientCurrent = db.collection(\"Client\").doc(selectedClientCurrent.id);\n              } // Only attach the richer “newLocal” map when the user actually filled something in\n\n\n              if (Object.keys(fromDetails).length) {\n                formattedItems.newLocalFrom = fromDetails;\n              }\n\n              if (Object.keys(currentDetails).length) {\n                formattedItems.newLocalCurrent = currentDetails;\n              }\n\n              docId = id;\n              _context15.prev = 32;\n\n              if (!docId) {\n                _context15.next = 80;\n                break;\n              }\n\n              // Check if a localSN is provided and if it differs from the current docId.\n              newDocId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : docId;\n\n              if (!(docId !== newDocId)) {\n                _context15.next = 59;\n                break;\n              }\n\n              _context15.next = 38;\n              return db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n            case 38:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context15.next = 46;\n                break;\n              }\n\n              machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context15.next = 42;\n              return machineRef.get();\n\n            case 42:\n              machineDoc = _context15.sent;\n\n              if (!machineDoc.exists) {\n                _context15.next = 46;\n                break;\n              }\n\n              _context15.next = 46;\n              return machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 46:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context15.next = 54;\n                break;\n              }\n\n              currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context15.next = 50;\n              return currentMachineRef.get();\n\n            case 50:\n              currentMachineDoc = _context15.sent;\n\n              if (!currentMachineDoc.exists) {\n                _context15.next = 54;\n                break;\n              }\n\n              _context15.next = 54;\n              return currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 54:\n              _context15.next = 56;\n              return db.collection(\"Test\").doc(docId)[\"delete\"]();\n\n            case 56:\n              // Set docId to the new document ID.\n              docId = newDocId;\n              _context15.next = 78;\n              break;\n\n            case 59:\n              // Deep-clean the formattedItems to remove any undefined nested values.\n              cleanFormattedItems = shallowClean(formattedItems);\n              _context15.next = 62;\n              return db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n            case 62:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context15.next = 70;\n                break;\n              }\n\n              _machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context15.next = 66;\n              return _machineRef.get();\n\n            case 66:\n              _machineDoc = _context15.sent;\n\n              if (!_machineDoc.exists) {\n                _context15.next = 70;\n                break;\n              }\n\n              _context15.next = 70;\n              return _machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 70:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context15.next = 78;\n                break;\n              }\n\n              _currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context15.next = 74;\n              return _currentMachineRef.get();\n\n            case 74:\n              _currentMachineDoc = _context15.sent;\n\n              if (!_currentMachineDoc.exists) {\n                _context15.next = 78;\n                break;\n              }\n\n              _context15.next = 78;\n              return _currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 78:\n              _context15.next = 99;\n              break;\n\n            case 80:\n              // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n              docId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : generateCustomID();\n              _context15.next = 83;\n              return db.collection(\"Test\").doc(docId).set(formattedItems);\n\n            case 83:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context15.next = 91;\n                break;\n              }\n\n              _machineRef2 = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context15.next = 87;\n              return _machineRef2.get();\n\n            case 87:\n              _machineDoc2 = _context15.sent;\n\n              if (!_machineDoc2.exists) {\n                _context15.next = 91;\n                break;\n              }\n\n              _context15.next = 91;\n              return _machineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 91:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context15.next = 99;\n                break;\n              }\n\n              _currentMachineRef2 = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context15.next = 95;\n              return _currentMachineRef2.get();\n\n            case 95:\n              _currentMachineDoc2 = _context15.sent;\n\n              if (!_currentMachineDoc2.exists) {\n                _context15.next = 99;\n                break;\n              }\n\n              _context15.next = 99;\n              return _currentMachineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 99:\n              _context15.next = 101;\n              return uploadPhotos(docId);\n\n            case 101:\n              console.log(\"Item saved and associatedParts updated!\"); // Redirect to the new URL using the new document id.\n\n              router.push(\"/NewSearch/item/\".concat(docId)); // Optionally, you can also show a save confirmation modal:\n\n              handleShowSaveModal();\n              _context15.next = 109;\n              break;\n\n            case 106:\n              _context15.prev = 106;\n              _context15.t0 = _context15[\"catch\"](32);\n              console.error(\"Error saving data:\", _context15.t0);\n\n            case 109:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[32, 106]]);\n    }));\n    return _toSend.apply(this, arguments);\n  }\n\n  var _useState58 = useState(false),\n      showLocalLocFrom = _useState58[0],\n      setShowLocalLocFrom = _useState58[1];\n\n  var _useState59 = useState(false),\n      showLocalLocCurrent = _useState59[0],\n      setShowLocalLocCurrent = _useState59[1]; // When a machine is selected from the modal.\n\n\n  var handleSetSelectedMachine = function handleSetSelectedMachine(machine) {\n    var _machine$name;\n\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    var isSocalInterior = ((_machine$name = machine.name) === null || _machine$name === void 0 ? void 0 : _machine$name.toLowerCase()) === \"interior socal\";\n\n    if (machinePick) {\n      var _selectedClientFrom$n3;\n\n      setSelectedMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocFrom(isSocalInterior || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n3 = selectedClientFrom.name) === null || _selectedClientFrom$n3 === void 0 ? void 0 : _selectedClientFrom$n3.toLowerCase()) === \"socalwarehouse\");\n    } else {\n      var _selectedClientCurren3;\n\n      setSelectedCurrentMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocCurrent(isSocalInterior || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren3 = selectedClientCurrent.name) === null || _selectedClientCurren3 === void 0 ? void 0 : _selectedClientCurren3.toLowerCase()) === \"socalwarehouse\");\n    }\n\n    fetchMachine(machine.id); // Close the machine modal (assuming you're using showMachineModal to control it)\n\n    setShowMachineModal(false);\n  };\n\n  var uploadPhotos = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(docID) {\n      var storageRef, i, photoRef, metadata, url;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              i = 0;\n\n            case 2:\n              if (!(i < photos.length)) {\n                _context10.next = 15;\n                break;\n              }\n\n              if (!photos[i].file) {\n                _context10.next = 12;\n                break;\n              }\n\n              photoRef = storageRef.child(\"Parts/\".concat(docID, \"/\").concat(docID).concat(i === 0 ? \".jpg\" : \".\".concat(i + 1, \".jpg\")));\n              metadata = {\n                contentType: \"image/png\"\n              };\n              _context10.next = 8;\n              return photoRef.put(photos[i].file, metadata);\n\n            case 8:\n              _context10.next = 10;\n              return photoRef.getDownloadURL();\n\n            case 10:\n              url = _context10.sent;\n              photos[i].url = url;\n\n            case 12:\n              i++;\n              _context10.next = 2;\n              break;\n\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function uploadPhotos(_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }(); // Function to handle printing the label.\n\n\n  var handlePrint = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var clientName, machineDoc, machineData, clientDoc, _clientDoc, payload, response, result;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (items.name) {\n                _context11.next = 3;\n                break;\n              }\n\n              alert(\"Missing name\");\n              return _context11.abrupt(\"return\");\n\n            case 3:\n              clientName = \"\"; // Attempt to fetch client name from the Machine document reference.\n\n              if (!(items.Machine && typeof items.Machine.get === \"function\")) {\n                _context11.next = 23;\n                break;\n              }\n\n              _context11.prev = 5;\n              _context11.next = 8;\n              return items.Machine.get();\n\n            case 8:\n              machineDoc = _context11.sent;\n\n              if (!machineDoc.exists) {\n                _context11.next = 16;\n                break;\n              }\n\n              machineData = machineDoc.data();\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 14;\n              return machineData.client.get();\n\n            case 14:\n              clientDoc = _context11.sent;\n\n              if (clientDoc.exists) {\n                clientName = clientDoc.data().name || \"\";\n              }\n\n            case 16:\n              _context11.next = 21;\n              break;\n\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](5);\n              console.error(\"Error fetching machine or client:\", _context11.t0);\n\n            case 21:\n              _context11.next = 24;\n              break;\n\n            case 23:\n              console.warn(\"No Machine reference available in the item\");\n\n            case 24:\n              console.log(clientName, \":\", items.client); // Fallback: if no client name was found, check items.client.\n\n              if (!(!clientName && items.client)) {\n                _context11.next = 40;\n                break;\n              }\n\n              if (!(typeof items.client.get === \"function\")) {\n                _context11.next = 39;\n                break;\n              }\n\n              _context11.prev = 27;\n              _context11.next = 30;\n              return items.client.get();\n\n            case 30:\n              _clientDoc = _context11.sent;\n\n              if (_clientDoc.exists) {\n                clientName = _clientDoc.data().name || \"\";\n              }\n\n              _context11.next = 37;\n              break;\n\n            case 34:\n              _context11.prev = 34;\n              _context11.t1 = _context11[\"catch\"](27);\n              console.error(\"Error fetching client from items.client:\", _context11.t1);\n\n            case 37:\n              _context11.next = 40;\n              break;\n\n            case 39:\n              clientName = items.client;\n\n            case 40:\n              console.log(\"descriptions:\", descriptions[selectedDesc]);\n              payload = {\n                name: items.name,\n                pn: items.pn,\n                sn: items.sn,\n                wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n                client: clientName,\n                status: items.status,\n                local_sn: id,\n                descriptions: [descriptions[selectedDesc] || {\n                  description: \"\",\n                  date: \"\"\n                }],\n                date: items.dateCreated || \"\",\n                DOM: DOM,\n                oem: oem,\n                modality: modality,\n                model: model,\n                poNumber: items.poNumber,\n                arrival_date: items.arrival_date // NEW: Include arrival_date\n\n              };\n              console.log(\"Payload for printing:\", payload);\n              _context11.prev = 43;\n              _context11.next = 46;\n              return fetch(\"https://9d70-174-76-22-138.ngrok-free.app/print-label\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n              });\n\n            case 46:\n              response = _context11.sent;\n              _context11.next = 49;\n              return response.json();\n\n            case 49:\n              result = _context11.sent;\n              console.log(\"Print result:\", result.status);\n\n              if (result.status.includes(\"successfully.\")) {\n                handleShowPrintModal();\n              } else {\n                console.error(\"Error printing label:\", result.error);\n              }\n\n              _context11.next = 57;\n              break;\n\n            case 54:\n              _context11.prev = 54;\n              _context11.t2 = _context11[\"catch\"](43);\n              console.error(\"Error printing label:\", _context11.t2);\n\n            case 57:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[5, 18], [27, 34], [43, 54]]);\n    }));\n\n    return function handlePrint() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n\n  function handleSubmit(_x10) {\n    return _handleSubmit.apply(this, arguments);\n  } // Handlers for input changes.\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(event) {\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              event.preventDefault(); // Only check that the Name field is filled out.\n\n              if (!items.name) {\n                handleShow(); // This shows the \"missing field\" modal.\n              } else {\n                toSend();\n              }\n\n            case 2:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var handleChange = function handleChange(field) {\n    return function (event) {\n      var value = event.target ? event.target.value : event.value;\n      setItems(function (prevItems) {\n        return _objectSpread(_objectSpread({}, prevItems), {}, _defineProperty({}, field, value));\n      });\n    };\n  };\n\n  var addDescription = function addDescription() {\n    setDescriptions([].concat(_toConsumableArray(descriptions), [{\n      description: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeDescription = function removeDescription(index) {\n    setDescriptions(descriptions.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(index, field, value) {\n    var newDescriptions = descriptions.map(function (desc, i) {\n      return i === index ? _objectSpread(_objectSpread({}, desc), {}, _defineProperty({}, field, value)) : desc;\n    });\n    setDescriptions(newDescriptions);\n  };\n\n  var addWorkOrder = function addWorkOrder() {\n    setWorkOrders([].concat(_toConsumableArray(workOrders), [{\n      workOrder: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeWorkOrder = function removeWorkOrder(index) {\n    setWorkOrders(workOrders.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleWorkOrderChange = function handleWorkOrderChange(index, field, value) {\n    var newWorkOrders = workOrders.map(function (wo, i) {\n      return i === index ? _objectSpread(_objectSpread({}, wo), {}, _defineProperty({}, field, value)) : wo;\n    });\n    setWorkOrders(newWorkOrders);\n  };\n\n  var listDescriptions = function listDescriptions() {\n    setShowDescModal(true);\n  };\n\n  var selectDescription = function selectDescription(index) {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  var handleShowCameraModal = function handleShowCameraModal() {\n    setShowCameraModal(true);\n  };\n\n  var handleCloseCameraModal = function handleCloseCameraModal() {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  var handleCapture = function handleCapture(err, result) {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  var savePhoto = function savePhoto() {\n    setPhotos(function (prevPhotos) {\n      return [].concat(_toConsumableArray(prevPhotos), [{\n        file: capturedPhoto,\n        url: URL.createObjectURL(capturedPhoto)\n      }]);\n    });\n    setCapturedPhoto(null);\n    handleCloseCameraModal();\n  };\n\n  var removePhoto = function removePhoto(index) {\n    setPhotos(photos.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var mostRecentWorkOrder = workOrders && workOrders.length > 0 ? workOrders.reduce(function (latest, current) {\n    var latestDate = new Date(latest.date);\n    var currentDate = new Date(current.date);\n    return currentDate > latestDate ? current : latest;\n  }, workOrders[0]) : {};\n\n  var capturePhoto = function capturePhoto() {\n    var video = document.querySelector(\"video\");\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    var context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(function (blob) {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  var handleShowInfoModal = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var db, doc, data;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              db = firebase.firestore();\n              _context12.prev = 1;\n              _context12.next = 4;\n              return db.collection(\"Test\").doc(id).get();\n\n            case 4:\n              doc = _context12.sent;\n\n              if (doc.exists) {\n                data = doc.data();\n                setItemName(data.name || \"N/A\");\n                setShowInfoModal(true);\n              } else {\n                console.error(\"Item not found\");\n              }\n\n              _context12.next = 11;\n              break;\n\n            case 8:\n              _context12.prev = 8;\n              _context12.t0 = _context12[\"catch\"](1);\n              console.error(\"Error fetching item info:\", _context12.t0);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 8]]);\n    }));\n\n    return function handleShowInfoModal() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseInfoModal = function handleCloseInfoModal() {\n    return setShowInfoModal(false);\n  };\n\n  var handlePnChange = function handlePnChange(index, value) {\n    setItems(function (prev) {\n      var newPn = _toConsumableArray(prev.pn);\n\n      newPn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: newPn\n      });\n    });\n  };\n\n  var addPn = function addPn() {\n    setItems(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: [].concat(_toConsumableArray(prev.pn), [\"\"])\n      });\n    });\n  };\n\n  var handleSnChange = function handleSnChange(index, value) {\n    setItems(function (prev) {\n      var newSn = _toConsumableArray(prev.sn);\n\n      newSn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: newSn\n      });\n    });\n  };\n\n  var addSn = function addSn() {\n    setItems(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: [].concat(_toConsumableArray(prev.sn), [\"\"])\n      });\n    });\n  };\n\n  var browseInputRef = useRef(null);\n\n  var handleBrowsePhotos = function handleBrowsePhotos() {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  var handleFilesSelected = function handleFilesSelected(e) {\n    var files = e.target.files;\n\n    if (files.length) {\n      var newPhotos = [];\n\n      for (var i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i])\n        });\n      }\n\n      setPhotos(function (prevPhotos) {\n        return [].concat(_toConsumableArray(prevPhotos), newPhotos);\n      });\n    }\n\n    e.target.value = \"\";\n  };\n\n  var _useState60 = useState(0),\n      currentPnIndex = _useState60[0],\n      setCurrentPnIndex = _useState60[1];\n\n  var _useState61 = useState(false),\n      showDropdown = _useState61[0],\n      setShowDropdown = _useState61[1];\n\n  var _useState62 = useState(0),\n      currentSnIndex = _useState62[0],\n      setCurrentSnIndex = _useState62[1];\n\n  var _useState63 = useState(false),\n      showSnDropdown = _useState63[0],\n      setShowSnDropdown = _useState63[1];\n\n  var handleAddNewClient = function handleAddNewClient() {\n    var randomNum = Math.floor(10000 + Math.random() * 90000);\n    router.push(\"../client/AIS\".concat(randomNum, \"/addClient?from=item&itemId=\").concat(id || \"\"));\n  };\n\n  var handleBluefolderButton = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var _descriptions$selecte2;\n\n      var currentWorkOrder, payload, response, result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              // Check that the work order field is filled out (using workOrders[0].workOrder as current)\n              currentWorkOrder = workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\n\n              if (currentWorkOrder) {\n                _context13.next = 4;\n                break;\n              }\n\n              alert(\"Please fill out the work order field before adding to BlueFolder.\");\n              return _context13.abrupt(\"return\");\n\n            case 4:\n              // Build the payload to send to your proxy endpoint.\n              payload = {\n                name: items.name,\n                pn: items.pn[0] || \"\",\n                sn: items.sn[0] || \"\",\n                status: items.status,\n                description: ((_descriptions$selecte2 = descriptions[selectedDesc]) === null || _descriptions$selecte2 === void 0 ? void 0 : _descriptions$selecte2.description) || \"\",\n                workOrder: currentWorkOrder,\n                localsn: items.localSN || \"\"\n              };\n              _context13.prev = 5;\n              _context13.next = 8;\n              return fetch(\"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n              });\n\n            case 8:\n              response = _context13.sent;\n              _context13.next = 11;\n              return response.json();\n\n            case 11:\n              result = _context13.sent;\n              alert(\"BlueFolder service item added successfully!\");\n              console.log(\"BlueFolder result:\", result);\n              _context13.next = 20;\n              break;\n\n            case 16:\n              _context13.prev = 16;\n              _context13.t0 = _context13[\"catch\"](5);\n              console.error(\"BlueFolder error:\", _context13.t0);\n              alert(\"Error adding data to BlueFolder.\");\n\n            case 20:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[5, 16]]);\n    }));\n\n    return function handleBluefolderButton() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 7\n    }\n  }, __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1452,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454,\n      columnNumber: 11\n    }\n  }, \"Missing field\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showErr,\n    onHide: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 11\n    }\n  }, Err), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showSaveModal,\n    onHide: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 13\n    }\n  }, \"Save Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 11\n    }\n  }, \"Data has been saved successfully.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1477,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showPrintModal,\n    onHide: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 13\n    }\n  }, \"Print Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 11\n    }\n  }, \"Info has been sent to print.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1489,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 13\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1499,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 13\n    }\n  }, \"Add Description\"), descriptions.map(function (desc, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1504,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"outline-secondary\",\n      className: \"w-100\",\n      onClick: function onClick() {\n        return selectDescription(index);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1505,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 21\n      }\n    }, desc.description || \"Description\"), __jsx(\"span\", {\n      style: {\n        borderLeft: \"1px solid #ccc\",\n        paddingLeft: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 21\n      }\n    }, desc.date || \"Date\"))));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(Modal, {\n    show: showWoModal,\n    onHide: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1531,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1533,\n      columnNumber: 13\n    }\n  }, \"Work Orders\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addWorkOrder,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1536,\n      columnNumber: 13\n    }\n  }, \"Add Work Order\"), workOrders.map(function (wo, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1546,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Work Order\",\n      value: wo.workOrder,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"workOrder\", e.target.value);\n      },\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1547,\n        columnNumber: 19\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Control, {\n      type: \"date\",\n      placeholder: \"Date\",\n      value: wo.date,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"date\", e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 19\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1567,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      variant: \"danger\",\n      onClick: function onClick() {\n        return removeWorkOrder(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 19\n      }\n    }, \"Remove\")));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(ClientInfoModal, {\n    show: showMachineModal,\n    handleClose: handleCloseMachineModal,\n    selectedClient: selectedClient,\n    machineOptions: machineOptions,\n    setSelectedMachine: handleSetSelectedMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1583,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1591,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 13\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: search,\n    onChange: function onChange(e) {\n      return setSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596,\n      columnNumber: 13\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return (client.name || \"\").toLowerCase().includes(search.toLowerCase());\n    }),\n    onSelectClient: handleClientInfo,\n    onInfoClick: handleClientInfo,\n    clearSelection: function clearSelection() {\n      return handleClientInfo(null);\n    },\n    onAddClient: handleAddNewClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 13\n    }\n  }))), __jsx(ParentModal, {\n    show: showParentModal,\n    handleClose: handleCloseParentModal,\n    setSelectedParent: setSelectedParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1615,\n      columnNumber: 9\n    }\n  }), __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: function handleClose() {\n      return setMachineSelectionModal(false);\n    },\n    setMachine: setTheMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1628,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1629,\n      columnNumber: 13\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632,\n      columnNumber: 13\n    }\n  }, !capturedPhoto && __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1634,\n      columnNumber: 17\n    }\n  }), capturedPhoto && __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1643,\n      columnNumber: 19\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1655,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setCameraFacing(function (prev) {\n        return prev === \"environment\" ? \"user\" : \"environment\";\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1669,\n      columnNumber: 17\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1678,\n      columnNumber: 17\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return setCapturedPhoto(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 17\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1690,\n      columnNumber: 17\n    }\n  }, \"OK\")))), __jsx(InfoModal, {\n    show: showInfoModal,\n    handleClose: handleCloseInfoModal,\n    itemName: items.name,\n    dimensions: items.length + \",\" + items.width + \",\" + items.height,\n    price: items.price,\n    freqI: freqItem,\n    freqM: machineFrequency,\n    usage: usagePastYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1698,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1709,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1714,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1715,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1716,\n      columnNumber: 17\n    }\n  }, \"Item\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1717,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1721,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 25\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: items.name,\n    onChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 25\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1730,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"pn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 25\n    }\n  }, \"Product Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1734,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.pn[currentPnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handlePnChange(currentPnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1735,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowDropdown(!showDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1748,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewPn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 31\n    }\n  }, \"+\"))), showDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1758,\n      columnNumber: 29\n    }\n  }, pnOptions.map(function (pnOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentPnIndex(idx);\n        setShowDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1772,\n        columnNumber: 33\n      }\n    }, pnOption);\n  }))), addingNewPn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new PN\",\n    value: newPn,\n    onChange: function onChange(e) {\n      return setNewPn(e.target.value);\n    },\n    onBlur: handleAddNewPn,\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && handleAddNewPn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 27\n    }\n  })))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1802,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1803,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"sn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1804,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1805,\n      columnNumber: 25\n    }\n  }, \"Serial Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1806,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.sn[currentSnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handleSnChange(currentSnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1808,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowSnDropdown(!showSnDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1815,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1821,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewSn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1822,\n      columnNumber: 31\n    }\n  }, \"+\"))), showSnDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1831,\n      columnNumber: 29\n    }\n  }, snOptions.map(function (snOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentSnIndex(idx);\n        setShowSnDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1845,\n        columnNumber: 33\n      }\n    }, snOption);\n  }))), addingNewSn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new SN\",\n    value: newSn,\n    onChange: function onChange(e) {\n      return setNewSn(e.target.value);\n    },\n    onBlur: handleAddNewSn,\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && handleAddNewSn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1860,\n      columnNumber: 27\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1873,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1874,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 25\n    }\n  }, \"Status\"), __jsx(Form.Select, {\n    value: items.status || \"\",\n    onChange: handleChange(\"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1880,\n      columnNumber: 27\n    }\n  }, \"Select status\"), __jsx(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 27\n    }\n  }, \"Good\"), __jsx(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1882,\n      columnNumber: 27\n    }\n  }, \"Bad\"), __jsx(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1883,\n      columnNumber: 27\n    }\n  }, \"Unknown\"))))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1891,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"OEM\",\n    value: oem,\n    onChange: function onChange(e) {\n      return setOem(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1892,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1899,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1900,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Modality\",\n    value: modality,\n    onChange: function onChange(e) {\n      return setModality(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1901,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1908,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Model\",\n    value: model,\n    onChange: function onChange(e) {\n      return setModel(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 23\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1919,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1920,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowWoModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1921,\n      columnNumber: 23\n    }\n  }, \"Manage Work Orders\"), workOrders.length > 0 && __jsx(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 27\n    }\n  }, \"Work Order\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Most Recent Work Order\",\n    value: mostRecentWorkOrder.workOrder,\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"workOrder\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 27\n    }\n  }), __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1944,\n      columnNumber: 27\n    }\n  }, \"Date\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Work Order Date\",\n    value: mostRecentWorkOrder.date,\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"date\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1945,\n      columnNumber: 27\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1961,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1962,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: listDescriptions,\n    className: \"mb-2 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1963,\n      columnNumber: 25\n    }\n  }, \"List Descriptions\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter description\",\n    value: ((_descriptions$selecte3 = descriptions[selectedDesc]) === null || _descriptions$selecte3 === void 0 ? void 0 : _descriptions$selecte3.description) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"description\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1970,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Control, {\n    type: \"date\",\n    value: ((_descriptions$selecte4 = descriptions[selectedDesc]) === null || _descriptions$selecte4 === void 0 ? void 0 : _descriptions$selecte4.date) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"date\", e.target.value);\n    },\n    style: {\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1984,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2003,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2004,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2005,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(true);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2006,\n      columnNumber: 25\n    }\n  }, \"Select From\"), selectedClientFrom && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2017,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2025,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2026,\n      columnNumber: 31\n    }\n  }, \"Selected Client (From):\"), \" \", selectedClientFrom.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2029,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2030,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientFrom.name), selectedMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2038,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2039,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (From):\"), \" \", selectedMachine.name), showLocalLocFrom && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowNewLocalModalFrom(true);\n    },\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2044,\n      columnNumber: 39\n    }\n  }, [newLocalFrom.region, ((_newLocalFrom$section = newLocalFrom.section) === null || _newLocalFrom$section === void 0 ? void 0 : _newLocalFrom$section.letter) + ((_newLocalFrom$section2 = newLocalFrom.section) === null || _newLocalFrom$section2 === void 0 ? void 0 : _newLocalFrom$section2.number), newLocalFrom.bin && \"B\".concat(newLocalFrom.bin), newLocalFrom.pallet && \"P\".concat(newLocalFrom.pallet)].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalFrom,\n    onHide: function onHide() {\n      return setShowNewLocalModalFrom(false);\n    },\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2066,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2073,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2074,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (From)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2078,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientFrom,\n    showLocalLoc: showNewLocalModalFrom,\n    value: newLocalFrom,\n    onChange: setNewLocalFrom,\n    onSave: function onSave(p) {\n      setNewLocalFrom(p);\n      setShowNewLocalModalFrom(false);\n    },\n    onCancel: function onCancel() {\n      return setShowNewLocalModalFrom(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2079,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2110,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(false);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2111,\n      columnNumber: 25\n    }\n  }, \"Select Current\"), selectedClientCurrent && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2122,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2130,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2131,\n      columnNumber: 31\n    }\n  }, \"Selected Client (Current):\"), \" \", selectedClientCurrent.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2134,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2135,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientCurrent.name), selectedCurrentMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2143,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2144,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (Current):\"), \" \", selectedCurrentMachine.name), showLocalLocCurrent && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowNewLocalModalCurrent(true);\n    },\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2149,\n      columnNumber: 39\n    }\n  }, [newLocalCurrent.region, ((_newLocalCurrent$sect = newLocalCurrent.section) === null || _newLocalCurrent$sect === void 0 ? void 0 : _newLocalCurrent$sect.letter) + ((_newLocalCurrent$sect2 = newLocalCurrent.section) === null || _newLocalCurrent$sect2 === void 0 ? void 0 : _newLocalCurrent$sect2.number), newLocalCurrent.bin && \"B\".concat(newLocalCurrent.bin), newLocalCurrent.pallet && \"P\".concat(newLocalCurrent.pallet)].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalCurrent,\n    onHide: function onHide() {\n      return setShowNewLocalModalCurrent(false);\n    },\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2168,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2175,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2176,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (Current)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2180,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientCurrent,\n    showLocalLoc: showNewLocalModalCurrent,\n    value: newLocalCurrent,\n    onChange: setNewLocalCurrent,\n    onSave: function onSave(p) {\n      setNewLocalCurrent(p);\n      setShowNewLocalModalCurrent(false);\n    },\n    onCancel: function onCancel() {\n      return setShowNewLocalModalCurrent(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2181,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2218,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowParentModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2219,\n      columnNumber: 25\n    }\n  }, \"Select Parent\"), selectedParent && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Selected Parent\",\n    value: selectedParent.name,\n    readOnly: true,\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2227,\n      columnNumber: 27\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2239,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2240,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2241,\n      columnNumber: 23\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2242,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2243,\n      columnNumber: 27\n    }\n  }, \"Take Photo\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleBrowsePhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2249,\n      columnNumber: 27\n    }\n  }, \"Browse\"))), __jsx(Col, {\n    xs: 6,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2257,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"success\",\n    onClick: handleSendToInflow,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2258,\n      columnNumber: 25\n    }\n  }, \"Send to inFlow\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleBluefolderButton,\n    style: {\n      marginLeft: \"0.5rem\",\n      marginRight: \".5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2265,\n      columnNumber: 25\n    }\n  }, \"BlueFolder\"), __jsx(Button, {\n    variant: addToWebsite ? \"primary\" : \"outline-primary\",\n    onClick: function onClick() {\n      return setAddToWebsite(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2273,\n      columnNumber: 25\n    }\n  }, addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"), __jsx(Form.Check, {\n    type: \"checkbox\",\n    id: \"hide-checkbox\",\n    label: \"Hide\" // box is checked when we want visible = false\n    ,\n    checked: !items.visible,\n    onChange: function onChange(e) {\n      // grab checked immediately\n      var isHidden = e.currentTarget.checked;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          visible: !isHidden\n        });\n      });\n    },\n    className: \"ms-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2280,\n      columnNumber: 25\n    }\n  }))), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: true,\n    ref: browseInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2298,\n      columnNumber: 21\n    }\n  })), photos && photos.length > 0 && __jsx(\"div\", {\n    className: \"photo-gallery\",\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"10px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2309,\n      columnNumber: 21\n    }\n  }, photos.map(function (photo, index) {\n    return __jsx(\"div\", {\n      key: index,\n      style: {\n        position: \"relative\",\n        width: \"100px\",\n        height: \"100px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2319,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: photo.url,\n      alt: \"Photo \".concat(index + 1),\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2327,\n        columnNumber: 27\n      }\n    }), photo.file && __jsx(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        padding: \"0 5px\"\n      },\n      onClick: function onClick() {\n        return removePhoto(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2337,\n        columnNumber: 29\n      }\n    }, \"x\"));\n  })), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2356,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2357,\n      columnNumber: 21\n    }\n  }, \"Save\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleShowInfoModal,\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2364,\n      columnNumber: 21\n    }\n  }, \"More Info\"), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Back\",\n    route: \"NewSearch/mainSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2371,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    variant: \"info\",\n    onClick: handlePrint,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2376,\n      columnNumber: 21\n    }\n  }, \"Print Label\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2384,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"24px\"\n    },\n    onClick: function onClick() {\n      return setShowExtra(!showExtra);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2385,\n      columnNumber: 21\n    }\n  }, \"\\u25BC\")), __jsx(Collapse, {\n    \"in\": showExtra,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2397,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    id: \"extra-collapse\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2398,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2399,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2400,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2401,\n      columnNumber: 27\n    }\n  }, \"Dimensions\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2402,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Length\",\n    type: \"text\",\n    value: items.length,\n    onChange: handleChange(\"length\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2405,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2411,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Width\",\n    type: \"text\",\n    value: items.width,\n    onChange: handleChange(\"width\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2412,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2418,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Height\",\n    type: \"text\",\n    value: items.height,\n    onChange: handleChange(\"height\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2419,\n      columnNumber: 29\n    }\n  }))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"trackingNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2427,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2428,\n      columnNumber: 27\n    }\n  }, \"Tracking Number\"), __jsx(Form.Control, {\n    placeholder: \"Tracking Number\",\n    type: \"text\",\n    value: items.trackingNumber,\n    onChange: handleChange(\"trackingNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2429,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2438,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2439,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2440,\n      columnNumber: 27\n    }\n  }, \"Price\"), __jsx(Form.Control, {\n    placeholder: \"Price\",\n    type: \"text\",\n    value: items.price,\n    onChange: handleChange(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2441,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"DOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2448,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2449,\n      columnNumber: 27\n    }\n  }, \"DOM\"), __jsx(Form.Control, {\n    placeholder: \"Date of Manufacture\",\n    type: \"date\",\n    value: DOM,\n    onChange: function onChange(e) {\n      return setDOM(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2450,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"poNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2457,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2458,\n      columnNumber: 27\n    }\n  }, \"PO Number\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"PO Number\",\n    value: items.poNumber || \"\",\n    onChange: handleChange(\"poNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2459,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2467,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"localSN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2468,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2469,\n      columnNumber: 27\n    }\n  }, \"Local SN\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Local SN\",\n    value: items.localSN || \"\",\n    onChange: handleChange(\"localSN\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2470,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"arrivalDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2477,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2478,\n      columnNumber: 27\n    }\n  }, \"Arrival Date\"), __jsx(Form.Control, {\n    placeholder: \"Enter Arrival Date\",\n    type: \"date\",\n    value: items.arrival_date,\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          arrival_date: value\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2479,\n      columnNumber: 27\n    }\n  }))))))))))), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2502,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2503,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2504,\n      columnNumber: 11\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2506,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2507,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2509,\n      columnNumber: 15\n    }\n  }) : __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2516,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2517,\n      columnNumber: 17\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2526,\n      columnNumber: 9\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2529,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setCameraFacing(function (prev) {\n        return prev === \"environment\" ? \"user\" : \"environment\";\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2543,\n      columnNumber: 15\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2552,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return setCapturedPhoto(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2558,\n      columnNumber: 15\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2564,\n      columnNumber: 15\n    }\n  }, \"OK\")))));\n} // Server-side rendering function\n\n_s2(DisplayItem, \"fU2pw5NA8zdHUMJFYAtQfT9o7RQ=\", false, function () {\n  return [useRouter, useAuth];\n});\n\n_c4 = DisplayItem;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BarcodeScannerComponent$dynamic\");\n$RefreshReg$(_c2, \"BarcodeScannerComponent\");\n$RefreshReg$(_c3, \"LoadingButton\");\n$RefreshReg$(_c4, \"DisplayItem\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/item/[id]/index.js"],"names":["React","useEffect","useState","useRef","Form","Button","Card","Container","Row","Col","Modal","FormControl","Collapse","InputGroup","ButtonGroup","Link","useAuth","firebase","LoggedIn","useRouter","fetchClients","ClientTable","ClientInfoModal","ParentModal","dynamic","InfoModal","MachineSelectionModal","addServiceItem","NewLocal","InflowAPI","buildLocalLocObject","loc","o","region","section","letter","number","bin","undefined","pallet","BarcodeScannerComponent","ssr","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","handleClick","DisplayItem","router","signOut","idFromRouter","query","id","initialId","initialItem","pn","Array","isArray","sn","price","status","length","width","height","poNumber","trackingNumber","localSN","arrival_date","visible","items","setItems","newLocalFrom","setNewLocalFrom","newLocalCurrent","setNewLocalCurrent","selectedClientFrom","setSelectedClientFrom","selectedClientCurrent","setSelectedClientCurrent","selectedMachine","setSelectedMachine","selectedCurrentMachine","setSelectedCurrentMachine","pnOptions","setPnOptions","snOptions","setSnOptions","description","date","descriptions","setDescriptions","workOrder","workOrders","setWorkOrders","clients","setClients","photos","setPhotos","show","setShow","showErr","setShowErr","Err","setErr","showDescModal","setShowDescModal","showWoModal","setShowWoModal","showClientModal","setShowClientModal","showMachineModal","setShowMachineModal","showParentModal","setShowParentModal","showCameraModal","setShowCameraModal","showSaveModal","setShowSaveModal","showPrintModal","setShowPrintModal","machineSelectionModal","setMachineSelectionModal","selectedDesc","setSelectedDesc","selectedClient","setSelectedClient","selectedParent","setSelectedParent","TheMachine","setTheMachine","machineOptions","setMachineOptions","search","setSearch","capturedPhoto","setCapturedPhoto","cameraFacing","setCameraFacing","addToWebsite","setAddToWebsite","machinePick","setMachinePick","freqItem","setFreqItem","usagePastYear","setUsagePastYear","machineFrequency","setMachineFrequency","showExtra","setShowExtra","localLocFrom","setLocalLocFrom","localLocCurrent","setLocalLocCurrent","DOM","setDOM","oem","setOem","modality","setModality","model","setModel","showInfoModal","setShowInfoModal","itemName","setItemName","machineFieldsInitialized","setMachineFieldsInitialized","showLocalModalFrom","setShowLocalModalFrom","showLocalModalCurrent","setShowLocalModalCurrent","openLocalModalFrom","closeLocalModalFrom","openLocalModalCurrent","closeLocalModalCurrent","showNewLocalModalFrom","setShowNewLocalModalFrom","showNewLocalModalCurrent","setShowNewLocalModalCurrent","formatLoc","parts","push","join","handleSendToInflow","imageUrls","map","p","url","upsertProduct","alert","console","error","message","setShowLocalLocFrom","toLowerCase","setShowLocalLocCurrent","fetchClientsData","clientsData","log","fetchPnSn","db","firestore","collection","get","snapshot","pnSet","Set","snSet","forEach","doc","data","add","pnArray","snArray","fetchData","resolveClientFromMachine","machineRef","setClient","setMachine","isFrom","machineDoc","exists","machineData","client","clientDoc","clientName","isSocalInterior","shouldShow","normalizedPN","normalizedSN","prev","ClientFrom","clientFromDoc","ClientCurrent","clientCurrentDoc","Machine","CurrentMachine","machineFromData","machineCurrentData","MachineFrom","MachineCurrent","nameFrom","nameCurrent","Boolean","theMachineData","OEM","Modality","Model","merged","updateMachineFields","Parent","parentDoc","fetchPhotos","checkIfAddedToWebsite","calculateItemFrequencyAndUsage","pathname","signal","getPriorityMachineField","field","theMachine","currentMachine","fromMachine","trim","currentDate","Date","oneYearAgo","setFullYear","getFullYear","where","itemsSnapshot","size","itemData","workOrderDate","fetchMachine","machineId","machinesSnapshot","docID","storageRef","storage","ref","listRef","child","listAll","res","all","item","getDownloadURL","urls","file","partsDoc","handleClose","handleShow","handleCloseErr","handleShowErr","handleCloseSaveModal","handleClosePrintModal","handleShowSaveModal","handleShowPrintModal","handleMachineSelectionModal","handleCloseDescModal","handleShowDescModal","handleCloseWoModal","handleShowWoModal","handleCloseClientModal","handleShowClientModal","handleCloseMachineModal","handleShowMachineModal","handleCloseParentModal","handleShowParentModal","handleClientInfo","clientId","clientData","machinePromises","machines","machineDocs","reorderArray","arr","selectedValue","newArr","filter","val","addingNewPn","setAddingNewPn","newPn","setNewPn","addingNewSn","setAddingNewSn","newSn","setNewSn","handlePnSelect","e","selected","target","value","updatedPn","handleSnSelect","updatedSn","handleAddNewPn","handleAddNewSn","generateCustomID","randomNum","Math","floor","random","shallowClean","obj","newObj","key","hasOwnProperty","toSend","currentUser","auth","userEmail","email","formattedItems","addedToWebsite","lastEdited","fromDetails","currentDetails","Object","keys","docId","newDocId","set","update","associatedParts","FieldValue","arrayUnion","currentMachineRef","currentMachineDoc","cleanFormattedItems","uploadPhotos","showLocalLocFrom","showLocalLocCurrent","handleSetSelectedMachine","machine","i","photoRef","metadata","contentType","put","handlePrint","warn","payload","wo","local_sn","dateCreated","fetch","method","headers","body","JSON","stringify","response","json","result","includes","handleSubmit","event","preventDefault","handleChange","prevItems","addDescription","removeDescription","index","_","handleDescriptionChange","newDescriptions","desc","addWorkOrder","removeWorkOrder","handleWorkOrderChange","newWorkOrders","listDescriptions","selectDescription","handleShowCameraModal","handleCloseCameraModal","handleCapture","err","savePhoto","prevPhotos","URL","createObjectURL","removePhoto","mostRecentWorkOrder","reduce","latest","current","latestDate","capturePhoto","video","document","querySelector","canvas","createElement","videoWidth","videoHeight","context","getContext","drawImage","toBlob","blob","handleShowInfoModal","handleCloseInfoModal","handlePnChange","addPn","handleSnChange","addSn","browseInputRef","handleBrowsePhotos","click","handleFilesSelected","files","newPhotos","currentPnIndex","setCurrentPnIndex","showDropdown","setShowDropdown","currentSnIndex","setCurrentSnIndex","showSnDropdown","setShowSnDropdown","handleAddNewClient","handleBluefolderButton","currentWorkOrder","localsn","cursor","borderLeft","paddingLeft","marginBottom","borderRadius","position","left","transform","bottom","minHeight","maxWidth","top","right","backgroundColor","border","zIndex","maxHeight","overflowY","pnOption","idx","padding","snOption","marginTop","indexOf","marginLeft","marginRight","isHidden","currentTarget","checked","display","flexWrap","gap","photo","objectFit","textAlign","margin","textDecoration","color","fontSize","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  FormControl,\n  Collapse,\n  InputGroup,\n  ButtonGroup,\n} from \"react-bootstrap\";\n\nimport Link from \"next/link\";\nimport { useAuth } from \"../../../../context/AuthUserContext\";\nimport firebase from \"../../../../context/Firebase\";\nimport LoggedIn from \"../../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../../utils/ClientTable\";\nimport ClientInfoModal from \"../../ClientInfoModal\";\nimport ParentModal from \"../../AddItem/parentModal\";\nimport dynamic from \"next/dynamic\";\nimport InfoModal from \"../../InfoModal\";\nimport MachineSelectionModal from \"./MachineSelectionModal\";\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\n\nimport NewLocal from \"./NewLocal\";\n\n//inflow API\nimport InflowAPI from \"../../../../utils/inflowAPI\";\n\n// Import for SSR\nimport { adminDb } from \"../../../../context/FirebaseAdmin\";\n\n// === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\nfunction buildLocalLocObject(loc) {\n  const o = {};\n  if (loc.region) o.region = loc.region;\n  if (loc.section?.letter && loc.section?.number) o.section = loc.section;\n  // pick up the new singular fields, too:\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\n  return o;\n}\n\n// This will only load the component on the client-side.\nconst BarcodeScannerComponent = dynamic(\n  () => import(\"react-qr-barcode-scanner\"),\n  { ssr: false }\n);\n\n// Simulates a network request delay.\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\n// Custom LoadingButton component.\nfunction LoadingButton({ type, name, route }) {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return (\n    <Link href={`/${route}`}>\n      <a\n        className={`btn btn-${type}`}\n        disabled={isLoading}\n        onClick={!isLoading ? handleClick : null}\n      >\n        {isLoading ? \"Loading…\" : name}\n      </a>\n    </Link>\n  );\n}\n\nexport default function DisplayItem() {\n  const router = useRouter();\n  const { signOut } = useAuth();\n  // const { id } = router.query;\n  const { id: idFromRouter } = router.query;\n  const initialId = initialItem?.id || idFromRouter;\n\n  const [items, setItems] = useState({\n    \n    name: initialItem?.name || \"\",\n    pn: Array.isArray(initialItem?.pn) ? initialItem.pn : (initialItem?.pn ? [initialItem.pn] : []),\n    sn: Array.isArray(initialItem?.sn) ? initialItem.sn : (initialItem?.sn ? [initialItem.sn] : []),\n\n    price: \"\",\n    status: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    poNumber: \"\",\n    trackingNumber: \"\",\n    localSN: \"\", // NEW: localSN field added here\n    arrival_date: \"\", // NEW FIELD: Arrival Date\n    visible: true,\n  });\n\n  const [newLocalFrom, setNewLocalFrom] = useState({\n    region: \"\",\n    section: { letter: \"\", number: \"\" },\n    bin: \"\",\n    pallet: \"\",\n  });\n  const [newLocalCurrent, setNewLocalCurrent] = useState({\n    region: \"\",\n    section: { letter: \"\", number: \"\" },\n    bin: \"\",\n    pallet: \"\",\n  });\n\n  // New states for separate client selections:\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\n\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [selectedCurrentMachine, setSelectedCurrentMachine] = useState(null);\n\n  // whenever you pick a new “From” client or machine, clear the old From-loc:\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom, selectedMachine]);\n  // const didMountFrom = useRef(false);\n\n  // useEffect(() => {\n  //   if (!didMountFrom.current) {\n  //     // first time through (the data-load phase), don’t clear\n  //     didMountFrom.current = true;\n  //     return;\n  //   }\n  //   // thereafter, when the user picks a new client or machine, clear:\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  //   setLocalLocFrom(\"\");\n  // }, [selectedClientFrom, selectedMachine]);\n\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const [didFetch, setDidFetch] = useState(false);\n\n  // useEffect(() => {\n  //   if (!didFetch) {\n  //     // we’re in the data-load phase, skip clearing\n  //     setDidFetch(true);\n  //     return;\n  //   }\n  //   // only clear on subsequent user changes:\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n  // These arrays will be populated from Firebase.\n  const [pnOptions, setPnOptions] = useState([]);\n  const [snOptions, setSnOptions] = useState([]);\n\n  const [descriptions, setDescriptions] = useState([\n    { description: \"\", date: \"\" },\n  ]);\n  const [workOrders, setWorkOrders] = useState([{ workOrder: \"\", date: \"\" }]);\n  const [clients, setClients] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showErr, setShowErr] = useState(false);\n  const [Err, setErr] = useState(\"N/A\");\n  const [showDescModal, setShowDescModal] = useState(false);\n  const [showWoModal, setShowWoModal] = useState(false);\n  const [showClientModal, setShowClientModal] = useState(false);\n  const [showMachineModal, setShowMachineModal] = useState(false);\n  const [showParentModal, setShowParentModal] = useState(false);\n  const [showCameraModal, setShowCameraModal] = useState(false);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [showPrintModal, setShowPrintModal] = useState(false);\n  const [machineSelectionModal, setMachineSelectionModal] = useState(false);\n  const [selectedDesc, setSelectedDesc] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [TheMachine, setTheMachine] = useState(null);\n  const [machineOptions, setMachineOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\n  const [cameraFacing, setCameraFacing] = useState(\"environment\");\n  const [addToWebsite, setAddToWebsite] = useState(false);\n  const [machinePick, setMachinePick] = useState(false);\n  const [freqItem, setFreqItem] = useState(0);\n  const [usagePastYear, setUsagePastYear] = useState(0);\n  const [machineFrequency, setMachineFrequency] = useState(0);\n  // State for the extra (dimensions/price/DOM/PO Number) section.\n  const [showExtra, setShowExtra] = useState(false);\n  // State for the local warehouse location inputs.\n  const [localLocFrom, setLocalLocFrom] = useState(\"\");\n  const [localLocCurrent, setLocalLocCurrent] = useState(\"\");\n\n  // New state for DOM (Date of Manufacture)\n  const [DOM, setDOM] = useState(\"\");\n  // New state for OEM, Modality, and Model.\n  const [oem, setOem] = useState(\"\");\n  const [modality, setModality] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n\n  // More info modal state.\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n\n  const [machineFieldsInitialized, setMachineFieldsInitialized] =\n    useState(false);\n\n  // near the top of DisplayItem()\n  const [showLocalModalFrom, setShowLocalModalFrom] = useState(false);\n  const [showLocalModalCurrent, setShowLocalModalCurrent] = useState(false);\n\n  const openLocalModalFrom = () => setShowLocalModalFrom(true);\n  const closeLocalModalFrom = () => setShowLocalModalFrom(false);\n  const openLocalModalCurrent = () => setShowLocalModalCurrent(true);\n  const closeLocalModalCurrent = () => setShowLocalModalCurrent(false);\n\n  // at the top of DisplayItem()\n  const [showNewLocalModalFrom, setShowNewLocalModalFrom] = useState(false);\n  const [showNewLocalModalCurrent, setShowNewLocalModalCurrent] =\n    useState(false);\n\n  function formatLoc(loc) {\n    if (!loc) return \"\";\n    const parts = [];\n    if (loc.region) parts.push(loc.region);\n    if (loc.section?.letter && loc.section?.number)\n      parts.push(`${loc.section.letter}${loc.section.number}`);\n    if (loc.bin) parts.push(`B${loc.bin}`);\n    if (loc.pallet) parts.push(`P${loc.pallet}`);\n    return parts.join(\"–\");\n  }\n\n  // when the From-client changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom]);\n\n  // // when the From-machine changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedMachine]);\n\n  // same for Current:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n  const handleSendToInflow = async () => {\n    try {\n      const name = items.name;\n      const description = descriptions[selectedDesc]?.description || \"\";\n      // gather every photo URL from Firebase Storage\n      const imageUrls = photos.map((p) => p.url);\n      await InflowAPI.upsertProduct({ name, description, imageUrls });\n      alert(\"Sent to inFlow successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Error sending to inFlow: \" + err.message);\n    }\n  };\n\n  // const [storedMachine, setStoredMachine] = useState(null);\n\n  // useEffect(() => {\n  //   // once any of these three change, re-merge:\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\n  //     const merged = updateMachineFields(\n  //       TheMachine,\n  //       selectedCurrentMachine,\n  //       selectedMachine\n  //     );\n  //     setOem(merged.oem);\n  //     setModality(merged.modality);\n  //     setModel(merged.model);\n  //   }\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\n\n  // whenever the “From” client changes:\n  useEffect(() => {\n    setShowLocalLocFrom(\n      selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\n    );\n  }, [selectedClientFrom]);\n\n  // whenever the “Current” client changes:\n  useEffect(() => {\n    setShowLocalLocCurrent(\n      selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\n    );\n  }, [selectedClientCurrent]);\n\n  // Fetch clients data.\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n    fetchClientsData();\n  }, []);\n\n  // Fetch PN and SN options from Firebase.\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      const pnArray = [...pnSet];\n      const snArray = [...snSet];\n      setPnOptions(pnArray);\n      setSnOptions(snArray);\n    }\n    fetchPnSn();\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      fetchData();\n    }\n  }, [id]);\n\n  async function resolveClientFromMachine(\n    machineRef,\n    setClient,\n    setMachine,\n    isFrom = true\n  ) {\n    const machineDoc = await machineRef.get();\n    if (machineDoc.exists) {\n      const machineData = machineDoc.data();\n      setMachine({ id: machineDoc.id, ...machineData });\n\n      // Determine if the machine is \"interior socal\"\n      // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\n      // if (isSocalInterior) {\n      //   if (isFrom) {\n      //     setShowLocalLocFrom(true);\n      //   } else {\n      //     setShowLocalLocCurrent(true);\n      //   }\n      // } else {\n      // Optionally clear the flag if it is not \"interior socal\"\n      // if (isFrom) {\n      //   setShowLocalLocFrom(false);\n      // } else {\n      //   setShowLocalLocCurrent(false);\n      // }\n      // }\n      // new: fetch client name and combine both checks\n      const clientDoc =\n        machineData.client && typeof machineData.client.get === \"function\"\n          ? await machineData.client.get()\n          : null;\n      const clientName =\n        clientDoc && clientDoc.exists ? clientDoc.data().name : null;\n      const isSocalInterior =\n        machineData.name?.toLowerCase() === \"interior socal\";\n      const shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\n\n      if (isFrom) {\n        setShowLocalLocFrom(shouldShow);\n      } else {\n        setShowLocalLocCurrent(shouldShow);\n      }\n\n      if (machineData.client && typeof machineData.client.get === \"function\") {\n        const clientDoc = await machineData.client.get();\n        if (clientDoc.exists) {\n          setClient({ id: clientDoc.id, ...clientDoc.data() });\n        }\n      }\n    }\n  }\n\n  const fetchData = async () => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Test\").doc(id).get();\n    if (doc.exists) {\n      console.log(\"test\");\n      const data = doc.data();\n      const normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\n      const normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\n      setItems({\n        ...data,\n        pn: normalizedPN,\n        sn: normalizedSN,\n      });\n      setDescriptions(data.descriptions || []);\n      setWorkOrders(data.workOrders || []);\n      if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\n      if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\n      if (data.DOM) {\n        setDOM(data.DOM);\n      }\n\n      // …after you do setItems, setDescriptions, etc.\n\n      // load the “newLocal” maps\n      if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\n      if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent);\n\n      // Load PO Number if it exists.\n      if (data.poNumber) {\n        setItems((prev) => ({ ...prev, poNumber: data.poNumber }));\n      }\n\n      if (data.ClientFrom) {\n        const clientFromDoc = await data.ClientFrom.get();\n        if (clientFromDoc.exists) {\n          setSelectedClientFrom({\n            id: clientFromDoc.id,\n            ...clientFromDoc.data(),\n          });\n        }\n      }\n      if (data.ClientCurrent) {\n        const clientCurrentDoc = await data.ClientCurrent.get();\n        if (clientCurrentDoc.exists) {\n          setSelectedClientCurrent({\n            id: clientCurrentDoc.id,\n            ...clientCurrentDoc.data(),\n          });\n        }\n      }\n\n      if (\n        !data.ClientFrom &&\n        data.Machine &&\n        typeof data.Machine.get === \"function\"\n      ) {\n        console.log(\n          \"Entered resolveClientFromMachine for Machine (old style for From)\"\n        );\n        await resolveClientFromMachine(\n          data.Machine,\n          setSelectedClientFrom,\n          setSelectedMachine,\n          true\n        );\n      }\n      if (\n        !data.ClientCurrent &&\n        data.CurrentMachine &&\n        typeof data.CurrentMachine.get === \"function\"\n      ) {\n        console.log(\n          \"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\"\n        );\n        await resolveClientFromMachine(\n          data.CurrentMachine,\n          setSelectedClientCurrent,\n          setSelectedCurrentMachine,\n          false\n        );\n      }\n\n      let machineFromData = null;\n      let machineCurrentData = null;\n\n      if (data.MachineFrom) {\n        const doc = await data.MachineFrom.get();\n        machineFromData = doc.exists ? doc.data() : null;\n        setSelectedMachine({ id: doc.id, ...doc.data() });\n      }\n      if (data.MachineCurrent) {\n        const doc = await data.MachineCurrent.get();\n        machineCurrentData = doc.exists ? doc.data() : null;\n        setSelectedCurrentMachine({ id: doc.id, ...doc.data() });\n      }\n      const nameFrom = machineFromData?.name?.toLowerCase();\n      const nameCurrent = machineCurrentData?.name?.toLowerCase();\n\n      // If the machine’s name is “interior socal”, show that branch:\n      // setShowLocalLocFrom(nameFrom === \"interior socal\");\n      // // Or if your Firestore already has a value for localLocFrom, show it anyway:\n      // if (data.localLocFrom) setShowLocalLocFrom(true);\n\n      // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\n      // if (data.localLocCurrent) setShowLocalLocCurrent(true);\n      // new: combine machine-name OR client-name check, keep existing-data\n      setShowLocalLocFrom(\n        nameFrom === \"interior socal\" ||\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\" ||\n          Boolean(data.localLocFrom)\n      );\n      setShowLocalLocCurrent(\n        nameCurrent === \"interior socal\" ||\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\" ||\n          Boolean(data.localLocCurrent)\n      );\n\n      const theMachineData = data.TheMachine || null;\n\n      setTheMachine(theMachineData);\n      if (theMachineData) {\n        // pull both variants, prefer lowercase if it exists\n        const OEM = theMachineData.oem ?? theMachineData.OEM;\n        const Modality = theMachineData.modality ?? theMachineData.Modality;\n        const Model = theMachineData.model ?? theMachineData.Model;\n        setTheMachine({ ...theMachineData, OEM, Modality, Model });\n      }\n      // setStoredMachine(theMachineData);\n\n      // **right here** merge from the three sources you just fetched:\n      const merged = updateMachineFields(\n        theMachineData,\n        machineCurrentData,\n        machineFromData\n      );\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n\n      console.log(\n        \"SelectedMachine:\",\n        selectedMachine,\n        \"SelectedCurrentMachine:\",\n        selectedCurrentMachine\n      );\n      // Show local loc inputs if applicable\n      // if (\n      //   selectedMachine &&\n      //   selectedMachine.name &&\n      //   selectedMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocFrom(true);\n      // }\n      // if (\n      //   selectedCurrentMachine &&\n      //   selectedCurrentMachine.name &&\n      //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocCurrent(true);\n      // }\n\n      if (data.Parent) {\n        const parentDoc = await data.Parent.get();\n        setSelectedParent({ id: parentDoc.id, ...parentDoc.data() });\n      }\n\n      // Priority auto‑population of machine fields.\n      // const updatedFields = updateMachineFields(storedMachine, selectedCurrentMachine, selectedMachine);\n      // // console.log(\"Updated machine fields:\", updatedFields);\n      // setOem(updatedFields.oem);\n      // setModality(updatedFields.modality);\n      // setModel(updatedFields.model);\n\n      await fetchPhotos(id);\n      await checkIfAddedToWebsite(id);\n      await calculateItemFrequencyAndUsage(data.pn);\n    } else {\n      router.push({\n        pathname: \"../AddItem/NewItem\",\n        query: { signal: id },\n      });\n    }\n  };\n\n  // Returns the value for a given field from the highest-priority source.\n  function getPriorityMachineField(\n    field,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    console.log(\"the machine: \", theMachine, \"field: \", field);\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field] !== \"N/A\" &&\n      theMachine[field].trim() !== \"\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field] !== \"N/A\" &&\n      currentMachine[field].trim() !== \"\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field] !== \"N/A\" &&\n      fromMachine[field].trim() !== \"\"\n    ) {\n      return fromMachine[field];\n    }\n    return \"\";\n  }\n\n  // Returns an object with updated OEM, modality, and model fields.\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getPriorityMachineField(\n        \"OEM\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      modality: getPriorityMachineField(\n        \"Modality\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      model: getPriorityMachineField(\n        \"Model\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n    };\n  }\n\n  const calculateItemFrequencyAndUsage = async (pn) => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n\n    const normalizedPN = pn !== undefined ? pn : \"\";\n    const itemsSnapshot = await db\n      .collection(\"Test\")\n      .where(\"pn\", \"==\", normalizedPN)\n      .get();\n\n    setFreqItem(itemsSnapshot.size);\n\n    let usagePastYear = 0;\n    itemsSnapshot.forEach((doc) => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach((workOrder) => {\n        const workOrderDate = new Date(workOrder.date);\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  };\n\n  const fetchMachine = async (machineId) => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData);\n      // re-merge all three sources with correct priority:\n      const merged = updateMachineFields(\n        machineData,\n        selectedCurrentMachine,\n        selectedMachine\n      );\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n      const machinesSnapshot = await db\n        .collection(\"Machine\")\n        .where(\"Model\", \"==\", machineData.Model || machineData.model)\n        .get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  };\n\n  const fetchPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    const listRef = storageRef.child(`Parts/${docID}`);\n    try {\n      const res = await listRef.listAll();\n      const urls = await Promise.all(\n        res.items.map((item) => item.getDownloadURL())\n      );\n      console.log(\"Fetched photo URLs:\", urls);\n      setPhotos(urls.map((url) => ({ url, file: null })));\n    } catch (error) {\n      console.error(\"Error fetching photos: \", error);\n    }\n  };\n\n  const checkIfAddedToWebsite = async (docID) => {\n    const db = firebase.firestore();\n    const partsDoc = await db.collection(\"Parts\").doc(docID).get();\n    if (partsDoc.exists) {\n      setAddToWebsite(true);\n    }\n  };\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseErr = () => setShowErr(false);\n  const handleShowErr = () => setShowErr(true);\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n  const handleClosePrintModal = () => setShowPrintModal(false);\n  const handleShowSaveModal = () => setShowSaveModal(true);\n  const handleShowPrintModal = () => setShowPrintModal(true);\n  const handleMachineSelectionModal = () => setMachineSelectionModal(false);\n  const handleCloseDescModal = () => setShowDescModal(false);\n  const handleShowDescModal = () => setShowDescModal(true);\n  const handleCloseWoModal = () => setShowWoModal(false);\n  const handleShowWoModal = () => setShowWoModal(true);\n  const handleCloseClientModal = () => setShowClientModal(false);\n  const handleShowClientModal = () => setShowClientModal(true);\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n  const handleCloseParentModal = () => setShowParentModal(false);\n  const handleShowParentModal = () => setShowParentModal(true);\n\n  // When a client is selected from the client table.\n  const handleClientInfo = async (clientId) => {\n    // Clear any previously selected machine and local loc info for this branch.\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n    if (clientDoc.exists) {\n      const clientData = { id: clientDoc.id, ...clientDoc.data() };\n      if (machinePick) {\n        setSelectedClientFrom(clientData);\n      } else {\n        setSelectedClientCurrent(clientData);\n      }\n      // after setting selectedClientFrom/Current:\n      if (clientData.name === \"SoCalWarehouse\") {\n        if (machinePick) setShowLocalLocFrom(true);\n        else setShowLocalLocCurrent(true);\n      }\n      // Fetch machines for this client:\n      const machinePromises = clientData.machines.map((machineRef) =>\n        machineRef.get()\n      );\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map((machineDoc) => ({\n        id: machineDoc.id,\n        ...machineDoc.data(),\n      }));\n      setMachineOptions(machines);\n      // Close the client modal\n      handleCloseClientModal();\n    }\n  };\n\n  // Reordering function for dropdowns.\n  const reorderArray = (arr, selectedValue) => {\n    const newArr = arr.filter((val) => val !== selectedValue);\n    return [selectedValue, ...newArr];\n  };\n\n  const [addingNewPn, setAddingNewPn] = useState(false);\n  const [newPn, setNewPn] = useState(\"\");\n  const [addingNewSn, setAddingNewSn] = useState(false);\n  const [newSn, setNewSn] = useState(\"\");\n\n  const handlePnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return { ...prev, pn: updatedPn };\n    });\n  };\n\n  const handleSnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return { ...prev, sn: updatedSn };\n    });\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  // Generate custom document ID if needed.\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  function shallowClean(obj) {\n    const newObj = {};\n    for (const key in obj) {\n      console.log(key, obj[key]);\n      if (obj.hasOwnProperty(key)) {\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\n      }\n    }\n    return newObj;\n  }\n\n  async function toSend() {\n    const db = firebase.firestore();\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\";\n\n    // Always use the current state values for OEM, modality, and model.\n    const machineData = {\n      ...(TheMachine || {}),\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    const formattedItems = { ...items, descriptions, workOrders };\n    // Remove any unused fields.\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite;\n\n    // NEW: Add the user's email under the field \"user\"\n    formattedItems.lastEdited = userEmail;\n\n    // Clean pn and sn arrays to replace undefined values with an empty string.\n    formattedItems.pn = (items.pn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n    formattedItems.sn = (items.sn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n\n    const fromDetails = buildLocalLocObject(newLocalFrom);\n    const currentDetails = buildLocalLocObject(newLocalCurrent);\n\n    console.log(\n      \"From Details: \" +\n        fromDetails.region +\n        \" \" +\n        fromDetails.section?.letter +\n        fromDetails.section?.number +\n        \" \" +\n        fromDetails.bin +\n        \" \" +\n        fromDetails.pallet\n    );\n    console.log(\n      \"Current Details: \" +\n        currentDetails.region +\n        \" \" +\n        currentDetails.section?.letter +\n        currentDetails.section?.number +\n        \" \" +\n        currentDetails.bin +\n        \" \" +\n        currentDetails.pallet\n    );\n\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n      formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      console.log(\"entered empty fromDetails else\");\n      formattedItems.localLocFrom = \"\";\n      formattedItems.newLocalFrom = {};\n    }\n\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n      formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      formattedItems.localLocCurrent = \"\";\n      formattedItems.newLocalCurrent = {};\n    }\n\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db\n        .collection(\"Machine\")\n        .doc(selectedMachine.id);\n    }\n\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db\n        .collection(\"Machine\")\n        .doc(selectedCurrentMachine.id);\n    }\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    }\n\n    // NEW: Set separate client references.\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db\n        .collection(\"Client\")\n        .doc(selectedClientFrom.id);\n    }\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db\n        .collection(\"Client\")\n        .doc(selectedClientCurrent.id);\n    }\n\n    // Only attach the richer “newLocal” map when the user actually filled something in\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n    }\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n    }\n\n    let docId = id;\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : docId;\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n          // Delete the old document.\n          await db.collection(\"Test\").doc(docId).delete();\n          // Set docId to the new document ID.\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db\n            .collection(\"Machine\")\n            .doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n      }\n      // Upload any new photos to Firebase Storage.\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\");\n\n      // Redirect to the new URL using the new document id.\n      router.push(`/NewSearch/item/${docId}`);\n\n      // Optionally, you can also show a save confirmation modal:\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  }\n\n  // Additional state for local warehouse location inputs.\n  const [showLocalLocFrom, setShowLocalLocFrom] = useState(false);\n  const [showLocalLocCurrent, setShowLocalLocCurrent] = useState(false);\n\n  // When a machine is selected from the modal.\n  const handleSetSelectedMachine = (machine) => {\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    const isSocalInterior = machine.name?.toLowerCase() === \"interior socal\";\n\n    if (machinePick) {\n      setSelectedMachine({ id: machine.id, name: machine.name });\n      setShowLocalLocFrom(\n        isSocalInterior ||\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\n      );\n    } else {\n      setSelectedCurrentMachine({ id: machine.id, name: machine.name });\n      setShowLocalLocCurrent(\n        isSocalInterior ||\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\n      );\n    }\n    fetchMachine(machine.id);\n    // Close the machine modal (assuming you're using showMachineModal to control it)\n    setShowMachineModal(false);\n  };\n\n  const uploadPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(\n          `Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`\n        );\n        const metadata = {\n          contentType: \"image/png\",\n        };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  };\n\n  // Function to handle printing the label.\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    }\n\n    let clientName = \"\";\n\n    // Attempt to fetch client name from the Machine document reference.\n    if (items.Machine && typeof items.Machine.get === \"function\") {\n      try {\n        const machineDoc = await items.Machine.get();\n        if (machineDoc.exists) {\n          const machineData = machineDoc.data();\n          if (\n            machineData.client &&\n            typeof machineData.client.get === \"function\"\n          ) {\n            const clientDoc = await machineData.client.get();\n            if (clientDoc.exists) {\n              clientName = clientDoc.data().name || \"\";\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine or client:\", error);\n      }\n    } else {\n      console.warn(\"No Machine reference available in the item\");\n    }\n    console.log(clientName, \":\", items.client);\n    // Fallback: if no client name was found, check items.client.\n    if (!clientName && items.client) {\n      if (typeof items.client.get === \"function\") {\n        try {\n          const clientDoc = await items.client.get();\n          if (clientDoc.exists) {\n            clientName = clientDoc.data().name || \"\";\n          }\n        } catch (error) {\n          console.error(\"Error fetching client from items.client:\", error);\n        }\n      } else {\n        clientName = items.client;\n      }\n    }\n    console.log(\"descriptions:\", descriptions[selectedDesc]);\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      client: clientName,\n      status: items.status,\n      local_sn: id,\n      descriptions: [\n        descriptions[selectedDesc] || { description: \"\", date: \"\" },\n      ],\n      date: items.dateCreated || \"\",\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model,\n      poNumber: items.poNumber,\n      arrival_date: items.arrival_date, // NEW: Include arrival_date\n    };\n\n    console.log(\"Payload for printing:\", payload);\n    try {\n      const response = await fetch(\n        \"https://9d70-174-76-22-138.ngrok-free.app/print-label\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      console.log(\"Print result:\", result.status);\n\n      if (result.status.includes(\"successfully.\")) {\n        handleShowPrintModal();\n      } else {\n        console.error(\"Error printing label:\", result.error);\n      }\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    // Only check that the Name field is filled out.\n    if (!items.name) {\n      handleShow(); // This shows the \"missing field\" modal.\n    } else {\n      toSend();\n    }\n  }\n\n  // Handlers for input changes.\n  const handleChange = (field) => (event) => {\n    const value = event.target ? event.target.value : event.value;\n    setItems((prevItems) => ({ ...prevItems, [field]: value }));\n  };\n\n  const addDescription = () => {\n    setDescriptions([...descriptions, { description: \"\", date: \"\" }]);\n  };\n\n  const removeDescription = (index) => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) =>\n      i === index ? { ...desc, [field]: value } : desc\n    );\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, { workOrder: \"\", date: \"\" }]);\n  };\n\n  const removeWorkOrder = (index) => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) =>\n      i === index ? { ...wo, [field]: value } : wo\n    );\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = (index) => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const savePhoto = () => {\n    setPhotos((prevPhotos) => [\n      ...prevPhotos,\n      { file: capturedPhoto, url: URL.createObjectURL(capturedPhoto) },\n    ]);\n    setCapturedPhoto(null);\n    handleCloseCameraModal();\n  };\n\n  const removePhoto = (index) => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  };\n\n  const mostRecentWorkOrder =\n    workOrders && workOrders.length > 0\n      ? workOrders.reduce((latest, current) => {\n          const latestDate = new Date(latest.date);\n          const currentDate = new Date(current.date);\n          return currentDate > latestDate ? current : latest;\n        }, workOrders[0])\n      : {};\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob) => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handlePnChange = (index, value) => {\n    setItems((prev) => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return { ...prev, pn: newPn };\n    });\n  };\n\n  const addPn = () => {\n    setItems((prev) => ({\n      ...prev,\n      pn: [...prev.pn, \"\"],\n    }));\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems((prev) => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return { ...prev, sn: newSn };\n    });\n  };\n\n  const addSn = () => {\n    setItems((prev) => ({\n      ...prev,\n      sn: [...prev.sn, \"\"],\n    }));\n  };\n\n  const browseInputRef = useRef(null);\n\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = (e) => {\n    const files = e.target.files;\n    if (files.length) {\n      const newPhotos = [];\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i]),\n        });\n      }\n      setPhotos((prevPhotos) => [...prevPhotos, ...newPhotos]);\n    }\n    e.target.value = \"\";\n  };\n\n  const [currentPnIndex, setCurrentPnIndex] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentSnIndex, setCurrentSnIndex] = useState(0);\n  const [showSnDropdown, setShowSnDropdown] = useState(false);\n\n  const handleAddNewClient = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    router.push(\n      `../client/AIS${randomNum}/addClient?from=item&itemId=${id || \"\"}`\n    );\n  };\n\n  const handleBluefolderButton = async () => {\n    // Check that the work order field is filled out (using workOrders[0].workOrder as current)\n    const currentWorkOrder =\n      workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\n    if (!currentWorkOrder) {\n      alert(\n        \"Please fill out the work order field before adding to BlueFolder.\"\n      );\n      return;\n    }\n\n    // Build the payload to send to your proxy endpoint.\n    const payload = {\n      name: items.name,\n      pn: items.pn[0] || \"\",\n      sn: items.sn[0] || \"\",\n      status: items.status,\n      description: descriptions[selectedDesc]?.description || \"\",\n      workOrder: currentWorkOrder,\n      localsn: items.localSN || \"\",\n    };\n\n    try {\n      // Replace with your ngrok URL and appropriate endpoint path (e.g., /api/bluefolder)\n      const response = await fetch(\n        \"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      alert(\"BlueFolder service item added successfully!\");\n      console.log(\"BlueFolder result:\", result);\n    } catch (error) {\n      console.error(\"BlueFolder error:\", error);\n      alert(\"Error adding data to BlueFolder.\");\n    }\n  };\n\n  return (\n    <LoggedIn>\n      <div>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Error</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Missing field</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showErr} onHide={handleCloseErr}>\n          <Modal.Header closeButton>\n            <Modal.Title>Error</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{Err}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseErr}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showSaveModal} onHide={handleCloseSaveModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Save Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Data has been saved successfully.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseSaveModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showPrintModal} onHide={handleClosePrintModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Print Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Info has been sent to print.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleClosePrintModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={showDescModal} onHide={handleCloseDescModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Descriptions</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n              Add Description\n            </Button>\n            {descriptions.map((desc, index) => (\n              <Row key={index} className=\"mb-3\">\n                <Button\n                  variant=\"outline-secondary\"\n                  className=\"w-100\"\n                  onClick={() => selectDescription(index)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <div className=\"d-flex justify-content-between\">\n                    <span>{desc.description || \"Description\"}</span>\n                    <span\n                      style={{\n                        borderLeft: \"1px solid #ccc\",\n                        paddingLeft: \"10px\",\n                      }}\n                    >\n                      {desc.date || \"Date\"}\n                    </span>\n                  </div>\n                </Button>\n              </Row>\n            ))}\n            <Button variant=\"primary\" onClick={handleCloseDescModal}>\n              OK\n            </Button>\n          </Modal.Body>\n        </Modal>\n\n        <Modal show={showWoModal} onHide={handleCloseWoModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Work Orders</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button\n              variant=\"primary\"\n              className=\"mb-3\"\n              onClick={addWorkOrder}\n              style={{ marginBottom: \"1rem\" }}\n            >\n              Add Work Order\n            </Button>\n            {workOrders.map((wo, index) => (\n              <Row key={index} className=\"mb-3\">\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Work Order\"\n                    value={wo.workOrder}\n                    onChange={(e) =>\n                      handleWorkOrderChange(index, \"workOrder\", e.target.value)\n                    }\n                    style={{ marginBottom: \"0.5rem\" }}\n                  />\n                </Col>\n                <Col>\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={wo.date}\n                    onChange={(e) =>\n                      handleWorkOrderChange(index, \"date\", e.target.value)\n                    }\n                  />\n                </Col>\n                <Col>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => removeWorkOrder(index)}\n                  >\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            ))}\n            <Button variant=\"primary\" onClick={handleCloseWoModal}>\n              OK\n            </Button>\n          </Modal.Body>\n        </Modal>\n\n        <ClientInfoModal\n          show={showMachineModal}\n          handleClose={handleCloseMachineModal}\n          selectedClient={selectedClient}\n          machineOptions={machineOptions}\n          setSelectedMachine={handleSetSelectedMachine}\n        />\n\n        <Modal show={showClientModal} onHide={handleCloseClientModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Select Client</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search by name\"\n              className=\"mb-3\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n            <ClientTable\n              clients={clients.filter((client) =>\n                (client.name || \"\").toLowerCase().includes(search.toLowerCase())\n              )}\n              onSelectClient={handleClientInfo}\n              onInfoClick={handleClientInfo}\n              clearSelection={() => handleClientInfo(null)}\n              onAddClient={handleAddNewClient}\n            />\n          </Modal.Body>\n        </Modal>\n\n        <ParentModal\n          show={showParentModal}\n          handleClose={handleCloseParentModal}\n          setSelectedParent={setSelectedParent}\n        />\n\n        <MachineSelectionModal\n          show={machineSelectionModal}\n          handleClose={() => setMachineSelectionModal(false)}\n          setMachine={setTheMachine}\n        />\n\n        <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Take a Photo</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"camera\">\n              {!capturedPhoto && (\n                <BarcodeScannerComponent\n                  width=\"100%\"\n                  height={300}\n                  onUpdate={handleCapture}\n                  facingMode={cameraFacing}\n                />\n              )}\n              {capturedPhoto && (\n                <div className=\"photo-preview\">\n                  <img\n                    src={URL.createObjectURL(capturedPhoto)}\n                    alt=\"captured\"\n                    style={{ width: \"100%\" }}\n                  />\n                </div>\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            {!capturedPhoto ? (\n              <>\n                <Button\n                  onClick={capturePhoto}\n                  style={{\n                    borderRadius: \"50%\",\n                    width: \"60px\",\n                    height: \"60px\",\n                    position: \"absolute\",\n                    left: \"50%\",\n                    transform: \"translateX(-50%)\",\n                    bottom: \"10px\",\n                  }}\n                >\n                  📷\n                </Button>\n                <Button\n                  onClick={() =>\n                    setCameraFacing((prev) =>\n                      prev === \"environment\" ? \"user\" : \"environment\"\n                    )\n                  }\n                >\n                  Flip Camera\n                </Button>\n                <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                  Cancel\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setCapturedPhoto(null)}\n                >\n                  Retake\n                </Button>\n                <Button variant=\"primary\" onClick={savePhoto}>\n                  OK\n                </Button>\n              </>\n            )}\n          </Modal.Footer>\n        </Modal>\n\n        <InfoModal\n          show={showInfoModal}\n          handleClose={handleCloseInfoModal}\n          itemName={items.name}\n          dimensions={items.length + \",\" + items.width + \",\" + items.height}\n          price={items.price}\n          freqI={freqItem}\n          freqM={machineFrequency}\n          usage={usagePastYear}\n        />\n\n        <Container\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <div className=\"w-100\" style={{ maxWidth: \"600px\" }}>\n            <Card className=\"align-items-center justify-content-center\">\n              <Card.Body>\n                <h2 className=\"text-center mb-4\">Item</h2>\n                <Form onSubmit={handleSubmit}>\n                  {/* Row for Name and PN */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={items.name}\n                          onChange={handleChange(\"name\")}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"pn\">\n                        <Form.Label>Product Number</Form.Label>\n                        <div style={{ position: \"relative\" }}>\n                          <InputGroup>\n                            <Form.Control\n                              type=\"text\"\n                              value={items.pn[currentPnIndex] || \"\"}\n                              onChange={(e) =>\n                                handlePnChange(currentPnIndex, e.target.value)\n                              }\n                            />\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowDropdown(!showDropdown)}\n                            >\n                              &#9662;\n                            </Button>\n                            <InputGroup.Text>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setAddingNewPn(true)}\n                              >\n                                +\n                              </Button>\n                            </InputGroup.Text>\n                          </InputGroup>\n                          {showDropdown && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                top: \"100%\",\n                                left: 0,\n                                right: 0,\n                                backgroundColor: \"white\",\n                                border: \"1px solid #ccc\",\n                                zIndex: 1000,\n                                maxHeight: \"150px\",\n                                overflowY: \"auto\",\n                              }}\n                            >\n                              {pnOptions.map((pnOption, idx) => (\n                                <div\n                                  key={idx}\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    setCurrentPnIndex(idx);\n                                    setShowDropdown(false);\n                                  }}\n                                >\n                                  {pnOption}\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                        {addingNewPn && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter new PN\"\n                            value={newPn}\n                            onChange={(e) => setNewPn(e.target.value)}\n                            onBlur={handleAddNewPn}\n                            onKeyDown={(e) =>\n                              e.key === \"Enter\" && handleAddNewPn()\n                            }\n                          />\n                        )}\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  {/* Row for SN and Status */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Group controlId=\"sn\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <div style={{ position: \"relative\" }}>\n                          <InputGroup>\n                            <Form.Control\n                              type=\"text\"\n                              value={items.sn[currentSnIndex] || \"\"}\n                              onChange={(e) =>\n                                handleSnChange(currentSnIndex, e.target.value)\n                              }\n                            />\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowSnDropdown(!showSnDropdown)}\n                            >\n                              &#9662;\n                            </Button>\n                            <InputGroup.Text>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setAddingNewSn(true)}\n                              >\n                                +\n                              </Button>\n                            </InputGroup.Text>\n                          </InputGroup>\n                          {showSnDropdown && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                top: \"100%\",\n                                left: 0,\n                                right: 0,\n                                backgroundColor: \"white\",\n                                border: \"1px solid #ccc\",\n                                zIndex: 1000,\n                                maxHeight: \"150px\",\n                                overflowY: \"auto\",\n                              }}\n                            >\n                              {snOptions.map((snOption, idx) => (\n                                <div\n                                  key={idx}\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    setCurrentSnIndex(idx);\n                                    setShowSnDropdown(false);\n                                  }}\n                                >\n                                  {snOption}\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                        {addingNewSn && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter new SN\"\n                            value={newSn}\n                            onChange={(e) => setNewSn(e.target.value)}\n                            onBlur={handleAddNewSn}\n                            onKeyDown={(e) =>\n                              e.key === \"Enter\" && handleAddNewSn()\n                            }\n                          />\n                        )}\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Select\n                          value={items.status || \"\"}\n                          onChange={handleChange(\"status\")}\n                        >\n                          <option value=\"\">Select status</option>\n                          <option value=\"Good\">Good</option>\n                          <option value=\"Bad\">Bad</option>\n                          <option value=\"Unknown\">Unknown</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  {/* Row for OEM, Modality, Model */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Label>OEM</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"OEM\"\n                        value={oem}\n                        onChange={(e) => setOem(e.target.value)}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Label>Modality</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Modality\"\n                        value={modality}\n                        onChange={(e) => setModality(e.target.value)}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Label>Model</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Model\"\n                        value={model}\n                        onChange={(e) => setModel(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                  {/* Work Orders and Inline Description Section */}\n                  <div style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\n                    <div className=\"d-flex align-items-center\">\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={handleShowWoModal}\n                        className=\"me-2\"\n                      >\n                        Manage Work Orders\n                      </Button>\n                      {workOrders.length > 0 && (\n                        <div className=\"d-flex flex-column align-items-start\">\n                          <Form.Label>Work Order</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Most Recent Work Order\"\n                            value={mostRecentWorkOrder.workOrder}\n                            onChange={(e) =>\n                              handleWorkOrderChange(\n                                workOrders.indexOf(mostRecentWorkOrder),\n                                \"workOrder\",\n                                e.target.value\n                              )\n                            }\n                            style={{ marginBottom: \"0.5rem\" }}\n                          />\n                          <Form.Label>Date</Form.Label>\n                          <Form.Control\n                            type=\"date\"\n                            placeholder=\"Work Order Date\"\n                            value={mostRecentWorkOrder.date}\n                            onChange={(e) =>\n                              handleWorkOrderChange(\n                                workOrders.indexOf(mostRecentWorkOrder),\n                                \"date\",\n                                e.target.value\n                              )\n                            }\n                            style={{ marginBottom: \"0.5rem\" }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                    <div style={{ marginBottom: \"1rem\" }}>\n                      <Form.Group controlId=\"desc\">\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={listDescriptions}\n                          className=\"mb-2 me-2\"\n                        >\n                          List Descriptions\n                        </Button>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          placeholder=\"Enter description\"\n                          value={descriptions[selectedDesc]?.description || \"\"}\n                          onChange={(e) =>\n                            handleDescriptionChange(\n                              selectedDesc,\n                              \"description\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                        <Form.Control\n                          type=\"date\"\n                          value={descriptions[selectedDesc]?.date || \"\"}\n                          onChange={(e) =>\n                            handleDescriptionChange(\n                              selectedDesc,\n                              \"date\",\n                              e.target.value\n                            )\n                          }\n                          style={{\n                            marginTop: \"0.5rem\",\n                            marginBottom: \"0.5rem\",\n                          }}\n                        />\n                      </Form.Group>\n                    </div>\n                  </div>\n                  {/* Machine Selection Row */}\n                  <div style={{ marginBottom: \"1rem\" }}>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={() => {\n                            setMachinePick(true);\n                            handleShowClientModal();\n                          }}\n                          className=\"me-2\"\n                        >\n                          Select From\n                        </Button>\n                        {selectedClientFrom && (\n                          <div\n                            style={{\n                              border: \"1px solid #ccc\",\n                              padding: \"0.75rem\",\n                              borderRadius: \"4px\",\n                              marginBottom: \"1rem\",\n                            }}\n                          >\n                            <p>\n                              <strong>Selected Client (From):</strong>{\" \"}\n                              {selectedClientFrom.name}\n                            </p>\n                            <div style={{ marginTop: \"0.5rem\" }}>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setShowMachineModal(true)}\n                              >\n                                Select Machine for {selectedClientFrom.name}\n                              </Button>\n                              {selectedMachine && (\n                                <>\n                                  <p style={{ marginTop: \"0.5rem\" }}>\n                                    <strong>Selected Machine (From):</strong>{\" \"}\n                                    {selectedMachine.name}\n                                  </p>\n                                  {showLocalLocFrom && (\n                                    <>\n                                      <Button\n                                        variant=\"outline-secondary\"\n                                        onClick={() =>\n                                          setShowNewLocalModalFrom(true)\n                                        }\n                                        className=\"w-100 mb-2\"\n                                      >\n                                        {/* build a little helper inline: region-section-bin-pallet */}\n                                        {[\n                                          newLocalFrom.region,\n                                          newLocalFrom.section?.letter +\n                                            newLocalFrom.section?.number,\n                                          newLocalFrom.bin &&\n                                            `B${newLocalFrom.bin}`,\n                                          newLocalFrom.pallet &&\n                                            `P${newLocalFrom.pallet}`,\n                                        ]\n                                          .filter(Boolean)\n                                          .join(\"-\")}\n                                        {/* e.g. “E-A7-B3-P2” */}\n                                      </Button>\n\n                                      <Modal\n                                        show={showNewLocalModalFrom}\n                                        onHide={() =>\n                                          setShowNewLocalModalFrom(false)\n                                        }\n                                        centered\n                                      >\n                                        <Modal.Header>\n                                          <Modal.Title>\n                                            Edit Local Loc (From)\n                                          </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                          <NewLocal\n                                            selectedClient={selectedClientFrom}\n                                            showLocalLoc={showNewLocalModalFrom}\n                                            value={newLocalFrom}\n                                            onChange={setNewLocalFrom}\n                                            onSave={(p) => {\n                                              setNewLocalFrom(p);\n                                              setShowNewLocalModalFrom(false);\n                                            }}\n                                            onCancel={() =>\n                                              setShowNewLocalModalFrom(false)\n                                            }\n                                          />\n                                        </Modal.Body>\n                                        {/* <Modal.Footer>\n                                          <Button\n                                            variant=\"secondary\"\n                                            onClick={() => setShowNewLocalModalFrom(false)}\n                                          >\n                                            Close\n                                          </Button>\n                                        </Modal.Footer> */}\n                                      </Modal>\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Col>\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={() => {\n                            setMachinePick(false);\n                            handleShowClientModal();\n                          }}\n                          className=\"me-2\"\n                        >\n                          Select Current\n                        </Button>\n                        {selectedClientCurrent && (\n                          <div\n                            style={{\n                              border: \"1px solid #ccc\",\n                              padding: \"0.75rem\",\n                              borderRadius: \"4px\",\n                              marginBottom: \"1rem\",\n                            }}\n                          >\n                            <p>\n                              <strong>Selected Client (Current):</strong>{\" \"}\n                              {selectedClientCurrent.name}\n                            </p>\n                            <div style={{ marginTop: \"0.5rem\" }}>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setShowMachineModal(true)}\n                              >\n                                Select Machine for {selectedClientCurrent.name}\n                              </Button>\n                              {selectedCurrentMachine && (\n                                <>\n                                  <p style={{ marginTop: \"0.5rem\" }}>\n                                    <strong>Selected Machine (Current):</strong>{\" \"}\n                                    {selectedCurrentMachine.name}\n                                  </p>\n                                  {showLocalLocCurrent && (\n                                    <>\n                                      <Button\n                                        variant=\"outline-secondary\"\n                                        onClick={() =>\n                                          setShowNewLocalModalCurrent(true)\n                                        }\n                                        className=\"w-100 mb-2\"\n                                      >\n                                        {[\n                                          newLocalCurrent.region,\n                                          newLocalCurrent.section?.letter +\n                                            newLocalCurrent.section?.number,\n                                          newLocalCurrent.bin &&\n                                            `B${newLocalCurrent.bin}`,\n                                          newLocalCurrent.pallet &&\n                                            `P${newLocalCurrent.pallet}`,\n                                        ]\n                                          .filter(Boolean)\n                                          .join(\"-\")}\n                                      </Button>\n                                      <Modal\n                                        show={showNewLocalModalCurrent}\n                                        onHide={() =>\n                                          setShowNewLocalModalCurrent(false)\n                                        }\n                                        centered\n                                      >\n                                        <Modal.Header>\n                                          <Modal.Title>\n                                            Edit Local Loc (Current)\n                                          </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                          <NewLocal\n                                            selectedClient={\n                                              selectedClientCurrent\n                                            }\n                                            showLocalLoc={\n                                              showNewLocalModalCurrent\n                                            }\n                                            value={newLocalCurrent}\n                                            onChange={setNewLocalCurrent}\n                                            onSave={(p) => {\n                                              setNewLocalCurrent(p);\n                                              setShowNewLocalModalCurrent(\n                                                false\n                                              );\n                                            }}\n                                            onCancel={() =>\n                                              setShowNewLocalModalCurrent(false)\n                                            }\n                                          />\n                                        </Modal.Body>\n                                        {/* <Modal.Footer>\n                                          <Button\n                                            variant=\"secondary\"\n                                            onClick={() => setShowNewLocalModalCurrent(false)}\n                                          >\n                                            Close\n                                          </Button>\n                                        </Modal.Footer> */}\n                                      </Modal>\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Col>\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleShowParentModal}\n                          className=\"me-2\"\n                        >\n                          Select Parent\n                        </Button>\n                        {selectedParent && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Selected Parent\"\n                            value={selectedParent.name}\n                            readOnly\n                            style={{ marginTop: \"0.5rem\" }}\n                          />\n                        )}\n                      </Col>\n                    </Row>\n                  </div>\n                  {/* Photo and Website Options */}\n                  <div style={{ marginBottom: \"1rem\" }}>\n                    <Row className=\"mb-3\">\n                      <Col xs={6}>\n                        <ButtonGroup>\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={handleShowCameraModal}\n                          >\n                            Take Photo\n                          </Button>\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={handleBrowsePhotos}\n                          >\n                            Browse\n                          </Button>\n                        </ButtonGroup>\n                      </Col>\n                      <Col xs={6} className=\"d-flex align-items-center\">\n                        <Button\n                          variant=\"success\"\n                          onClick={handleSendToInflow}\n                          style={{ marginLeft: \"auto\" }}\n                        >\n                          Send to inFlow\n                        </Button>\n                        <Button\n                          variant=\"secondary\"\n                          onClick={handleBluefolderButton}\n                          style={{ marginLeft: \"0.5rem\", marginRight: \".5rem\" }}\n                        >\n                          BlueFolder\n                        </Button>\n\n                        <Button\n                          variant={addToWebsite ? \"primary\" : \"outline-primary\"}\n                          onClick={() => setAddToWebsite((prev) => !prev)}\n                        >\n                          {addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"}\n                        </Button>\n\n                        <Form.Check\n                          type=\"checkbox\"\n                          id=\"hide-checkbox\"\n                          label=\"Hide\"\n                          // box is checked when we want visible = false\n                          checked={!items.visible}\n                          onChange={(e) => {\n                            // grab checked immediately\n                            const isHidden = e.currentTarget.checked;\n                            setItems((prev) => ({\n                              ...prev,\n                              visible: !isHidden,\n                            }));\n                          }}\n                          className=\"ms-3\"\n                        />\n                      </Col>\n                    </Row>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      multiple\n                      ref={browseInputRef}\n                      style={{ display: \"none\" }}\n                      onChange={handleFilesSelected}\n                    />\n                  </div>\n                  {/* Photo Gallery */}\n                  {photos && photos.length > 0 && (\n                    <div\n                      className=\"photo-gallery\"\n                      style={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        gap: \"10px\",\n                        marginBottom: \"1rem\",\n                      }}\n                    >\n                      {photos.map((photo, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            position: \"relative\",\n                            width: \"100px\",\n                            height: \"100px\",\n                          }}\n                        >\n                          <img\n                            src={photo.url}\n                            alt={`Photo ${index + 1}`}\n                            style={{\n                              width: \"100%\",\n                              height: \"100%\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                          {photo.file && (\n                            <Button\n                              variant=\"danger\"\n                              size=\"sm\"\n                              style={{\n                                position: \"absolute\",\n                                top: 0,\n                                right: 0,\n                                padding: \"0 5px\",\n                              }}\n                              onClick={() => removePhoto(index)}\n                            >\n                              x\n                            </Button>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  {/* Action Buttons */}\n                  <div className=\"mt-3 d-flex flex-wrap align-items-center\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      style={{ marginRight: \"1rem\" }}\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={handleShowInfoModal}\n                      style={{ marginRight: \"1rem\" }}\n                    >\n                      More Info\n                    </Button>\n                    <LoadingButton\n                      type=\"primary\"\n                      name=\"Back\"\n                      route=\"NewSearch/mainSearch\"\n                    />\n                    <Button\n                      variant=\"info\"\n                      onClick={handlePrint}\n                      style={{ marginLeft: \"auto\" }}\n                    >\n                      Print Label\n                    </Button>\n                  </div>\n                  <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\n                    <Button\n                      variant=\"link\"\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"black\",\n                        fontSize: \"24px\",\n                      }}\n                      onClick={() => setShowExtra(!showExtra)}\n                    >\n                      ▼\n                    </Button>\n                  </div>\n                  <Collapse in={showExtra}>\n                    <div id=\"extra-collapse\" className=\"mt-3\">\n                      <Row>\n                        <Form.Group as={Col} controlId=\"dimensions\">\n                          <Form.Label>Dimensions</Form.Label>\n                          <div\n                            style={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Form.Control\n                              placeholder=\"Length\"\n                              type=\"text\"\n                              value={items.length}\n                              onChange={handleChange(\"length\")}\n                            />\n                            <span style={{ padding: \"0 5px\" }}>x</span>\n                            <Form.Control\n                              placeholder=\"Width\"\n                              type=\"text\"\n                              value={items.width}\n                              onChange={handleChange(\"width\")}\n                            />\n                            <span style={{ padding: \"0 5px\" }}>x</span>\n                            <Form.Control\n                              placeholder=\"Height\"\n                              type=\"text\"\n                              value={items.height}\n                              onChange={handleChange(\"height\")}\n                            />\n                          </div>\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"trackingNumber\">\n                          <Form.Label>Tracking Number</Form.Label>\n                          <Form.Control\n                            placeholder=\"Tracking Number\"\n                            type=\"text\"\n                            value={items.trackingNumber}\n                            onChange={handleChange(\"trackingNumber\")}\n                          />\n                        </Form.Group>\n                      </Row>\n\n                      <Row className=\"mt-3\">\n                        <Form.Group as={Col} controlId=\"Price\">\n                          <Form.Label>Price</Form.Label>\n                          <Form.Control\n                            placeholder=\"Price\"\n                            type=\"text\"\n                            value={items.price}\n                            onChange={handleChange(\"price\")}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"DOM\">\n                          <Form.Label>DOM</Form.Label>\n                          <Form.Control\n                            placeholder=\"Date of Manufacture\"\n                            type=\"date\"\n                            value={DOM}\n                            onChange={(e) => setDOM(e.target.value)}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"poNumber\">\n                          <Form.Label>PO Number</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"PO Number\"\n                            value={items.poNumber || \"\"}\n                            onChange={handleChange(\"poNumber\")}\n                          />\n                        </Form.Group>\n                      </Row>\n                      <Row className=\"mt-3\">\n                        <Form.Group as={Col} controlId=\"localSN\">\n                          <Form.Label>Local SN</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Local SN\"\n                            value={items.localSN || \"\"}\n                            onChange={handleChange(\"localSN\")}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"arrivalDate\">\n                          <Form.Label>Arrival Date</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter Arrival Date\"\n                            type=\"date\"\n                            value={items.arrival_date}\n                            onChange={(e) => {\n                              const value = e.target.value;\n                              setItems((prev) => ({\n                                ...prev,\n                                arrival_date: value,\n                              }));\n                            }}\n                          />\n                        </Form.Group>\n                      </Row>\n                    </div>\n                  </Collapse>\n                </Form>\n              </Card.Body>\n            </Card>\n          </div>\n        </Container>\n      </div>\n      {/* Camera Modal */}\n      <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Take a Photo</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"camera\">\n            {!capturedPhoto ? (\n              <BarcodeScannerComponent\n                width=\"100%\"\n                height={300}\n                onUpdate={handleCapture}\n                facingMode={cameraFacing}\n              />\n            ) : (\n              <div className=\"photo-preview\">\n                <img\n                  src={URL.createObjectURL(capturedPhoto)}\n                  alt=\"captured\"\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n            )}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {!capturedPhoto ? (\n            <>\n              <Button\n                onClick={capturePhoto}\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"60px\",\n                  height: \"60px\",\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  bottom: \"10px\",\n                }}\n              >\n                📷\n              </Button>\n              <Button\n                onClick={() =>\n                  setCameraFacing((prev) =>\n                    prev === \"environment\" ? \"user\" : \"environment\"\n                  )\n                }\n              >\n                Flip Camera\n              </Button>\n              <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setCapturedPhoto(null)}\n              >\n                Retake\n              </Button>\n              <Button variant=\"primary\" onClick={savePhoto}>\n                OK\n              </Button>\n            </>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </LoggedIn>\n  );\n}\n\n// Server-side rendering function\nexport async function getServerSideProps(context) {\n  const { id } = context.params;\n\n  try {\n    // Fetch item data from Firestore using Admin SDK\n    const itemDoc = await adminDb.collection(\"Test\").doc(id).get();\n\n    if (!itemDoc.exists) {\n      return {\n        notFound: true, // This will show a 404 page\n      };\n    }\n\n    const itemData = itemDoc.data();\n\n    // Fetch machine data if it exists\n    let machineData = {};\n    if (itemData.Machine && itemData.Machine.path) {\n      try {\n        const machineDoc = await adminDb.doc(itemData.Machine.path).get();\n        if (machineDoc.exists) {\n          machineData = machineDoc.data();\n\n          // Fetch client data if it exists\n          if (machineData.client && machineData.client.path) {\n            const clientDoc = await adminDb.doc(machineData.client.path).get();\n            if (clientDoc.exists) {\n              machineData.Client = clientDoc.data().name;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    }\n\n    // Serialize the item data, removing any non-serializable fields\n    const serializedItem = {\n      id,\n      name: itemData.name || \"\",\n      pn: itemData.pn || [],\n      sn: itemData.sn || [],\n      price: itemData.price || \"\",\n      status: itemData.status || \"\",\n      length: itemData.length || \"\",\n      width: itemData.width || \"\",\n      height: itemData.height || \"\",\n      poNumber: itemData.poNumber || \"\",\n      trackingNumber: itemData.trackingNumber || \"\",\n      localSN: itemData.localSN || \"\",\n      arrival_date: itemData.arrival_date || \"\",\n      visible: itemData.visible !== undefined ? itemData.visible : true,\n      // Add other item fields as needed, but ensure they're serializable\n    };\n\n    return {\n      props: {\n        initialItem: serializedItem,\n        initialMachineData: machineData,\n      },\n    };\n  } catch (error) {\n    console.error(\"Error in getServerSideProps:\", error);\n    return {\n      props: {\n        error: \"Failed to load item data\",\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}