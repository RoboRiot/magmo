{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Card, Container, Table } from \"react-bootstrap\";\nimport styles from \"../../styles/Home.module.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport firebase from \"../../context/Firebase\";\nimport LoggedIn from \"../LoggedIn\";\nexport default function ClientList() {\n  // Hooks and state initialization\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useState = useState([]),\n      clients = _useState[0],\n      setClients = _useState[1];\n\n  var db = firebase.firestore();\n\n  var _useState2 = useState(false),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useState3 = useState(),\n      dItem = _useState3[0],\n      setDItem = _useState3[1];\n\n  var router = useRouter(); // Fetch data when the component mounts or route changes\n\n  useEffect(function () {\n    fetchData();\n  }, [router.route]); // Function to fetch clients from Firebase\n\n  function fetchClients() {\n    return _fetchClients.apply(this, arguments);\n  } // Function to initiate fetching of data and setting state\n\n\n  function _fetchClients() {\n    _fetchClients = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var data, id;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = [];\n              id = [];\n              _context3.next = 4;\n              return db.collection(\"Client\").get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (element) {\n                  id.push(element.id);\n                  data.push(element.data());\n                });\n              });\n\n            case 4:\n              return _context3.abrupt(\"return\", [data, id]);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchClients.apply(this, arguments);\n  }\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  } // Handler for row selection (navigation)\n\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _yield$fetchClients, _yield$fetchClients2, data, id;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchClients();\n\n            case 2:\n              _yield$fetchClients = _context4.sent;\n              _yield$fetchClients2 = _slicedToArray(_yield$fetchClients, 2);\n              data = _yield$fetchClients2[0];\n              id = _yield$fetchClients2[1];\n              setClients(data.map(function (client, index) {\n                return _objectSpread(_objectSpread({}, client), {}, {\n                  id: id[index]\n                });\n              }));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  var rowSelect = function rowSelect(id) {\n    router.push(\"client/\" + id);\n  }; // Handler for checking deletion confirmation\n\n\n  var checkDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(client) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDItem(client.Name);\n              handleShow();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // Handler for actual deletion of a client\n\n\n  var deleteItem = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(clientId) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return db.collection(\"Client\").doc(clientId)[\"delete\"]();\n\n            case 2:\n              setClients(clients.filter(function (client) {\n                return client.id !== clientId;\n              }));\n              handleClose();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteItem(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(LoggedIn, null, __jsx(Modal, {\n    show: show,\n    onHide: handleClose\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"Delete\")), __jsx(Modal.Body, null, \"Would you like to delete \\\"\", dItem, \"\\\"\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      return deleteItem(dItem);\n    }\n  }, \"Yes\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose\n  }, \"No\"))), __jsx(Container, {\n    className: \"\".concat(styles.myCustomContainer, \" d-flex align-items-center justify-content-center\"),\n    style: {\n      minHeight: \"100vh\",\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"100%\",\n      margin: \"0 auto\"\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Card.Body, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Client List\"), __jsx(Table, {\n    style: {\n      width: \"100%\"\n    },\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Company\"), __jsx(\"th\", null, \"Location\"), __jsx(\"th\", null, \"Last PM\"), __jsx(\"th\", null, \"Next PM\"), __jsx(\"th\", null, \"Delete\"))), __jsx(\"tbody\", null, clients.map(function (client, index) {\n    return __jsx(\"tr\", {\n      key: client.id\n    }, __jsx(\"td\", {\n      onClick: function onClick() {\n        return rowSelect(client.id);\n      }\n    }, client.Name), __jsx(\"td\", {\n      onClick: function onClick() {\n        return rowSelect(client.id);\n      }\n    }, client.Company), __jsx(\"td\", {\n      onClick: function onClick() {\n        return rowSelect(client.id);\n      }\n    }, client.Location), __jsx(\"td\", {\n      onClick: function onClick() {\n        return rowSelect(client.id);\n      }\n    }, client.LastPM), __jsx(\"td\", {\n      onClick: function onClick() {\n        return rowSelect(client.id);\n      }\n    }, client.NextPM), __jsx(\"td\", null, __jsx(Button, {\n      onClick: function onClick() {\n        return checkDelete(client);\n      },\n      variant: \"danger\"\n    }, \"X\")));\n  }))))))));\n}","map":null,"metadata":{},"sourceType":"module"}