{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\AddItem\\\\NewItem.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Row, Col, Modal, FormControl, Collapse, InputGroup, ButtonGroup, Spinner } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport firebase from \"../../../context/Firebase\";\nimport LoggedIn from \"../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ClientInfoModal from \"../ClientInfoModal\";\nimport ParentModal from \"./parentModal\";\nimport MachineSelectionModal from \"../item/[id]/MachineSelectionModal\";\nimport InfoModal from \"../InfoModal\"; // Load BarcodeScannerComponent only on the client-side.\n\nvar BarcodeScannerComponent = dynamic(_c = function _c() {\n  return import(\"react-qr-barcode-scanner\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-qr-barcode-scanner\")];\n    },\n    modules: [\"NewSearch\\\\AddItem\\\\NewItem.js -> \" + \"react-qr-barcode-scanner\"]\n  }\n}); // Simulate network delay.\n\n_c2 = BarcodeScannerComponent;\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n} // Custom LoadingButton component.\n\n\nfunction LoadingButton(_ref) {\n  _s();\n\n  var type = _ref.type,\n      name = _ref.name,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading) {\n      simulateNetworkRequest().then(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  var handleClick = function handleClick() {\n    return setLoading(true);\n  };\n\n  return __jsx(Link, {\n    href: \"/\".concat(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loading…\" : name));\n}\n\n_s(LoadingButton, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c3 = LoadingButton;\nexport default function NewItem() {\n  _s2();\n\n  var _this = this,\n      _descriptions$selecte,\n      _descriptions$selecte2;\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut; // Initialize item state – for a new item, these start empty.\n  // We store PN and SN as arrays.\n\n\n  var _useState2 = useState({\n    name: \"\",\n    pn: [\"\"],\n    sn: [\"\"],\n    // This will be overridden on submit.\n    localSN: \"\",\n    // NEW FIELD: holds user input for a local serial number.\n    price: \"\",\n    status: \"\",\n    poNumber: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    arrival_date: \"\",\n    // NEW FIELD: Arrival Date\n    visible: true\n  }),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(true),\n      editingPn = _useState3[0],\n      setEditingPn = _useState3[1]; // const [newPn, setNewPn] = useState(\"\"); // for the input value when editing\n\n\n  var _useState4 = useState(true),\n      editingSn = _useState4[0],\n      setEditingSn = _useState4[1]; // const [newSn, setNewSn] = useState(\"\");\n  // DOM is the Date of Manufacture input (user provided).\n\n\n  var _useState5 = useState(\"\"),\n      DOM = _useState5[0],\n      setDOM = _useState5[1]; // OEM, Modality, Model fields.\n\n\n  var _useState6 = useState(\"\"),\n      oem = _useState6[0],\n      setOem = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      modality = _useState7[0],\n      setModality = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      model = _useState8[0],\n      setModel = _useState8[1]; // Local location states.\n\n\n  var _useState9 = useState(\"\"),\n      localLocFrom = _useState9[0],\n      setLocalLocFrom = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      localLocCurrent = _useState10[0],\n      setLocalLocCurrent = _useState10[1]; // Other states.\n\n\n  var _useState11 = useState([]),\n      pnOptions = _useState11[0],\n      setPnOptions = _useState11[1];\n\n  var _useState12 = useState([]),\n      snOptions = _useState12[0],\n      setSnOptions = _useState12[1];\n\n  var _useState13 = useState([{\n    description: \"\",\n    date: \"\"\n  }]),\n      descriptions = _useState13[0],\n      setDescriptions = _useState13[1];\n\n  var _useState14 = useState([{\n    workOrder: \"\",\n    date: \"\"\n  }]),\n      workOrders = _useState14[0],\n      setWorkOrders = _useState14[1];\n\n  var _useState15 = useState([]),\n      clients = _useState15[0],\n      setClients = _useState15[1];\n\n  var _useState16 = useState([]),\n      photos = _useState16[0],\n      setPhotos = _useState16[1];\n\n  var _useState17 = useState(false),\n      show = _useState17[0],\n      setShow = _useState17[1]; // error modal for missing required fields\n\n\n  var _useState18 = useState(false),\n      showErr = _useState18[0],\n      setShowErr = _useState18[1];\n\n  var _useState19 = useState(\"Missing required field: Name and Description\"),\n      Err = _useState19[0],\n      setErr = _useState19[1];\n\n  var _useState20 = useState(false),\n      showDescModal = _useState20[0],\n      setShowDescModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      showWoModal = _useState21[0],\n      setShowWoModal = _useState21[1];\n\n  var _useState22 = useState(false),\n      showClientModal = _useState22[0],\n      setShowClientModal = _useState22[1];\n\n  var _useState23 = useState(false),\n      showMachineModal = _useState23[0],\n      setShowMachineModal = _useState23[1];\n\n  var _useState24 = useState(false),\n      showParentModal = _useState24[0],\n      setShowParentModal = _useState24[1];\n\n  var _useState25 = useState(false),\n      showCameraModal = _useState25[0],\n      setShowCameraModal = _useState25[1];\n\n  var _useState26 = useState(false),\n      showSaveModal = _useState26[0],\n      setShowSaveModal = _useState26[1];\n\n  var _useState27 = useState(false),\n      machineSelectionModal = _useState27[0],\n      setMachineSelectionModal = _useState27[1];\n\n  var _useState28 = useState(0),\n      selectedDesc = _useState28[0],\n      setSelectedDesc = _useState28[1];\n\n  var _useState29 = useState(null),\n      selectedClient = _useState29[0],\n      setSelectedClient = _useState29[1];\n\n  var _useState30 = useState(null),\n      selectedMachine = _useState30[0],\n      setSelectedMachine = _useState30[1];\n\n  var _useState31 = useState(null),\n      selectedCurrentMachine = _useState31[0],\n      setSelectedCurrentMachine = _useState31[1];\n\n  var _useState32 = useState(null),\n      selectedParent = _useState32[0],\n      setSelectedParent = _useState32[1];\n\n  var _useState33 = useState(null),\n      TheMachine = _useState33[0],\n      setTheMachine = _useState33[1];\n\n  var _useState34 = useState([]),\n      machineOptions = _useState34[0],\n      setMachineOptions = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      search = _useState35[0],\n      setSearch = _useState35[1];\n\n  var _useState36 = useState(null),\n      capturedPhoto = _useState36[0],\n      setCapturedPhoto = _useState36[1];\n\n  var _useState37 = useState(\"environment\"),\n      cameraFacing = _useState37[0],\n      setCameraFacing = _useState37[1];\n\n  var _useState38 = useState(false),\n      addToWebsite = _useState38[0],\n      setAddToWebsite = _useState38[1];\n\n  var _useState39 = useState(false),\n      machinePick = _useState39[0],\n      setMachinePick = _useState39[1];\n\n  var _useState40 = useState(0),\n      freqItem = _useState40[0],\n      setFreqItem = _useState40[1];\n\n  var _useState41 = useState(0),\n      usagePastYear = _useState41[0],\n      setUsagePastYear = _useState41[1];\n\n  var _useState42 = useState(0),\n      machineFrequency = _useState42[0],\n      setMachineFrequency = _useState42[1]; // For extra (dimensions/price/DOM) section collapse.\n\n\n  var _useState43 = useState(false),\n      showExtra = _useState43[0],\n      setShowExtra = _useState43[1]; // For PN/SN \"add new\" functionality.\n\n\n  var _useState44 = useState(false),\n      addingNewPn = _useState44[0],\n      setAddingNewPn = _useState44[1];\n\n  var _useState45 = useState(\"\"),\n      newPn = _useState45[0],\n      setNewPn = _useState45[1];\n\n  var _useState46 = useState(false),\n      addingNewSn = _useState46[0],\n      setAddingNewSn = _useState46[1];\n\n  var _useState47 = useState(\"\"),\n      newSn = _useState47[0],\n      setNewSn = _useState47[1]; // For browsing photos.\n\n\n  var browseInputRef = useRef(null); // Inside your NewItem component:\n\n  var _useState48 = useState(false),\n      loading = _useState48[0],\n      setLoading = _useState48[1];\n\n  if (!router.isReady) {\n    return null; // or a loading indicator\n  } // -------------------- Since this is \"add\" mode, we do not fetch an existing document.\n  // However, we still fetch global PN and SN options and clients for selection.\n\n\n  useEffect(function () {\n    function fetchClientsData() {\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    function _fetchClientsData() {\n      _fetchClientsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var clientsData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetchClients();\n\n              case 3:\n                clientsData = _context.sent;\n                console.log(\"Clients:\", clientsData);\n                setClients(clientsData);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Error fetching clients: \", _context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    fetchClientsData();\n  }, []);\n  useEffect(function () {\n    function fetchPnSn() {\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    function _fetchPnSn() {\n      _fetchPnSn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var db, snapshot, pnSet, snSet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                db = firebase.firestore();\n                _context2.next = 3;\n                return db.collection(\"Test\").get();\n\n              case 3:\n                snapshot = _context2.sent;\n                pnSet = new Set();\n                snSet = new Set();\n                snapshot.forEach(function (doc) {\n                  var data = doc.data();\n                  if (data.pn) pnSet.add(data.pn);\n                  if (data.sn) snSet.add(data.sn);\n                });\n                setPnOptions(_toConsumableArray(pnSet));\n                setSnOptions(_toConsumableArray(snSet));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    fetchPnSn();\n  }, []);\n\n  var _useState49 = useState(false),\n      machineFieldsInitialized = _useState49[0],\n      setMachineFieldsInitialized = _useState49[1];\n\n  useEffect(function () {\n    if (!machineFieldsInitialized && (TheMachine || selectedCurrentMachine || selectedMachine)) {\n      var updatedFields = updateMachineFields(TheMachine, selectedCurrentMachine, selectedMachine); // Only set fields if they are empty or \"N/A\"\n\n      if (!oem || oem === \"N/A\") setOem(updatedFields.oem);\n      if (!modality || modality === \"N/A\") setModality(updatedFields.modality);\n      if (!model || model === \"N/A\") setModel(updatedFields.model);\n      setMachineFieldsInitialized(true);\n    }\n  }, [TheMachine, selectedCurrentMachine, selectedMachine, machineFieldsInitialized]);\n\n  var _useState50 = useState(null),\n      signal = _useState50[0],\n      setSignal = _useState50[1];\n\n  useEffect(function () {\n    if (router.isReady) {\n      setSignal(router.query.signal || null);\n    }\n  }, [router.isReady, router.query.signal]); // -------------------- Handlers for PN and SN dropdowns\n  // PN: when a user selects an existing PN value.\n\n  var handlePnSelect = function handlePnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedPn = Array.isArray(prev.pn) ? _toConsumableArray(prev.pn) : [];\n      updatedPn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: updatedPn\n      });\n    });\n  };\n\n  var handlePnChange = function handlePnChange(index, value) {\n    setItems(function (prev) {\n      var newPn = _toConsumableArray(prev.pn);\n\n      newPn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: newPn\n      });\n    });\n  };\n\n  var addPn = function addPn() {\n    if (newPn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          pn: [].concat(_toConsumableArray(prev.pn), [newPn.trim()])\n        });\n      });\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  }; // SN: when a user selects an existing SN value.\n\n\n  var handleSnSelect = function handleSnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedSn = Array.isArray(prev.sn) ? _toConsumableArray(prev.sn) : [];\n      updatedSn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: updatedSn\n      });\n    });\n  };\n\n  var handleSnChange = function handleSnChange(index, value) {\n    setItems(function (prev) {\n      var newSn = _toConsumableArray(prev.sn);\n\n      newSn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: newSn\n      });\n    });\n  };\n\n  var addSn = function addSn() {\n    if (newSn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          sn: [].concat(_toConsumableArray(prev.sn), [newSn.trim()])\n        });\n      });\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  }; // -------------------- Photo Browse Handlers\n\n\n  var handleBrowsePhotos = function handleBrowsePhotos() {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  var handleFilesSelected = function handleFilesSelected(e) {\n    var files = e.target.files;\n\n    if (files.length) {\n      var newPhotos = [];\n\n      for (var i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i])\n        });\n      }\n\n      setPhotos(function (prevPhotos) {\n        return [].concat(_toConsumableArray(prevPhotos), newPhotos);\n      });\n    }\n\n    e.target.value = \"\";\n  }; // -------------------- Photo Capture Handlers remain as in your index.js\n\n\n  var handleCapture = function handleCapture(err, result) {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  var capturePhoto = function capturePhoto() {\n    var video = document.querySelector(\"video\");\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    var context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(function (blob) {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  var savePhoto = function savePhoto() {\n    setPhotos(function (prevPhotos) {\n      return [].concat(_toConsumableArray(prevPhotos), [{\n        file: capturedPhoto,\n        url: URL.createObjectURL(capturedPhoto)\n      }]);\n    });\n    setCapturedPhoto(null);\n    setShowCameraModal(false);\n  };\n\n  var removePhoto = function removePhoto(index) {\n    setPhotos(photos.filter(function (_, i) {\n      return i !== index;\n    }));\n  }; // -------------------- Modal Handlers\n\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleCloseErr = function handleCloseErr() {\n    return setShowErr(false);\n  };\n\n  var handleShowErr = function handleShowErr() {\n    return setShowErr(true);\n  };\n\n  var handleCloseSaveModal = function handleCloseSaveModal() {\n    return setShowSaveModal(false);\n  };\n\n  var handleShowSaveModal = function handleShowSaveModal() {\n    return setShowSaveModal(true);\n  };\n\n  var handleCloseDescModal = function handleCloseDescModal() {\n    return setShowDescModal(false);\n  };\n\n  var handleShowDescModal = function handleShowDescModal() {\n    return setShowDescModal(true);\n  };\n\n  var handleCloseWoModal = function handleCloseWoModal() {\n    return setShowWoModal(false);\n  };\n\n  var handleShowWoModal = function handleShowWoModal() {\n    return setShowWoModal(true);\n  };\n\n  var handleCloseClientModal = function handleCloseClientModal() {\n    return setShowClientModal(false);\n  };\n\n  var handleShowClientModal = function handleShowClientModal() {\n    return setShowClientModal(true);\n  };\n\n  var handleCloseMachineModal = function handleCloseMachineModal() {\n    return setShowMachineModal(false);\n  };\n\n  var handleShowMachineModal = function handleShowMachineModal() {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n\n  var handleCloseParentModal = function handleCloseParentModal() {\n    return setShowParentModal(false);\n  };\n\n  var handleShowParentModal = function handleShowParentModal() {\n    return setShowParentModal(true);\n  }; // -------------------- Work Orders / Descriptions Handlers (unchanged)\n\n\n  var addDescription = function addDescription() {\n    setDescriptions([].concat(_toConsumableArray(descriptions), [{\n      description: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeDescription = function removeDescription(index) {\n    setDescriptions(descriptions.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(index, field, value) {\n    var newDescriptions = descriptions.map(function (desc, i) {\n      return i === index ? _objectSpread(_objectSpread({}, desc), {}, _defineProperty({}, field, value)) : desc;\n    });\n    setDescriptions(newDescriptions);\n  };\n\n  var addWorkOrder = function addWorkOrder() {\n    setWorkOrders([].concat(_toConsumableArray(workOrders), [{\n      workOrder: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeWorkOrder = function removeWorkOrder(index) {\n    setWorkOrders(workOrders.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleWorkOrderChange = function handleWorkOrderChange(index, field, value) {\n    var newWorkOrders = workOrders.map(function (wo, i) {\n      return i === index ? _objectSpread(_objectSpread({}, wo), {}, _defineProperty({}, field, value)) : wo;\n    });\n    setWorkOrders(newWorkOrders);\n  };\n\n  var listDescriptions = function listDescriptions() {\n    setShowDescModal(true);\n  };\n\n  var selectDescription = function selectDescription(index) {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  }; // -------------------- Machine Selection (unchanged)\n\n\n  var handleClientInfo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(clientId) {\n      var db, clientDoc, clientData, machinePromises, machineDocs, machines;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // Clear any previously selected machine/local loc for the branch\n              if (machinePick) {\n                setSelectedMachine(null);\n                setShowLocalLocFrom(false);\n              } else {\n                setSelectedCurrentMachine(null);\n                setShowLocalLocCurrent(false);\n              }\n\n              db = firebase.firestore();\n              _context3.next = 4;\n              return db.collection(\"Client\").doc(clientId).get();\n\n            case 4:\n              clientDoc = _context3.sent;\n\n              if (!clientDoc.exists) {\n                _context3.next = 15;\n                break;\n              }\n\n              clientData = clientDoc.data();\n\n              if (machinePick) {\n                setSelectedClientFrom(_objectSpread({\n                  id: clientDoc.id\n                }, clientData));\n              } else {\n                setSelectedClientCurrent(_objectSpread({\n                  id: clientDoc.id\n                }, clientData));\n              } // Fetch machines for this client:\n\n\n              machinePromises = clientData.machines.map(function (machineRef) {\n                return machineRef.get();\n              });\n              _context3.next = 11;\n              return Promise.all(machinePromises);\n\n            case 11:\n              machineDocs = _context3.sent;\n              machines = machineDocs.map(function (machineDoc) {\n                return _objectSpread({\n                  id: machineDoc.id\n                }, machineDoc.data());\n              });\n              setMachineOptions(machines);\n              handleCloseClientModal();\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleClientInfo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fetchMachine = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(machineId) {\n      var db, doc, machineData, machinesSnapshot;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db = firebase.firestore();\n              _context4.next = 3;\n              return db.collection(\"Machine\").doc(machineId).get();\n\n            case 3:\n              doc = _context4.sent;\n\n              if (!doc.exists) {\n                _context4.next = 16;\n                break;\n              }\n\n              machineData = doc.data();\n              setTheMachine(machineData); // Ensure OEM, Modality, and Model update properly only if necessary\n\n              if (!oem || oem === \"N/A\") setOem(machineData.oem || machineData.OEM || \"\");\n              if (!modality || modality === \"N/A\") setModality(machineData.modality || machineData.Modality || \"\");\n              if (!model || model === \"N/A\") setModel(machineData.model || machineData.Model || \"\"); // Set machine frequency count\n\n              _context4.next = 12;\n              return db.collection(\"Machine\").where(\"Model\", \"==\", machineData.Model || machineData.model).get();\n\n            case 12:\n              machinesSnapshot = _context4.sent;\n              setMachineFrequency(machinesSnapshot.size);\n              _context4.next = 17;\n              break;\n\n            case 16:\n              console.error(\"Machine not found\");\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchMachine(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // -------------------- Frequency/Usage (unchanged)\n\n\n  var calculateItemFrequencyAndUsage = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(pn) {\n      var db, currentDate, oneYearAgo, itemsSnapshot, usagePastYear;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db = firebase.firestore();\n              currentDate = new Date();\n              oneYearAgo = new Date();\n              oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n              _context5.next = 6;\n              return db.collection(\"Test\").where(\"pn\", \"==\", pn).get();\n\n            case 6:\n              itemsSnapshot = _context5.sent;\n              setFreqItem(itemsSnapshot.size);\n              usagePastYear = 0;\n              itemsSnapshot.forEach(function (doc) {\n                var itemData = doc.data();\n                itemData.workOrders.forEach(function (workOrder) {\n                  var workOrderDate = new Date(workOrder.date);\n\n                  if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n                    usagePastYear++;\n                  }\n                });\n              });\n              setUsagePastYear(usagePastYear);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function calculateItemFrequencyAndUsage(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // -------------------- Photo Upload (unchanged)\n\n\n  var uploadPhotos = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(docID) {\n      var storageRef, i, photoRef, metadata, url;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              i = 0;\n\n            case 2:\n              if (!(i < photos.length)) {\n                _context6.next = 15;\n                break;\n              }\n\n              if (!photos[i].file) {\n                _context6.next = 12;\n                break;\n              }\n\n              photoRef = storageRef.child(\"Parts/\".concat(docID, \"/\").concat(docID).concat(i === 0 ? \".jpg\" : \".\".concat(i + 1, \".jpg\")));\n              metadata = {\n                contentType: \"image/png\"\n              };\n              _context6.next = 8;\n              return photoRef.put(photos[i].file, metadata);\n\n            case 8:\n              _context6.next = 10;\n              return photoRef.getDownloadURL();\n\n            case 10:\n              url = _context6.sent;\n              photos[i].url = url;\n\n            case 12:\n              i++;\n              _context6.next = 2;\n              break;\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function uploadPhotos(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // -------------------- Submission Handler\n  // For NewItem, only require Name and Description.\n\n\n  function handleSubmit(_x5) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(event) {\n      var _descriptions$;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!items.name || !((_descriptions$ = descriptions[0]) !== null && _descriptions$ !== void 0 && _descriptions$.description))) {\n                _context9.next = 5;\n                break;\n              }\n\n              handleShow();\n              _context9.next = 17;\n              break;\n\n            case 5:\n              setLoading(true); // start loading before async work\n\n              _context9.prev = 6;\n              _context9.next = 9;\n              return toSend();\n\n            case 9:\n              _context9.next = 14;\n              break;\n\n            case 11:\n              _context9.prev = 11;\n              _context9.t0 = _context9[\"catch\"](6);\n              console.error(_context9.t0);\n\n            case 14:\n              _context9.prev = 14;\n              setLoading(false); // end loading after async work completes\n\n              return _context9.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[6, 11, 14, 17]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function toSend() {\n    return _toSend.apply(this, arguments);\n  } // -------------------- Info Modal Handlers (unchanged)\n\n\n  function _toSend() {\n    _toSend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var redirect,\n          id,\n          db,\n          currentUser,\n          userEmail,\n          machineData,\n          formattedItems,\n          docId,\n          newDocId,\n          machineRef,\n          machineDoc,\n          currentMachineRef,\n          currentMachineDoc,\n          cleanFormattedItems,\n          _machineRef,\n          _machineDoc,\n          _currentMachineRef,\n          _currentMachineDoc,\n          _machineRef2,\n          _machineDoc2,\n          _currentMachineRef2,\n          _currentMachineDoc2,\n          _args10 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              redirect = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : true;\n              id = router.query.id; // Ensure id is defined (it may be undefined for a new item)\n\n              db = firebase.firestore(); // Get the current authenticated user\n\n              currentUser = firebase.auth().currentUser;\n              userEmail = currentUser ? currentUser.email : \"unknown\"; // Always use the current state values for OEM, modality, and model.\n\n              machineData = _objectSpread(_objectSpread({}, TheMachine || {}), {}, {\n                oem: oem,\n                modality: modality,\n                model: model\n              });\n              formattedItems = _objectSpread(_objectSpread({}, items), {}, {\n                descriptions: descriptions,\n                workOrders: workOrders\n              }); // Remove any unused fields.\n\n              formattedItems.status = items.status || \"\";\n              formattedItems.DOM = DOM; // Date of Manufacture\n\n              formattedItems.localLocFrom = localLocFrom || \"\";\n              formattedItems.localLocCurrent = localLocCurrent || \"\";\n              formattedItems.date = items.date || \"\";\n              formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n\n              formattedItems.poNumber = items.poNumber || \"\";\n              formattedItems.trackingNumber = items.trackingNumber || \"\";\n              formattedItems.TheMachine = machineData || {};\n              formattedItems.addedToWebsite = addToWebsite;\n              formattedItems.visible = items.visible; // Add the current user's email under the \"user\" field\n\n              formattedItems.user = userEmail; // Clean pn and sn arrays to replace undefined values with an empty string.\n\n              formattedItems.pn = (items.pn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              });\n              formattedItems.sn = (items.sn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              }); // Set machine references for each branch.\n\n              if (selectedMachine && selectedMachine.id) {\n                formattedItems.MachineFrom = db.collection(\"Machine\").doc(selectedMachine.id);\n              }\n\n              if (selectedCurrentMachine && selectedCurrentMachine.id) {\n                formattedItems.MachineCurrent = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              } // ***** NEW: Set client references for each branch *****\n\n\n              if (selectedClientFrom && selectedClientFrom.id) {\n                formattedItems.ClientFrom = db.collection(\"Client\").doc(selectedClientFrom.id);\n              }\n\n              if (selectedClientCurrent && selectedClientCurrent.id) {\n                formattedItems.ClientCurrent = db.collection(\"Client\").doc(selectedClientCurrent.id);\n              } // ******************************************************\n\n\n              if (selectedParent && selectedParent.id) {\n                formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n              } // Only add dateCreated if this is a new document\n\n\n              if (!id) {\n                formattedItems.dateCreated = new Date().toISOString().split(\"T\")[0]; // \"YYYY-MM-DD\"\n              } // --- LOCAL SN LOGIC ---\n\n\n              docId = id || null;\n              _context10.prev = 28;\n\n              if (!docId) {\n                _context10.next = 76;\n                break;\n              }\n\n              // Check if a localSN is provided and if it differs from the current docId.\n              newDocId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : docId;\n\n              if (!(docId !== newDocId)) {\n                _context10.next = 55;\n                break;\n              }\n\n              _context10.next = 34;\n              return db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n            case 34:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context10.next = 42;\n                break;\n              }\n\n              machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context10.next = 38;\n              return machineRef.get();\n\n            case 38:\n              machineDoc = _context10.sent;\n\n              if (!machineDoc.exists) {\n                _context10.next = 42;\n                break;\n              }\n\n              _context10.next = 42;\n              return machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 42:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context10.next = 50;\n                break;\n              }\n\n              currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context10.next = 46;\n              return currentMachineRef.get();\n\n            case 46:\n              currentMachineDoc = _context10.sent;\n\n              if (!currentMachineDoc.exists) {\n                _context10.next = 50;\n                break;\n              }\n\n              _context10.next = 50;\n              return currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 50:\n              _context10.next = 52;\n              return db.collection(\"Test\").doc(docId)[\"delete\"]();\n\n            case 52:\n              // Set docId to the new document ID.\n              docId = newDocId;\n              _context10.next = 74;\n              break;\n\n            case 55:\n              // Deep-clean the formattedItems to remove any undefined nested values.\n              cleanFormattedItems = shallowClean(formattedItems);\n              _context10.next = 58;\n              return db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n            case 58:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context10.next = 66;\n                break;\n              }\n\n              _machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context10.next = 62;\n              return _machineRef.get();\n\n            case 62:\n              _machineDoc = _context10.sent;\n\n              if (!_machineDoc.exists) {\n                _context10.next = 66;\n                break;\n              }\n\n              _context10.next = 66;\n              return _machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 66:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context10.next = 74;\n                break;\n              }\n\n              _currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context10.next = 70;\n              return _currentMachineRef.get();\n\n            case 70:\n              _currentMachineDoc = _context10.sent;\n\n              if (!_currentMachineDoc.exists) {\n                _context10.next = 74;\n                break;\n              }\n\n              _context10.next = 74;\n              return _currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 74:\n              _context10.next = 95;\n              break;\n\n            case 76:\n              // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n              docId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : generateCustomID();\n              _context10.next = 79;\n              return db.collection(\"Test\").doc(docId).set(formattedItems);\n\n            case 79:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context10.next = 87;\n                break;\n              }\n\n              _machineRef2 = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context10.next = 83;\n              return _machineRef2.get();\n\n            case 83:\n              _machineDoc2 = _context10.sent;\n\n              if (!_machineDoc2.exists) {\n                _context10.next = 87;\n                break;\n              }\n\n              _context10.next = 87;\n              return _machineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 87:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context10.next = 95;\n                break;\n              }\n\n              _currentMachineRef2 = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context10.next = 91;\n              return _currentMachineRef2.get();\n\n            case 91:\n              _currentMachineDoc2 = _context10.sent;\n\n              if (!_currentMachineDoc2.exists) {\n                _context10.next = 95;\n                break;\n              }\n\n              _context10.next = 95;\n              return _currentMachineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 95:\n              _context10.next = 97;\n              return uploadPhotos(docId);\n\n            case 97:\n              console.log(\"Item saved and associatedParts updated!\"); // Redirect to the new URL using the new document id.\n\n              if (redirect) {\n                router.push(\"/NewSearch/item/\".concat(docId));\n              } else {\n                setRedirect(true);\n              } // Optionally, show a save confirmation modal.\n\n\n              handleShowSaveModal();\n              _context10.next = 105;\n              break;\n\n            case 102:\n              _context10.prev = 102;\n              _context10.t0 = _context10[\"catch\"](28);\n              console.error(\"Error saving data:\", _context10.t0);\n\n            case 105:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[28, 102]]);\n    }));\n    return _toSend.apply(this, arguments);\n  }\n\n  var _useState51 = useState(false),\n      showInfoModal = _useState51[0],\n      setShowInfoModal = _useState51[1];\n\n  var _useState52 = useState(\"\"),\n      itemName = _useState52[0],\n      setItemName = _useState52[1];\n\n  var handleShowInfoModal = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var db, doc, data;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db = firebase.firestore();\n              _context7.prev = 1;\n              _context7.next = 4;\n              return db.collection(\"Test\").doc(id).get();\n\n            case 4:\n              doc = _context7.sent;\n\n              if (doc.exists) {\n                data = doc.data();\n                setItemName(data.name || \"N/A\");\n                setShowInfoModal(true);\n              } else {\n                console.error(\"Item not found\");\n              }\n\n              _context7.next = 11;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](1);\n              console.error(\"Error fetching item info:\", _context7.t0);\n\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 8]]);\n    }));\n\n    return function handleShowInfoModal() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseInfoModal = function handleCloseInfoModal() {\n    return setShowInfoModal(false);\n  };\n\n  var handleCloseCameraModal = function handleCloseCameraModal() {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  var handleChange = function handleChange(field) {\n    return function (event) {\n      var value = event.target ? event.target.value : event.value;\n      setItems(function (prevItems) {\n        return _objectSpread(_objectSpread({}, prevItems), {}, _defineProperty({}, field, value));\n      });\n    };\n  };\n\n  var mostRecentWorkOrder = workOrders && workOrders.length > 0 ? workOrders.reduce(function (latest, current) {\n    var latestDate = new Date(latest.date);\n    var currentDate = new Date(current.date);\n    return currentDate > latestDate ? current : latest;\n  }, workOrders[0]) : {};\n\n  var handleShowCameraModal = function handleShowCameraModal() {\n    setShowCameraModal(true);\n  };\n\n  var generateCustomID = function generateCustomID() {\n    var randomNum = Math.floor(10000 + Math.random() * 90000);\n    return \"AIS\".concat(randomNum);\n  };\n\n  var handlePrint = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var printId, payload, response, result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (items.name) {\n                _context8.next = 3;\n                break;\n              }\n\n              alert(\"Missing name\");\n              return _context8.abrupt(\"return\");\n\n            case 3:\n              // In addItem mode, there is no existing id so generate one\n              printId = generateCustomID();\n              payload = {\n                name: items.name,\n                pn: items.pn,\n                sn: items.sn,\n                wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n                status: items.status,\n                local_sn: printId,\n                // Use the generated custom ID\n                descriptions: descriptions,\n                date: items.date || new Date().toISOString().split(\"T\")[0],\n                DOM: DOM,\n                oem: oem,\n                modality: modality,\n                model: model\n              };\n              console.log(\"Payload for printing:\", payload);\n              _context8.prev = 6;\n              _context8.next = 9;\n              return fetch(\"https://cc7e-174-76-22-138.ngrok-free.app/print-label\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n              });\n\n            case 9:\n              response = _context8.sent;\n              _context8.next = 12;\n              return response.json();\n\n            case 12:\n              result = _context8.sent;\n              console.log(\"Print result:\", result);\n              _context8.next = 19;\n              break;\n\n            case 16:\n              _context8.prev = 16;\n              _context8.t0 = _context8[\"catch\"](6);\n              console.error(\"Error printing label:\", _context8.t0);\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[6, 16]]);\n    }));\n\n    return function handlePrint() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleAddNewPn = function handleAddNewPn() {\n    if (newPn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          pn: [].concat(_toConsumableArray(prev.pn), [newPn.trim()])\n        });\n      });\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  var handleAddNewSn = function handleAddNewSn() {\n    if (newSn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          sn: [].concat(_toConsumableArray(prev.sn), [newSn.trim()])\n        });\n      });\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  function getPriorityMachineField(field, currentValue, theMachine, currentMachine, fromMachine) {\n    // If the field is already filled in by the user, return it unchanged.\n    if (currentValue && currentValue.trim() !== \"\" && currentValue.trim() !== \"N/A\") {\n      return currentValue;\n    } // Otherwise, prioritize the best available value.\n\n\n    if (theMachine && theMachine[field] && theMachine[field].trim() !== \"\" && theMachine[field] !== \"N/A\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field].trim() !== \"\" && currentMachine[field] !== \"N/A\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field].trim() !== \"\" && fromMachine[field] !== \"N/A\") {\n      return fromMachine[field];\n    }\n\n    return currentValue; // Default to keeping the current value\n  }\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getValidMachineField(\"oem\", theMachine, currentMachine, fromMachine),\n      modality: getValidMachineField(\"modality\", theMachine, currentMachine, fromMachine),\n      model: getValidMachineField(\"model\", theMachine, currentMachine, fromMachine)\n    };\n  }\n\n  function getValidMachineField(field, theMachine, currentMachine, fromMachine) {\n    if (theMachine && theMachine[field] && theMachine[field].trim() !== \"\" && theMachine[field] !== \"N/A\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field].trim() !== \"\" && currentMachine[field] !== \"N/A\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field].trim() !== \"\" && fromMachine[field] !== \"N/A\") {\n      return fromMachine[field];\n    }\n\n    return \"\"; // Keep it empty if no valid data exists\n  }\n\n  var _useState53 = useState(false),\n      showLocalLocFrom = _useState53[0],\n      setShowLocalLocFrom = _useState53[1];\n\n  var _useState54 = useState(false),\n      showLocalLocCurrent = _useState54[0],\n      setShowLocalLocCurrent = _useState54[1];\n\n  function handleClone() {\n    return _handleClone.apply(this, arguments);\n  }\n\n  function _handleClone() {\n    _handleClone = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var _descriptions$2;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!items.name || !((_descriptions$2 = descriptions[0]) !== null && _descriptions$2 !== void 0 && _descriptions$2.description))) {\n                _context11.next = 4;\n                break;\n              }\n\n              handleShow(); // your existing error modal\n\n              return _context11.abrupt(\"return\");\n\n            case 4:\n              setLoading(true);\n              _context11.prev = 5;\n              _context11.next = 8;\n              return toSend(false);\n\n            case 8:\n              _context11.next = 13;\n              break;\n\n            case 10:\n              _context11.prev = 10;\n              _context11.t0 = _context11[\"catch\"](5);\n              console.error(_context11.t0);\n\n            case 13:\n              _context11.prev = 13;\n              setLoading(false);\n              return _context11.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[5, 10, 13, 16]]);\n    }));\n    return _handleClone.apply(this, arguments);\n  }\n\n  var condition = function condition(name) {\n    return name && name.toLowerCase() === \"interior socal\";\n  };\n\n  var handleSetSelectedMachine = function handleSetSelectedMachine(machine) {\n    var condition = function condition(name) {\n      return name && name.toLowerCase() === \"interior socal\";\n    };\n\n    if (machinePick) {\n      setSelectedMachine({\n        id: machine.id,\n        name: machine.name\n      }); // For \"from\", show the local loc input if condition met.\n\n      setShowLocalLocFrom(condition(machine.name));\n    } else {\n      setSelectedCurrentMachine({\n        id: machine.id,\n        name: machine.name\n      }); // For \"current\", you might also want a local loc input:\n\n      setShowLocalLocCurrent(condition(machine.name));\n    }\n\n    fetchMachine(machine.id);\n    setShowMachineModal(false);\n  };\n\n  var _useState55 = useState(0),\n      currentPnIndex = _useState55[0],\n      setCurrentPnIndex = _useState55[1];\n\n  var _useState56 = useState(false),\n      showDropdown = _useState56[0],\n      setShowDropdown = _useState56[1];\n\n  var _useState57 = useState(0),\n      currentSnIndex = _useState57[0],\n      setCurrentSnIndex = _useState57[1];\n\n  var _useState58 = useState(false),\n      showSnDropdown = _useState58[0],\n      setShowSnDropdown = _useState58[1];\n\n  var handleAddNewClient = function handleAddNewClient() {\n    // Generate a random client number as part of the URL.\n    var randomNum = Math.floor(10000 + Math.random() * 90000); // When pushing, include a query parameter (from=item) and the current item id if available.\n\n    router.push(\"/NewSearch/client/AIS\".concat(randomNum, \"/addClient?from=addItem\"));\n  };\n\n  var _useState59 = useState(false),\n      showMachineSelect = _useState59[0],\n      setShowMachineSelect = _useState59[1];\n\n  var _useState60 = useState(null),\n      selectedClientFrom = _useState60[0],\n      setSelectedClientFrom = _useState60[1];\n\n  var _useState61 = useState(null),\n      selectedClientCurrent = _useState61[0],\n      setSelectedClientCurrent = _useState61[1];\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 5\n    }\n  }, __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: function handleClose() {\n      return setMachineSelectionModal(false);\n    },\n    setMachine: handleSetSelectedMachine,\n    machineOptions: machineOptions // if your modal needs the list of machines\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 11\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 9\n    }\n  }, \"Missing required field: Name and Description\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showErr,\n    onHide: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 11\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 9\n    }\n  }, Err), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showSaveModal,\n    onHide: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 11\n    }\n  }, \"Save Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 9\n    }\n  }, \"Data has been saved successfully.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 11\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 11\n    }\n  }, \"Add Description\"), descriptions.map(function (desc, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      variant: \"outline-secondary\",\n      className: \"w-100\",\n      onClick: function onClick() {\n        return selectDescription(index);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 19\n      }\n    }, desc.description || \"Description\"), __jsx(\"span\", {\n      style: {\n        borderLeft: \"1px solid #ccc\",\n        paddingLeft: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 19\n      }\n    }, desc.date || \"Date\"))));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(Modal, {\n    show: showWoModal,\n    onHide: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 11\n    }\n  }, \"Work Orders\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addWorkOrder,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 11\n    }\n  }, \"Add Work Order\"), workOrders.map(function (wo, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Work Order\",\n      value: wo.workOrder,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"workOrder\", e.target.value);\n      },\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 17\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Control, {\n      type: \"date\",\n      placeholder: \"Date\",\n      value: wo.date,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"date\", e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 17\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"danger\",\n      onClick: function onClick() {\n        return removeWorkOrder(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 17\n      }\n    }, \"Remove\")));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(ClientInfoModal, {\n    show: showMachineModal,\n    handleClose: handleCloseMachineModal,\n    selectedClient: selectedClient,\n    machineOptions: machineOptions,\n    setSelectedMachine: handleSetSelectedMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 11\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: search,\n    onChange: function onChange(e) {\n      return setSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 11\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return client.name.toLowerCase().includes(search.toLowerCase());\n    }),\n    onSelectClient: handleClientInfo,\n    onInfoClick: handleClientInfo,\n    clearSelection: function clearSelection() {\n      return handleClientInfo(null);\n    },\n    onAddClient: handleAddNewClient // new prop\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 11\n    }\n  }))), __jsx(ParentModal, {\n    show: showParentModal,\n    handleClose: handleCloseParentModal,\n    setSelectedParent: setSelectedParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 7\n    }\n  }), __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: function handleClose() {\n      return setMachineSelectionModal(false);\n    },\n    setMachine: setTheMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 11\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 15\n    }\n  }) : __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 17\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 9\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setCameraFacing(function (prev) {\n        return prev === \"environment\" ? \"user\" : \"environment\";\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 15\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return setCapturedPhoto(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 15\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 15\n    }\n  }, \"OK\")))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 11\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 11\n    }\n  }, \"Add Description\"), descriptions.map(function (desc, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      variant: \"outline-secondary\",\n      className: \"w-100\",\n      onClick: function onClick() {\n        return selectDescription(index);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 19\n      }\n    }, desc.description || \"Description\"), __jsx(\"span\", {\n      style: {\n        borderLeft: \"1px solid #ccc\",\n        paddingLeft: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 19\n      }\n    }, desc.date || \"Date\"))));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(InfoModal, {\n    show: showInfoModal,\n    handleClose: handleCloseInfoModal,\n    itemName: items.name,\n    dimensions: \"\".concat(items.length, \",\").concat(items.width, \",\").concat(items.height),\n    price: items.price,\n    freqI: freqItem,\n    freqM: machineFrequency,\n    usage: usagePastYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 7\n    }\n  }), loading && __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n      backdropFilter: \"blur(5px)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 9999 // Make sure it's above everything else\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 15\n    }\n  }, \"Add New Item\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 23\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: items.name,\n    onChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"pn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 23\n    }\n  }, \"Product Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.pn[currentPnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handlePnChange(currentPnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowDropdown(!showDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 27\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewPn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1330,\n      columnNumber: 29\n    }\n  }, \"+\"))), showDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 27\n    }\n  }, items.pn.map(function (pnOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentPnIndex(idx);\n        setShowDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 31\n      }\n    }, pnOption);\n  }))), addingNewPn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new PN\",\n    value: newPn,\n    onChange: function onChange(e) {\n      return setNewPn(e.target.value);\n    },\n    onBlur: handleAddNewPn,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === \"Enter\") {\n        handleAddNewPn();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 25\n    }\n  })))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"sn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 23\n    }\n  }, \"Serial Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1392,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.sn[currentSnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handleSnChange(currentSnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowSnDropdown(!showSnDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 27\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewSn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 29\n    }\n  }, \"+\"))), showSnDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420,\n      columnNumber: 27\n    }\n  }, items.sn.map(function (snOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentSnIndex(idx);\n        setShowSnDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 31\n      }\n    }, snOption);\n  }))), addingNewSn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new SN\",\n    value: newSn,\n    onChange: function onChange(e) {\n      return setNewSn(e.target.value);\n    },\n    onBlur: handleAddNewSn,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === \"Enter\") {\n        handleAddNewSn();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 25\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 23\n    }\n  }, \"Status\"), __jsx(Form.Select, {\n    value: items.status || \"\",\n    onChange: handleChange(\"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468,\n      columnNumber: 23\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 25\n    }\n  }, \"Select status\"), __jsx(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473,\n      columnNumber: 25\n    }\n  }, \"Good\"), __jsx(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 25\n    }\n  }, \"Bad\"), __jsx(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 25\n    }\n  }, \"Unknown\"))))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"oem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"OEM\",\n    value: oem,\n    onChange: function onChange(e) {\n      return setOem(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1494,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"modality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Modality\",\n    value: modality,\n    onChange: function onChange(e) {\n      return setModality(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1506,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1507,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Model\",\n    value: model,\n    onChange: function onChange(e) {\n      return setModel(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1508,\n      columnNumber: 23\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1518,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowWoModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 21\n    }\n  }, \"Manage Work Orders\"), workOrders.length > 0 && __jsx(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1529,\n      columnNumber: 25\n    }\n  }, \"Work Order\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Most Recent Work Order\",\n    value: (mostRecentWorkOrder === null || mostRecentWorkOrder === void 0 ? void 0 : mostRecentWorkOrder.workOrder) || \"\",\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"workOrder\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1530,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1543,\n      columnNumber: 25\n    }\n  }, \"Date\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Work Order Date\",\n    value: (mostRecentWorkOrder === null || mostRecentWorkOrder === void 0 ? void 0 : mostRecentWorkOrder.date) || \"\",\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"date\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1544,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: listDescriptions,\n    className: \"mb-2 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 21\n    }\n  }, \"List Descriptions\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter description\",\n    value: ((_descriptions$selecte = descriptions[selectedDesc]) === null || _descriptions$selecte === void 0 ? void 0 : _descriptions$selecte.description) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"description\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 21\n    }\n  }), __jsx(Form.Control, {\n    type: \"date\",\n    value: ((_descriptions$selecte2 = descriptions[selectedDesc]) === null || _descriptions$selecte2 === void 0 ? void 0 : _descriptions$selecte2.date) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"date\", e.target.value);\n    },\n    style: {\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1600,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1601,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1602,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(true);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 23\n    }\n  }, \"Select From\"), selectedClientFrom && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1614,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 27\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1623,\n      columnNumber: 29\n    }\n  }, \"Selected Client (From):\"), \" \", selectedClientFrom.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1626,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627,\n      columnNumber: 29\n    }\n  }, \"Select Machine for \", selectedClientFrom.name), selectedMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1635,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1636,\n      columnNumber: 35\n    }\n  }, \"Selected Machine (From):\"), \" \", selectedMachine.name), showLocalLocFrom && __jsx(Form.Group, {\n    controlId: \"localLocFrom\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1640,\n      columnNumber: 35\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1644,\n      columnNumber: 37\n    }\n  }, \"Local Loc (From)\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: localLocFrom,\n    onChange: function onChange(e) {\n      return setLocalLocFrom(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 37\n    }\n  })))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(false);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1661,\n      columnNumber: 23\n    }\n  }, \"Select Current\"), selectedClientCurrent && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1672,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 27\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 29\n    }\n  }, \"Selected Client (Current):\"), \" \", selectedClientCurrent.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 29\n    }\n  }, \"Select Machine for \", selectedClientCurrent.name), selectedCurrentMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1694,\n      columnNumber: 35\n    }\n  }, \"Selected Machine (Current):\"), \" \", selectedCurrentMachine.name), showLocalLocCurrent && __jsx(Form.Group, {\n    controlId: \"localLocCurrent\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1698,\n      columnNumber: 35\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1702,\n      columnNumber: 37\n    }\n  }, \"Local Loc (Current)\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: localLocCurrent,\n    onChange: function onChange(e) {\n      return setLocalLocCurrent(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1703,\n      columnNumber: 37\n    }\n  })))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowParentModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 23\n    }\n  }, \"Select Parent\"), selectedParent && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Selected Parent\",\n    value: selectedParent.name,\n    readOnly: true,\n    style: {\n      cursor: \"default\",\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1727,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1739,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1740,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1741,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1743,\n      columnNumber: 25\n    }\n  }, \"Take Photo\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleBrowsePhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 25\n    }\n  }, \"Browse\"))), __jsx(Col, {\n    xs: 6,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: addToWebsite ? \"primary\" : \"outline-primary\",\n    onClick: function onClick() {\n      return setAddToWebsite(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1758,\n      columnNumber: 23\n    }\n  }, addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"), __jsx(Form.Check, {\n    type: \"checkbox\",\n    id: \"hide-checkbox\",\n    label: \"Hide\" // box is checked when we want visible = false\n    ,\n    checked: !items.visible,\n    onChange: function onChange(e) {\n      // grab checked immediately\n      var isHidden = e.currentTarget.checked;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          visible: !isHidden\n        });\n      });\n    },\n    className: \"ms-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 23\n    }\n  }))), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: true,\n    ref: browseInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1782,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 17\n    }\n  }, photos.map(function (photo, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"d-flex flex-column align-items-center mb-2 me-2\",\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        position: \"relative\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1794,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: photo.url,\n      alt: \"Photo \".concat(index + 1),\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1803,\n        columnNumber: 23\n      }\n    }), photo.file && __jsx(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        padding: \"0 5px\"\n      },\n      onClick: function onClick() {\n        return removePhoto(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1813,\n        columnNumber: 25\n      }\n    }, \"X\"));\n  })), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1833,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1834,\n      columnNumber: 19\n    }\n  }, \"Save\"), __jsx(Button, {\n    variant: \"info\",\n    onClick: handleClone,\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1841,\n      columnNumber: 19\n    }\n  }, \"Clone\"), __jsx(LoadingButton, {\n    type: \"secondary\",\n    name: \"Back\",\n    route: \"NewSearch/mainSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1848,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    variant: \"info\",\n    onClick: handlePrint,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1853,\n      columnNumber: 19\n    }\n  }, \"Print Label\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1861,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"24px\"\n    },\n    onClick: function onClick() {\n      return setShowExtra(!showExtra);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1862,\n      columnNumber: 19\n    }\n  }, \"\\u25BC\")), __jsx(Collapse, {\n    \"in\": showExtra,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1874,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    id: \"extra-collapse\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1877,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 25\n    }\n  }, \"Dimensions (L x W x H)\"), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1879,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1880,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Length\",\n    type: \"text\",\n    value: items.length,\n    onChange: handleChange(\"length\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 29\n    }\n  })), \"x\", __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Width\",\n    type: \"text\",\n    value: items.width,\n    onChange: handleChange(\"width\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 29\n    }\n  })), \"x\", __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1898,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Height\",\n    type: \"text\",\n    value: items.height,\n    onChange: handleChange(\"height\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1899,\n      columnNumber: 29\n    }\n  })))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1908,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 25\n    }\n  }, \"Price\"), __jsx(Form.Control, {\n    placeholder: \"Price\",\n    type: \"text\",\n    value: items.price,\n    onChange: handleChange(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 25\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1918,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"DOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1919,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1920,\n      columnNumber: 25\n    }\n  }, \"DOM (Date of Manufacture)\"), __jsx(Form.Control, {\n    placeholder: \"Enter DOM\",\n    type: \"date\",\n    value: DOM,\n    onChange: function onChange(e) {\n      return setDOM(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1921,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"localSN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 25\n    }\n  }, \"Local SN\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Local SN\",\n    value: items.localSN || \"\",\n    onChange: handleChange(\"localSN\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 25\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1939,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"poNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1940,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1941,\n      columnNumber: 25\n    }\n  }, \"PO Number\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"PO Number\",\n    value: items.poNumber || \"\",\n    onChange: handleChange(\"poNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1942,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"arrivalDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1949,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1950,\n      columnNumber: 25\n    }\n  }, \"Arrival Date\"), __jsx(Form.Control, {\n    placeholder: \"Enter Arrival Date\",\n    type: \"date\",\n    value: items.arrival_date,\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          arrival_date: value\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1951,\n      columnNumber: 25\n    }\n  })))))))))));\n}\n\n_s2(NewItem, \"g2d4uNoXNFrPgTZRbTQKEGndUHs=\", false, function () {\n  return [useRouter, useAuth];\n});\n\n_c4 = NewItem;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BarcodeScannerComponent$dynamic\");\n$RefreshReg$(_c2, \"BarcodeScannerComponent\");\n$RefreshReg$(_c3, \"LoadingButton\");\n$RefreshReg$(_c4, \"NewItem\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/AddItem/NewItem.js"],"names":["React","useEffect","useState","useRef","Form","Button","Card","Container","Row","Col","Modal","FormControl","Collapse","InputGroup","ButtonGroup","Spinner","Link","dynamic","useAuth","firebase","LoggedIn","useRouter","fetchClients","ClientTable","ClientInfoModal","ParentModal","MachineSelectionModal","InfoModal","BarcodeScannerComponent","ssr","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","handleClick","NewItem","router","signOut","pn","sn","localSN","price","status","poNumber","length","width","height","arrival_date","visible","items","setItems","editingPn","setEditingPn","editingSn","setEditingSn","DOM","setDOM","oem","setOem","modality","setModality","model","setModel","localLocFrom","setLocalLocFrom","localLocCurrent","setLocalLocCurrent","pnOptions","setPnOptions","snOptions","setSnOptions","description","date","descriptions","setDescriptions","workOrder","workOrders","setWorkOrders","clients","setClients","photos","setPhotos","show","setShow","showErr","setShowErr","Err","setErr","showDescModal","setShowDescModal","showWoModal","setShowWoModal","showClientModal","setShowClientModal","showMachineModal","setShowMachineModal","showParentModal","setShowParentModal","showCameraModal","setShowCameraModal","showSaveModal","setShowSaveModal","machineSelectionModal","setMachineSelectionModal","selectedDesc","setSelectedDesc","selectedClient","setSelectedClient","selectedMachine","setSelectedMachine","selectedCurrentMachine","setSelectedCurrentMachine","selectedParent","setSelectedParent","TheMachine","setTheMachine","machineOptions","setMachineOptions","search","setSearch","capturedPhoto","setCapturedPhoto","cameraFacing","setCameraFacing","addToWebsite","setAddToWebsite","machinePick","setMachinePick","freqItem","setFreqItem","usagePastYear","setUsagePastYear","machineFrequency","setMachineFrequency","showExtra","setShowExtra","addingNewPn","setAddingNewPn","newPn","setNewPn","addingNewSn","setAddingNewSn","newSn","setNewSn","browseInputRef","loading","isReady","fetchClientsData","clientsData","console","log","error","fetchPnSn","db","firestore","collection","get","snapshot","pnSet","Set","snSet","forEach","doc","data","add","machineFieldsInitialized","setMachineFieldsInitialized","updatedFields","updateMachineFields","signal","setSignal","query","handlePnSelect","e","selected","target","value","prev","updatedPn","Array","isArray","handlePnChange","index","addPn","trim","handleSnSelect","updatedSn","handleSnChange","addSn","handleBrowsePhotos","current","click","handleFilesSelected","files","newPhotos","i","push","file","url","URL","createObjectURL","prevPhotos","handleCapture","err","result","capturePhoto","video","document","querySelector","canvas","createElement","videoWidth","videoHeight","context","getContext","drawImage","toBlob","blob","savePhoto","removePhoto","filter","_","handleClose","handleShow","handleCloseErr","handleShowErr","handleCloseSaveModal","handleShowSaveModal","handleCloseDescModal","handleShowDescModal","handleCloseWoModal","handleShowWoModal","handleCloseClientModal","handleShowClientModal","handleCloseMachineModal","handleShowMachineModal","handleCloseParentModal","handleShowParentModal","addDescription","removeDescription","handleDescriptionChange","field","newDescriptions","map","desc","addWorkOrder","removeWorkOrder","handleWorkOrderChange","newWorkOrders","wo","listDescriptions","selectDescription","handleClientInfo","clientId","setShowLocalLocFrom","setShowLocalLocCurrent","clientDoc","exists","clientData","setSelectedClientFrom","id","setSelectedClientCurrent","machinePromises","machines","machineRef","all","machineDocs","machineDoc","fetchMachine","machineId","machineData","OEM","Modality","Model","where","machinesSnapshot","size","calculateItemFrequencyAndUsage","currentDate","Date","oneYearAgo","setFullYear","getFullYear","itemsSnapshot","itemData","workOrderDate","uploadPhotos","docID","storageRef","storage","ref","photoRef","child","metadata","contentType","put","getDownloadURL","handleSubmit","event","preventDefault","toSend","redirect","currentUser","auth","userEmail","email","formattedItems","trackingNumber","addedToWebsite","user","undefined","MachineFrom","MachineCurrent","selectedClientFrom","ClientFrom","selectedClientCurrent","ClientCurrent","Parent","dateCreated","toISOString","split","docId","newDocId","set","update","associatedParts","FieldValue","arrayUnion","currentMachineRef","currentMachineDoc","cleanFormattedItems","shallowClean","generateCustomID","setRedirect","showInfoModal","setShowInfoModal","itemName","setItemName","handleShowInfoModal","handleCloseInfoModal","handleCloseCameraModal","handleChange","prevItems","mostRecentWorkOrder","reduce","latest","latestDate","handleShowCameraModal","randomNum","Math","floor","random","handlePrint","alert","printId","payload","local_sn","fetch","method","headers","body","JSON","stringify","response","json","handleAddNewPn","handleAddNewSn","getPriorityMachineField","currentValue","theMachine","currentMachine","fromMachine","getValidMachineField","showLocalLocFrom","showLocalLocCurrent","handleClone","condition","toLowerCase","handleSetSelectedMachine","machine","currentPnIndex","setCurrentPnIndex","showDropdown","setShowDropdown","currentSnIndex","setCurrentSnIndex","showSnDropdown","setShowSnDropdown","handleAddNewClient","showMachineSelect","setShowMachineSelect","cursor","borderLeft","paddingLeft","marginBottom","client","includes","borderRadius","position","left","transform","bottom","top","backgroundColor","backdropFilter","display","alignItems","justifyContent","zIndex","minHeight","maxWidth","right","border","maxHeight","overflowY","pnOption","idx","padding","key","snOption","marginTop","indexOf","isHidden","currentTarget","checked","photo","objectFit","marginRight","marginLeft","textAlign","margin","textDecoration","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  FormControl,\n  Collapse,\n  InputGroup,\n  ButtonGroup,\n  Spinner,\n} from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport firebase from \"../../../context/Firebase\";\nimport LoggedIn from \"../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ClientInfoModal from \"../ClientInfoModal\";\nimport ParentModal from \"./parentModal\";\nimport MachineSelectionModal from \"../item/[id]/MachineSelectionModal\";\nimport InfoModal from \"../InfoModal\";\n\n// Load BarcodeScannerComponent only on the client-side.\nconst BarcodeScannerComponent = dynamic(\n  () => import(\"react-qr-barcode-scanner\"),\n  { ssr: false }\n);\n\n// Simulate network delay.\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\n// Custom LoadingButton component.\nfunction LoadingButton({ type, name, route }) {\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n  const handleClick = () => setLoading(true);\n  return (\n    <Link href={`/${route}`}>\n      <a\n        className={`btn btn-${type}`}\n        disabled={isLoading}\n        onClick={!isLoading ? handleClick : null}\n      >\n        {isLoading ? \"Loading…\" : name}\n      </a>\n    </Link>\n  );\n}\n\nexport default function NewItem() {\n  const router = useRouter();\n  const { signOut } = useAuth();\n  // Initialize item state – for a new item, these start empty.\n  // We store PN and SN as arrays.\n  const [items, setItems] = useState({\n    name: \"\",\n    pn: [\"\"],\n    sn: [\"\"], // This will be overridden on submit.\n    localSN: \"\", // NEW FIELD: holds user input for a local serial number.\n    price: \"\",\n    status: \"\",\n    poNumber: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    arrival_date: \"\", // NEW FIELD: Arrival Date\n    visible: true,\n  });\n\n  const [editingPn, setEditingPn] = useState(true);\n  // const [newPn, setNewPn] = useState(\"\"); // for the input value when editing\n\n  const [editingSn, setEditingSn] = useState(true);\n  // const [newSn, setNewSn] = useState(\"\");\n\n  // DOM is the Date of Manufacture input (user provided).\n  const [DOM, setDOM] = useState(\"\");\n  // OEM, Modality, Model fields.\n  const [oem, setOem] = useState(\"\");\n  const [modality, setModality] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n\n  // Local location states.\n  const [localLocFrom, setLocalLocFrom] = useState(\"\");\n  const [localLocCurrent, setLocalLocCurrent] = useState(\"\");\n\n  // Other states.\n  const [pnOptions, setPnOptions] = useState([]);\n  const [snOptions, setSnOptions] = useState([]);\n  const [descriptions, setDescriptions] = useState([\n    { description: \"\", date: \"\" },\n  ]);\n  const [workOrders, setWorkOrders] = useState([{ workOrder: \"\", date: \"\" }]);\n  const [clients, setClients] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [show, setShow] = useState(false); // error modal for missing required fields\n  const [showErr, setShowErr] = useState(false);\n  const [Err, setErr] = useState(\n    \"Missing required field: Name and Description\"\n  );\n  const [showDescModal, setShowDescModal] = useState(false);\n  const [showWoModal, setShowWoModal] = useState(false);\n  const [showClientModal, setShowClientModal] = useState(false);\n  const [showMachineModal, setShowMachineModal] = useState(false);\n  const [showParentModal, setShowParentModal] = useState(false);\n  const [showCameraModal, setShowCameraModal] = useState(false);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [machineSelectionModal, setMachineSelectionModal] = useState(false);\n  const [selectedDesc, setSelectedDesc] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [selectedCurrentMachine, setSelectedCurrentMachine] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [TheMachine, setTheMachine] = useState(null);\n  const [machineOptions, setMachineOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\n  const [cameraFacing, setCameraFacing] = useState(\"environment\");\n  const [addToWebsite, setAddToWebsite] = useState(false);\n  const [machinePick, setMachinePick] = useState(false);\n  const [freqItem, setFreqItem] = useState(0);\n  const [usagePastYear, setUsagePastYear] = useState(0);\n  const [machineFrequency, setMachineFrequency] = useState(0);\n  // For extra (dimensions/price/DOM) section collapse.\n  const [showExtra, setShowExtra] = useState(false);\n\n  // For PN/SN \"add new\" functionality.\n  const [addingNewPn, setAddingNewPn] = useState(false);\n  const [newPn, setNewPn] = useState(\"\");\n  const [addingNewSn, setAddingNewSn] = useState(false);\n  const [newSn, setNewSn] = useState(\"\");\n\n  // For browsing photos.\n  const browseInputRef = useRef(null);\n\n  // Inside your NewItem component:\n  const [loading, setLoading] = useState(false);\n\n  if (!router.isReady) {\n    return null; // or a loading indicator\n  }\n\n  // -------------------- Since this is \"add\" mode, we do not fetch an existing document.\n  // However, we still fetch global PN and SN options and clients for selection.\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(\"Clients:\", clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n    fetchClientsData();\n  }, []);\n\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      setPnOptions([...pnSet]);\n      setSnOptions([...snSet]);\n    }\n    fetchPnSn();\n  }, []);\n\n  const [machineFieldsInitialized, setMachineFieldsInitialized] =\n    useState(false);\n\n  useEffect(() => {\n    if (\n      !machineFieldsInitialized &&\n      (TheMachine || selectedCurrentMachine || selectedMachine)\n    ) {\n      const updatedFields = updateMachineFields(\n        TheMachine,\n        selectedCurrentMachine,\n        selectedMachine\n      );\n\n      // Only set fields if they are empty or \"N/A\"\n      if (!oem || oem === \"N/A\") setOem(updatedFields.oem);\n      if (!modality || modality === \"N/A\") setModality(updatedFields.modality);\n      if (!model || model === \"N/A\") setModel(updatedFields.model);\n\n      setMachineFieldsInitialized(true);\n    }\n  }, [\n    TheMachine,\n    selectedCurrentMachine,\n    selectedMachine,\n    machineFieldsInitialized,\n  ]);\n\n  const [signal, setSignal] = useState(null);\n\n  useEffect(() => {\n    if (router.isReady) {\n      setSignal(router.query.signal || null);\n    }\n  }, [router.isReady, router.query.signal]);\n\n  // -------------------- Handlers for PN and SN dropdowns\n\n  // PN: when a user selects an existing PN value.\n  const handlePnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return { ...prev, pn: updatedPn };\n    });\n  };\n\n  const handlePnChange = (index, value) => {\n    setItems((prev) => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return { ...prev, pn: newPn };\n    });\n  };\n\n  const addPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  // SN: when a user selects an existing SN value.\n  const handleSnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return { ...prev, sn: updatedSn };\n    });\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems((prev) => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return { ...prev, sn: newSn };\n    });\n  };\n\n  const addSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  // -------------------- Photo Browse Handlers\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = (e) => {\n    const files = e.target.files;\n    if (files.length) {\n      const newPhotos = [];\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i]),\n        });\n      }\n      setPhotos((prevPhotos) => [...prevPhotos, ...newPhotos]);\n    }\n    e.target.value = \"\";\n  };\n\n  // -------------------- Photo Capture Handlers remain as in your index.js\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob) => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const savePhoto = () => {\n    setPhotos((prevPhotos) => [\n      ...prevPhotos,\n      { file: capturedPhoto, url: URL.createObjectURL(capturedPhoto) },\n    ]);\n    setCapturedPhoto(null);\n    setShowCameraModal(false);\n  };\n\n  const removePhoto = (index) => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  };\n\n  // -------------------- Modal Handlers\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseErr = () => setShowErr(false);\n  const handleShowErr = () => setShowErr(true);\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n  const handleShowSaveModal = () => setShowSaveModal(true);\n  const handleCloseDescModal = () => setShowDescModal(false);\n  const handleShowDescModal = () => setShowDescModal(true);\n  const handleCloseWoModal = () => setShowWoModal(false);\n  const handleShowWoModal = () => setShowWoModal(true);\n  const handleCloseClientModal = () => setShowClientModal(false);\n  const handleShowClientModal = () => setShowClientModal(true);\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n  const handleCloseParentModal = () => setShowParentModal(false);\n  const handleShowParentModal = () => setShowParentModal(true);\n\n  // -------------------- Work Orders / Descriptions Handlers (unchanged)\n  const addDescription = () => {\n    setDescriptions([...descriptions, { description: \"\", date: \"\" }]);\n  };\n\n  const removeDescription = (index) => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) =>\n      i === index ? { ...desc, [field]: value } : desc\n    );\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, { workOrder: \"\", date: \"\" }]);\n  };\n\n  const removeWorkOrder = (index) => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) =>\n      i === index ? { ...wo, [field]: value } : wo\n    );\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = (index) => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  // -------------------- Machine Selection (unchanged)\n  const handleClientInfo = async (clientId) => {\n    // Clear any previously selected machine/local loc for the branch\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n    if (clientDoc.exists) {\n      const clientData = clientDoc.data();\n      if (machinePick) {\n        setSelectedClientFrom({ id: clientDoc.id, ...clientData });\n      } else {\n        setSelectedClientCurrent({ id: clientDoc.id, ...clientData });\n      }\n      // Fetch machines for this client:\n      const machinePromises = clientData.machines.map((machineRef) =>\n        machineRef.get()\n      );\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map((machineDoc) => ({\n        id: machineDoc.id,\n        ...machineDoc.data(),\n      }));\n      setMachineOptions(machines);\n      handleCloseClientModal();\n    }\n  };\n\n  const fetchMachine = async (machineId) => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData);\n\n      // Ensure OEM, Modality, and Model update properly only if necessary\n      if (!oem || oem === \"N/A\")\n        setOem(machineData.oem || machineData.OEM || \"\");\n      if (!modality || modality === \"N/A\")\n        setModality(machineData.modality || machineData.Modality || \"\");\n      if (!model || model === \"N/A\")\n        setModel(machineData.model || machineData.Model || \"\");\n\n      // Set machine frequency count\n      const machinesSnapshot = await db\n        .collection(\"Machine\")\n        .where(\"Model\", \"==\", machineData.Model || machineData.model)\n        .get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  };\n\n  // -------------------- Frequency/Usage (unchanged)\n  const calculateItemFrequencyAndUsage = async (pn) => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n    const itemsSnapshot = await db\n      .collection(\"Test\")\n      .where(\"pn\", \"==\", pn)\n      .get();\n    setFreqItem(itemsSnapshot.size);\n    let usagePastYear = 0;\n    itemsSnapshot.forEach((doc) => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach((workOrder) => {\n        const workOrderDate = new Date(workOrder.date);\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  };\n\n  // -------------------- Photo Upload (unchanged)\n  const uploadPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(\n          `Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`\n        );\n        const metadata = { contentType: \"image/png\" };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  };\n\n  // -------------------- Submission Handler\n  // For NewItem, only require Name and Description.\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!items.name || !descriptions[0]?.description) {\n      handleShow();\n    } else {\n      setLoading(true); // start loading before async work\n      try {\n        await toSend();\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false); // end loading after async work completes\n      }\n    }\n  }\n\n  async function toSend(redirect = true) {\n    const { id } = router.query; // Ensure id is defined (it may be undefined for a new item)\n    const db = firebase.firestore();\n\n    // Get the current authenticated user\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\";\n\n    // Always use the current state values for OEM, modality, and model.\n    const machineData = {\n      ...(TheMachine || {}),\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    const formattedItems = { ...items, descriptions, workOrders };\n    // Remove any unused fields.\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite;\n    formattedItems.visible = items.visible;\n\n    // Add the current user's email under the \"user\" field\n    formattedItems.user = userEmail;\n    // Clean pn and sn arrays to replace undefined values with an empty string.\n    formattedItems.pn = (items.pn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n    formattedItems.sn = (items.sn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n\n    // Set machine references for each branch.\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db\n        .collection(\"Machine\")\n        .doc(selectedMachine.id);\n    }\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db\n        .collection(\"Machine\")\n        .doc(selectedCurrentMachine.id);\n    }\n\n    // ***** NEW: Set client references for each branch *****\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db\n        .collection(\"Client\")\n        .doc(selectedClientFrom.id);\n    }\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db\n        .collection(\"Client\")\n        .doc(selectedClientCurrent.id);\n    }\n    // ******************************************************\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    }\n\n    // Only add dateCreated if this is a new document\n    if (!id) {\n      formattedItems.dateCreated = new Date().toISOString().split(\"T\")[0]; // \"YYYY-MM-DD\"\n    }\n\n    // --- LOCAL SN LOGIC ---\n    let docId = id || null;\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : docId;\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n          // Delete the old document.\n          await db.collection(\"Test\").doc(docId).delete();\n          // Set docId to the new document ID.\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db\n            .collection(\"Machine\")\n            .doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n      }\n      // Upload any new photos to Firebase Storage.\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\");\n\n      // Redirect to the new URL using the new document id.\n      if (redirect) {\n        router.push(`/NewSearch/item/${docId}`);\n      } else {\n        setRedirect(true);\n      }\n\n      // Optionally, show a save confirmation modal.\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  }\n\n  // -------------------- Info Modal Handlers (unchanged)\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleChange = (field) => (event) => {\n    const value = event.target ? event.target.value : event.value;\n    setItems((prevItems) => ({ ...prevItems, [field]: value }));\n  };\n\n  const mostRecentWorkOrder =\n    workOrders && workOrders.length > 0\n      ? workOrders.reduce((latest, current) => {\n          const latestDate = new Date(latest.date);\n          const currentDate = new Date(current.date);\n          return currentDate > latestDate ? current : latest;\n        }, workOrders[0])\n      : {};\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    }\n\n    // In addItem mode, there is no existing id so generate one\n    const printId = generateCustomID();\n\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      status: items.status,\n      local_sn: printId, // Use the generated custom ID\n      descriptions: descriptions,\n      date: items.date || new Date().toISOString().split(\"T\")[0],\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    console.log(\"Payload for printing:\", payload);\n    try {\n      const response = await fetch(\n        \"https://cc7e-174-76-22-138.ngrok-free.app/print-label\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      console.log(\"Print result:\", result);\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  function getPriorityMachineField(\n    field,\n    currentValue,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    // If the field is already filled in by the user, return it unchanged.\n    if (\n      currentValue &&\n      currentValue.trim() !== \"\" &&\n      currentValue.trim() !== \"N/A\"\n    ) {\n      return currentValue;\n    }\n\n    // Otherwise, prioritize the best available value.\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field].trim() !== \"\" &&\n      theMachine[field] !== \"N/A\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field].trim() !== \"\" &&\n      currentMachine[field] !== \"N/A\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field].trim() !== \"\" &&\n      fromMachine[field] !== \"N/A\"\n    ) {\n      return fromMachine[field];\n    }\n\n    return currentValue; // Default to keeping the current value\n  }\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getValidMachineField(\"oem\", theMachine, currentMachine, fromMachine),\n      modality: getValidMachineField(\n        \"modality\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      model: getValidMachineField(\n        \"model\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n    };\n  }\n\n  function getValidMachineField(\n    field,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field].trim() !== \"\" &&\n      theMachine[field] !== \"N/A\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field].trim() !== \"\" &&\n      currentMachine[field] !== \"N/A\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field].trim() !== \"\" &&\n      fromMachine[field] !== \"N/A\"\n    ) {\n      return fromMachine[field];\n    }\n    return \"\"; // Keep it empty if no valid data exists\n  }\n\n  const [showLocalLocFrom, setShowLocalLocFrom] = useState(false);\n  const [showLocalLocCurrent, setShowLocalLocCurrent] = useState(false);\n\n  async function handleClone() {\n    event.preventDefault();\n    if (!items.name || !descriptions[0]?.description) {\n      handleShow(); // your existing error modal\n      return;\n    }\n    setLoading(true);\n    try {\n      // save but don’t redirect\n      await toSend(false);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const condition = (name) => {\n    return name && name.toLowerCase() === \"interior socal\";\n  };\n\n  const handleSetSelectedMachine = (machine) => {\n    const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    if (machinePick) {\n      setSelectedMachine({ id: machine.id, name: machine.name });\n      // For \"from\", show the local loc input if condition met.\n      setShowLocalLocFrom(condition(machine.name));\n    } else {\n      setSelectedCurrentMachine({ id: machine.id, name: machine.name });\n      // For \"current\", you might also want a local loc input:\n      setShowLocalLocCurrent(condition(machine.name));\n    }\n    fetchMachine(machine.id);\n    setShowMachineModal(false);\n  };\n\n  const [currentPnIndex, setCurrentPnIndex] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentSnIndex, setCurrentSnIndex] = useState(0);\n  const [showSnDropdown, setShowSnDropdown] = useState(false);\n\n  const handleAddNewClient = () => {\n    // Generate a random client number as part of the URL.\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    // When pushing, include a query parameter (from=item) and the current item id if available.\n    router.push(`/NewSearch/client/AIS${randomNum}/addClient?from=addItem`);\n  };\n\n  const [showMachineSelect, setShowMachineSelect] = useState(false);\n\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\n\n  return (\n    <LoggedIn>\n      {/* Error Modal */}\n      <MachineSelectionModal\n        show={machineSelectionModal}\n        handleClose={() => setMachineSelectionModal(false)}\n        setMachine={handleSetSelectedMachine}\n        machineOptions={machineOptions} // if your modal needs the list of machines\n      />\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Missing required field: Name and Description</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* Other Modals: showErr, showSaveModal, Descriptions, Work Orders, etc. */}\n      <Modal show={showErr} onHide={handleCloseErr}>\n        <Modal.Header closeButton>\n          <Modal.Title>Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{Err}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseErr}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showSaveModal} onHide={handleCloseSaveModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Save Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Data has been saved successfully.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseSaveModal}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showDescModal} onHide={handleCloseDescModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Descriptions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n            Add Description\n          </Button>\n          {descriptions.map((desc, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Button\n                variant=\"outline-secondary\"\n                className=\"w-100\"\n                onClick={() => selectDescription(index)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <span>{desc.description || \"Description\"}</span>\n                  <span\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      paddingLeft: \"10px\",\n                    }}\n                  >\n                    {desc.date || \"Date\"}\n                  </span>\n                </div>\n              </Button>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseDescModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n      <Modal show={showWoModal} onHide={handleCloseWoModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Work Orders</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button\n            variant=\"primary\"\n            className=\"mb-3\"\n            onClick={addWorkOrder}\n            style={{ marginBottom: \"1rem\" }}\n          >\n            Add Work Order\n          </Button>\n          {workOrders.map((wo, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Col>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Work Order\"\n                  value={wo.workOrder}\n                  onChange={(e) =>\n                    handleWorkOrderChange(index, \"workOrder\", e.target.value)\n                  }\n                  style={{ marginBottom: \"0.5rem\" }}\n                />\n              </Col>\n              <Col>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  value={wo.date}\n                  onChange={(e) =>\n                    handleWorkOrderChange(index, \"date\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col>\n                <Button variant=\"danger\" onClick={() => removeWorkOrder(index)}>\n                  Remove\n                </Button>\n              </Col>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseWoModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n      {/* Machine Selection Modal */}\n      <ClientInfoModal\n        show={showMachineModal}\n        handleClose={handleCloseMachineModal}\n        selectedClient={selectedClient}\n        machineOptions={machineOptions}\n        setSelectedMachine={handleSetSelectedMachine}\n      />\n      <Modal show={showClientModal} onHide={handleCloseClientModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Client</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <ClientTable\n            clients={clients.filter((client) =>\n              client.name.toLowerCase().includes(search.toLowerCase())\n            )}\n            onSelectClient={handleClientInfo}\n            onInfoClick={handleClientInfo}\n            clearSelection={() => handleClientInfo(null)}\n            onAddClient={handleAddNewClient} // new prop\n          />\n        </Modal.Body>\n      </Modal>\n\n      <ParentModal\n        show={showParentModal}\n        handleClose={handleCloseParentModal}\n        setSelectedParent={setSelectedParent}\n      />\n      <MachineSelectionModal\n        show={machineSelectionModal}\n        handleClose={() => setMachineSelectionModal(false)}\n        setMachine={setTheMachine}\n      />\n      {/* Camera Modal */}\n      <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Take a Photo</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"camera\">\n            {!capturedPhoto ? (\n              <BarcodeScannerComponent\n                width=\"100%\"\n                height={300}\n                onUpdate={handleCapture}\n                facingMode={cameraFacing}\n              />\n            ) : (\n              <div className=\"photo-preview\">\n                <img\n                  src={URL.createObjectURL(capturedPhoto)}\n                  alt=\"captured\"\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n            )}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {!capturedPhoto ? (\n            <>\n              <Button\n                onClick={capturePhoto}\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"60px\",\n                  height: \"60px\",\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  bottom: \"10px\",\n                }}\n              >\n                📷\n              </Button>\n              <Button\n                onClick={() =>\n                  setCameraFacing((prev) =>\n                    prev === \"environment\" ? \"user\" : \"environment\"\n                  )\n                }\n              >\n                Flip Camera\n              </Button>\n              <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setCapturedPhoto(null)}\n              >\n                Retake\n              </Button>\n              <Button variant=\"primary\" onClick={savePhoto}>\n                OK\n              </Button>\n            </>\n          )}\n        </Modal.Footer>\n      </Modal>\n      {/* Descriptions Modal */}\n      <Modal show={showDescModal} onHide={handleCloseDescModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Descriptions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n            Add Description\n          </Button>\n          {descriptions.map((desc, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Button\n                variant=\"outline-secondary\"\n                className=\"w-100\"\n                onClick={() => selectDescription(index)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <span>{desc.description || \"Description\"}</span>\n                  <span\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      paddingLeft: \"10px\",\n                    }}\n                  >\n                    {desc.date || \"Date\"}\n                  </span>\n                </div>\n              </Button>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseDescModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n\n      {/* Info Modal */}\n      <InfoModal\n        show={showInfoModal}\n        handleClose={handleCloseInfoModal}\n        itemName={items.name}\n        dimensions={`${items.length},${items.width},${items.height}`}\n        price={items.price}\n        freqI={freqItem}\n        freqM={machineFrequency}\n        usage={usagePastYear}\n      />\n      {loading && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n            backdropFilter: \"blur(5px)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            zIndex: 9999, // Make sure it's above everything else\n          }}\n        >\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n      {/* Main Form */}\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"600px\" }}>\n          <Card className=\"align-items-center justify-content-center\">\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Add New Item</h2>\n              <Form onSubmit={handleSubmit}>\n                {/* Row for Name and PN */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"name\">\n                      <Form.Label>Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        value={items.name}\n                        onChange={handleChange(\"name\")}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"pn\">\n                      <Form.Label>Product Number</Form.Label>\n                      <div style={{ position: \"relative\" }}>\n                        <InputGroup>\n                          {/* Editable input field displaying the current PN */}\n                          <Form.Control\n                            type=\"text\"\n                            value={items.pn[currentPnIndex] || \"\"}\n                            onChange={(e) =>\n                              handlePnChange(currentPnIndex, e.target.value)\n                            }\n                          />\n                          {/* Arrow button to toggle dropdown */}\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => setShowDropdown(!showDropdown)}\n                          >\n                            &#9662;\n                          </Button>\n                          {/* Plus button to add a new PN */}\n                          <InputGroup.Text>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setAddingNewPn(true)}\n                            >\n                              +\n                            </Button>\n                          </InputGroup.Text>\n                        </InputGroup>\n                        {/* Dropdown list showing only the current item's PN options */}\n                        {showDropdown && (\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              top: \"100%\",\n                              left: 0,\n                              right: 0,\n                              backgroundColor: \"white\",\n                              border: \"1px solid #ccc\",\n                              zIndex: 1000,\n                              maxHeight: \"150px\",\n                              overflowY: \"auto\",\n                            }}\n                          >\n                            {items.pn.map((pnOption, idx) => (\n                              <div\n                                key={idx}\n                                style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setCurrentPnIndex(idx);\n                                  setShowDropdown(false);\n                                }}\n                              >\n                                {pnOption}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      {/* Input for adding a new PN, if triggered */}\n                      {addingNewPn && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter new PN\"\n                          value={newPn}\n                          onChange={(e) => setNewPn(e.target.value)}\n                          onBlur={handleAddNewPn}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              handleAddNewPn();\n                            }\n                          }}\n                        />\n                      )}\n                    </Form.Group>\n                  </Col>\n                </Row>\n                {/* Row for SN */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"sn\">\n                      <Form.Label>Serial Number</Form.Label>\n                      <div style={{ position: \"relative\" }}>\n                        <InputGroup>\n                          {/* Inline editable input showing the currently selected SN */}\n                          <Form.Control\n                            type=\"text\"\n                            value={items.sn[currentSnIndex] || \"\"}\n                            onChange={(e) =>\n                              handleSnChange(currentSnIndex, e.target.value)\n                            }\n                          />\n                          {/* Arrow button to toggle SN dropdown */}\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => setShowSnDropdown(!showSnDropdown)}\n                          >\n                            &#9662;\n                          </Button>\n                          {/* Plus button to add a new SN */}\n                          <InputGroup.Text>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setAddingNewSn(true)}\n                            >\n                              +\n                            </Button>\n                          </InputGroup.Text>\n                        </InputGroup>\n                        {/* Dropdown list for SN options */}\n                        {showSnDropdown && (\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              top: \"100%\",\n                              left: 0,\n                              right: 0,\n                              backgroundColor: \"white\",\n                              border: \"1px solid #ccc\",\n                              zIndex: 1000,\n                              maxHeight: \"150px\",\n                              overflowY: \"auto\",\n                            }}\n                          >\n                            {items.sn.map((snOption, idx) => (\n                              <div\n                                key={idx}\n                                style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setCurrentSnIndex(idx);\n                                  setShowSnDropdown(false);\n                                }}\n                              >\n                                {snOption}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      {/* Input for adding a completely new SN */}\n                      {addingNewSn && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter new SN\"\n                          value={newSn}\n                          onChange={(e) => setNewSn(e.target.value)}\n                          onBlur={handleAddNewSn}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              handleAddNewSn();\n                            }\n                          }}\n                        />\n                      )}\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"status\">\n                      <Form.Label>Status</Form.Label>\n                      <Form.Select\n                        value={items.status || \"\"}\n                        onChange={handleChange(\"status\")}\n                      >\n                        <option value=\"\">Select status</option>\n                        <option value=\"Good\">Good</option>\n                        <option value=\"Bad\">Bad</option>\n                        <option value=\"Unknown\">Unknown</option>\n                      </Form.Select>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* Row for OEM, Modality, Model */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"oem\">\n                      <Form.Label>OEM</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"OEM\"\n                        value={oem}\n                        onChange={(e) => setOem(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"modality\">\n                      <Form.Label>Modality</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Modality\"\n                        value={modality}\n                        onChange={(e) => setModality(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"model\">\n                      <Form.Label>Model</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Model\"\n                        value={model}\n                        onChange={(e) => setModel(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                {/* Work Orders and Descriptions Section */}\n                <div style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\n                  <div className=\"d-flex align-items-center\">\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={handleShowWoModal}\n                      className=\"me-2\"\n                    >\n                      Manage Work Orders\n                    </Button>\n                    {workOrders.length > 0 && (\n                      <div className=\"d-flex flex-column align-items-start\">\n                        <Form.Label>Work Order</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Most Recent Work Order\"\n                          value={mostRecentWorkOrder?.workOrder || \"\"}\n                          onChange={(e) =>\n                            handleWorkOrderChange(\n                              workOrders.indexOf(mostRecentWorkOrder),\n                              \"workOrder\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          placeholder=\"Work Order Date\"\n                          value={mostRecentWorkOrder?.date || \"\"}\n                          onChange={(e) =>\n                            handleWorkOrderChange(\n                              workOrders.indexOf(mostRecentWorkOrder),\n                              \"date\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {/* Description Editing */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Form.Group controlId=\"desc\">\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={listDescriptions}\n                      className=\"mb-2 me-2\"\n                    >\n                      List Descriptions\n                    </Button>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Enter description\"\n                      value={descriptions[selectedDesc]?.description || \"\"}\n                      onChange={(e) =>\n                        handleDescriptionChange(\n                          selectedDesc,\n                          \"description\",\n                          e.target.value\n                        )\n                      }\n                      style={{ marginBottom: \"0.5rem\" }}\n                    />\n                    <Form.Control\n                      type=\"date\"\n                      value={descriptions[selectedDesc]?.date || \"\"}\n                      onChange={(e) =>\n                        handleDescriptionChange(\n                          selectedDesc,\n                          \"date\",\n                          e.target.value\n                        )\n                      }\n                      style={{ marginTop: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                    />\n                  </Form.Group>\n                </div>\n                {/* Machine Selection Row with Local Loc Inputs */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          setMachinePick(true);\n                          handleShowClientModal();\n                        }}\n                        className=\"me-2\"\n                      >\n                        Select From\n                      </Button>\n                      {selectedClientFrom && (\n                        <div\n                          style={{\n                            border: \"1px solid #ccc\",\n                            padding: \"0.75rem\",\n                            borderRadius: \"4px\",\n                            marginBottom: \"1rem\",\n                          }}\n                        >\n                          <p>\n                            <strong>Selected Client (From):</strong>{\" \"}\n                            {selectedClientFrom.name}\n                          </p>\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowMachineModal(true)}\n                            >\n                              Select Machine for {selectedClientFrom.name}\n                            </Button>\n                            {selectedMachine && (\n                              <>\n                                <p style={{ marginTop: \"0.5rem\" }}>\n                                  <strong>Selected Machine (From):</strong>{\" \"}\n                                  {selectedMachine.name}\n                                </p>\n                                {showLocalLocFrom && (\n                                  <Form.Group\n                                    controlId=\"localLocFrom\"\n                                    className=\"mt-2\"\n                                  >\n                                    <Form.Label>Local Loc (From)</Form.Label>\n                                    <Form.Control\n                                      type=\"text\"\n                                      value={localLocFrom}\n                                      onChange={(e) =>\n                                        setLocalLocFrom(e.target.value)\n                                      }\n                                    />\n                                  </Form.Group>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          setMachinePick(false);\n                          handleShowClientModal();\n                        }}\n                        className=\"me-2\"\n                      >\n                        Select Current\n                      </Button>\n                      {selectedClientCurrent && (\n                        <div\n                          style={{\n                            border: \"1px solid #ccc\",\n                            padding: \"0.75rem\",\n                            borderRadius: \"4px\",\n                            marginBottom: \"1rem\",\n                          }}\n                        >\n                          <p>\n                            <strong>Selected Client (Current):</strong>{\" \"}\n                            {selectedClientCurrent.name}\n                          </p>\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowMachineModal(true)}\n                            >\n                              Select Machine for {selectedClientCurrent.name}\n                            </Button>\n                            {selectedCurrentMachine && (\n                              <>\n                                <p style={{ marginTop: \"0.5rem\" }}>\n                                  <strong>Selected Machine (Current):</strong>{\" \"}\n                                  {selectedCurrentMachine.name}\n                                </p>\n                                {showLocalLocCurrent && (\n                                  <Form.Group\n                                    controlId=\"localLocCurrent\"\n                                    className=\"mt-2\"\n                                  >\n                                    <Form.Label>Local Loc (Current)</Form.Label>\n                                    <Form.Control\n                                      type=\"text\"\n                                      value={localLocCurrent}\n                                      onChange={(e) =>\n                                        setLocalLocCurrent(e.target.value)\n                                      }\n                                    />\n                                  </Form.Group>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={handleShowParentModal}\n                        className=\"me-2\"\n                      >\n                        Select Parent\n                      </Button>\n                      {selectedParent && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Selected Parent\"\n                          value={selectedParent.name}\n                          readOnly\n                          style={{ cursor: \"default\", marginTop: \"0.5rem\" }}\n                        />\n                      )}\n                    </Col>\n                  </Row>\n                </div>\n                {/* Photo Action Row */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Row className=\"mb-3\">\n                    <Col xs={6}>\n                      <ButtonGroup>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleShowCameraModal}\n                        >\n                          Take Photo\n                        </Button>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleBrowsePhotos}\n                        >\n                          Browse\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                    <Col xs={6} className=\"d-flex align-items-center\">\n                      <Button\n                        variant={addToWebsite ? \"primary\" : \"outline-primary\"}\n                        onClick={() => setAddToWebsite((prev) => !prev)}\n                      >\n                        {addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"}\n                      </Button>\n                      <Form.Check\n                        type=\"checkbox\"\n                        id=\"hide-checkbox\"\n                        label=\"Hide\"\n                        // box is checked when we want visible = false\n                        checked={!items.visible}\n                        onChange={(e) => {\n                          // grab checked immediately\n                          const isHidden = e.currentTarget.checked;\n                          setItems((prev) => ({\n                            ...prev,\n                            visible: !isHidden,\n                          }));\n                        }}\n                        className=\"ms-3\"\n                      />\n                    </Col>\n                  </Row>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    ref={browseInputRef}\n                    style={{ display: \"none\" }}\n                    onChange={handleFilesSelected}\n                  />\n                </div>\n                {/* Photo Gallery */}\n                <div className=\"mt-3 d-flex flex-wrap\">\n                  {photos.map((photo, index) => (\n                    <div\n                      key={index}\n                      className=\"d-flex flex-column align-items-center mb-2 me-2\"\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <img\n                        src={photo.url}\n                        alt={`Photo ${index + 1}`}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          objectFit: \"cover\",\n                        }}\n                      />\n                      {photo.file && (\n                        <Button\n                          variant=\"danger\"\n                          size=\"sm\"\n                          style={{\n                            position: \"absolute\",\n                            top: 0,\n                            right: 0,\n                            padding: \"0 5px\",\n                          }}\n                          onClick={() => removePhoto(index)}\n                        >\n                          X\n                        </Button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n                {/* Extra Section: Dimensions, Price, and DOM */}\n\n                {/* Submit Row */}\n                <div className=\"mt-3 d-flex flex-wrap align-items-center\">\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    style={{ marginRight: \"1rem\" }}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant=\"info\"\n                    onClick={handleClone}\n                    style={{ marginRight: \"1rem\" }}\n                  >\n                    Clone\n                  </Button>\n                  <LoadingButton\n                    type=\"secondary\"\n                    name=\"Back\"\n                    route=\"NewSearch/mainSearch\"\n                  />\n                  <Button\n                    variant=\"info\"\n                    onClick={handlePrint}\n                    style={{ marginLeft: \"auto\" }}\n                  >\n                    Print Label\n                  </Button>\n                </div>\n                <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\n                  <Button\n                    variant=\"link\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"black\",\n                      fontSize: \"24px\",\n                    }}\n                    onClick={() => setShowExtra(!showExtra)}\n                  >\n                    ▼\n                  </Button>\n                </div>\n                <Collapse in={showExtra}>\n                  <div id=\"extra-collapse\" className=\"mt-3\">\n                    <Row>\n                      <Form.Group as={Col} controlId=\"dimensions\">\n                        <Form.Label>Dimensions (L x W x H)</Form.Label>\n                        <Row>\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Length\"\n                              type=\"text\"\n                              value={items.length}\n                              onChange={handleChange(\"length\")}\n                            />\n                          </Col>\n                          x\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Width\"\n                              type=\"text\"\n                              value={items.width}\n                              onChange={handleChange(\"width\")}\n                            />\n                          </Col>\n                          x\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Height\"\n                              type=\"text\"\n                              value={items.height}\n                              onChange={handleChange(\"height\")}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control\n                          placeholder=\"Price\"\n                          type=\"text\"\n                          value={items.price}\n                          onChange={handleChange(\"price\")}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row className=\"mt-3\">\n                      <Form.Group as={Col} controlId=\"DOM\">\n                        <Form.Label>DOM (Date of Manufacture)</Form.Label>\n                        <Form.Control\n                          placeholder=\"Enter DOM\"\n                          type=\"date\"\n                          value={DOM}\n                          onChange={(e) => setDOM(e.target.value)}\n                        />\n                      </Form.Group>\n                      {/* NEW: Local SN input */}\n                      <Form.Group as={Col} controlId=\"localSN\">\n                        <Form.Label>Local SN</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter Local SN\"\n                          value={items.localSN || \"\"}\n                          onChange={handleChange(\"localSN\")}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col} controlId=\"poNumber\">\n                        <Form.Label>PO Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"PO Number\"\n                          value={items.poNumber || \"\"}\n                          onChange={handleChange(\"poNumber\")}\n                        />\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"arrivalDate\">\n                        <Form.Label>Arrival Date</Form.Label>\n                        <Form.Control\n                          placeholder=\"Enter Arrival Date\"\n                          type=\"date\"\n                          value={items.arrival_date}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            setItems((prev) => ({\n                              ...prev,\n                              arrival_date: value,\n                            }));\n                          }}\n                        />\n                      </Form.Group>\n                    </Row>\n                  </div>\n                </Collapse>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </Container>\n    </LoggedIn>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}