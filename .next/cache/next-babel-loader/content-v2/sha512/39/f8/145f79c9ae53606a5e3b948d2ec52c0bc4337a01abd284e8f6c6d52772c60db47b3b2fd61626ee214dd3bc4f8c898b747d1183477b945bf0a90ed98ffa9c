{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\item\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Row, Col, Modal, FormControl, Collapse, InputGroup, ButtonGroup } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../../../../context/AuthUserContext\";\nimport firebase from \"../../../../context/Firebase\";\nimport LoggedIn from \"../../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../../utils/ClientTable\";\nimport ClientInfoModal from \"../../ClientInfoModal\";\nimport ParentModal from \"../../AddItem/parentModal\";\nimport dynamic from \"next/dynamic\";\nimport InfoModal from \"../../InfoModal\";\nimport MachineSelectionModal from \"./MachineSelectionModal\";\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\nimport NewLocal from \"./NewLocal\"; //inflow API\n\nimport InflowAPI from \"../../../../utils/inflowAPI\"; // Import for SSR\n\nimport { adminDb } from \"../../../../context/FirebaseAdmin\"; // === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\n\nfunction buildLocalLocObject(loc) {\n  var _loc$section, _loc$section2;\n\n  const o = {};\n  if (loc.region) o.region = loc.region;\n  if ((_loc$section = loc.section) !== null && _loc$section !== void 0 && _loc$section.letter && (_loc$section2 = loc.section) !== null && _loc$section2 !== void 0 && _loc$section2.number) o.section = loc.section; // pick up the new singular fields, too:\n\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\n  return o;\n} // This will only load the component on the client-side.\n\n\nconst BarcodeScannerComponent = dynamic(() => import(\"react-qr-barcode-scanner\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-qr-barcode-scanner\")],\n    modules: [\"NewSearch\\\\item\\\\[id]\\\\index.js -> \" + \"react-qr-barcode-scanner\"]\n  }\n}); // Simulates a network request delay.\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n} // Custom LoadingButton component.\n\n\nfunction LoadingButton({\n  type,\n  name,\n  route\n}) {\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return __jsx(Link, {\n    href: `/${route}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: `btn btn-${type}`,\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loading…\" : name));\n}\n\nexport default function DisplayItem() {\n  var _initialItem, _initialItem2, _initialItem3, _initialItem4, _initialItem5, _initialItem6, _initialItem7, _initialItem8, _initialItem$visible, _initialItem9, _descriptions$selecte3, _descriptions$selecte4, _newLocalFrom$section, _newLocalFrom$section2, _newLocalCurrent$sect, _newLocalCurrent$sect2;\n\n  const router = useRouter();\n  const {\n    signOut\n  } = useAuth(); // const { id } = router.query;\n\n  const {\n    id: idFromRouter\n  } = router.query;\n  const initialId = ((_initialItem = initialItem) === null || _initialItem === void 0 ? void 0 : _initialItem.id) || idFromRouter;\n  const {\n    0: items,\n    1: setItems\n  } = useState({\n    name: ((_initialItem2 = initialItem) === null || _initialItem2 === void 0 ? void 0 : _initialItem2.name) || \"\",\n    pn: Array.isArray((_initialItem3 = initialItem) === null || _initialItem3 === void 0 ? void 0 : _initialItem3.pn) ? initialItem.pn : (_initialItem4 = initialItem) !== null && _initialItem4 !== void 0 && _initialItem4.pn ? [initialItem.pn] : [],\n    sn: Array.isArray((_initialItem5 = initialItem) === null || _initialItem5 === void 0 ? void 0 : _initialItem5.sn) ? initialItem.sn : (_initialItem6 = initialItem) !== null && _initialItem6 !== void 0 && _initialItem6.sn ? [initialItem.sn] : [],\n    price: \"\",\n    status: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    poNumber: \"\",\n    trackingNumber: \"\",\n    localSN: ((_initialItem7 = initialItem) === null || _initialItem7 === void 0 ? void 0 : _initialItem7.localSN) || \"\",\n    arrival_date: ((_initialItem8 = initialItem) === null || _initialItem8 === void 0 ? void 0 : _initialItem8.arrival_date) || \"\",\n    visible: (_initialItem$visible = (_initialItem9 = initialItem) === null || _initialItem9 === void 0 ? void 0 : _initialItem9.visible) !== null && _initialItem$visible !== void 0 ? _initialItem$visible : true\n  });\n  const {\n    0: newLocalFrom,\n    1: setNewLocalFrom\n  } = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  });\n  const {\n    0: newLocalCurrent,\n    1: setNewLocalCurrent\n  } = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  }); // New states for separate client selections:\n\n  const {\n    0: selectedClientFrom,\n    1: setSelectedClientFrom\n  } = useState(null);\n  const {\n    0: selectedClientCurrent,\n    1: setSelectedClientCurrent\n  } = useState(null);\n  const {\n    0: selectedMachine,\n    1: setSelectedMachine\n  } = useState(null);\n  const {\n    0: selectedCurrentMachine,\n    1: setSelectedCurrentMachine\n  } = useState(null); // whenever you pick a new “From” client or machine, clear the old From-loc:\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom, selectedMachine]);\n  // const didMountFrom = useRef(false);\n  // useEffect(() => {\n  //   if (!didMountFrom.current) {\n  //     // first time through (the data-load phase), don’t clear\n  //     didMountFrom.current = true;\n  //     return;\n  //   }\n  //   // thereafter, when the user picks a new client or machine, clear:\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  //   setLocalLocFrom(\"\");\n  // }, [selectedClientFrom, selectedMachine]);\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const [didFetch, setDidFetch] = useState(false);\n  // useEffect(() => {\n  //   if (!didFetch) {\n  //     // we’re in the data-load phase, skip clearing\n  //     setDidFetch(true);\n  //     return;\n  //   }\n  //   // only clear on subsequent user changes:\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // These arrays will be populated from Firebase.\n\n  const {\n    0: pnOptions,\n    1: setPnOptions\n  } = useState([]);\n  const {\n    0: snOptions,\n    1: setSnOptions\n  } = useState([]);\n  const {\n    0: descriptions,\n    1: setDescriptions\n  } = useState([{\n    description: \"\",\n    date: \"\"\n  }]);\n  const {\n    0: workOrders,\n    1: setWorkOrders\n  } = useState([{\n    workOrder: \"\",\n    date: \"\"\n  }]);\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: showErr,\n    1: setShowErr\n  } = useState(false);\n  const {\n    0: Err,\n    1: setErr\n  } = useState(\"N/A\");\n  const {\n    0: showDescModal,\n    1: setShowDescModal\n  } = useState(false);\n  const {\n    0: showWoModal,\n    1: setShowWoModal\n  } = useState(false);\n  const {\n    0: showClientModal,\n    1: setShowClientModal\n  } = useState(false);\n  const {\n    0: showMachineModal,\n    1: setShowMachineModal\n  } = useState(false);\n  const {\n    0: showParentModal,\n    1: setShowParentModal\n  } = useState(false);\n  const {\n    0: showCameraModal,\n    1: setShowCameraModal\n  } = useState(false);\n  const {\n    0: showSaveModal,\n    1: setShowSaveModal\n  } = useState(false);\n  const {\n    0: showPrintModal,\n    1: setShowPrintModal\n  } = useState(false);\n  const {\n    0: machineSelectionModal,\n    1: setMachineSelectionModal\n  } = useState(false);\n  const {\n    0: selectedDesc,\n    1: setSelectedDesc\n  } = useState(0);\n  const {\n    0: selectedClient,\n    1: setSelectedClient\n  } = useState(null);\n  const {\n    0: selectedParent,\n    1: setSelectedParent\n  } = useState(null);\n  const {\n    0: TheMachine,\n    1: setTheMachine\n  } = useState(null);\n  const {\n    0: machineOptions,\n    1: setMachineOptions\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: capturedPhoto,\n    1: setCapturedPhoto\n  } = useState(null);\n  const {\n    0: cameraFacing,\n    1: setCameraFacing\n  } = useState(\"environment\");\n  const {\n    0: addToWebsite,\n    1: setAddToWebsite\n  } = useState(false);\n  const {\n    0: machinePick,\n    1: setMachinePick\n  } = useState(false);\n  const {\n    0: freqItem,\n    1: setFreqItem\n  } = useState(0);\n  const {\n    0: usagePastYear,\n    1: setUsagePastYear\n  } = useState(0);\n  const {\n    0: machineFrequency,\n    1: setMachineFrequency\n  } = useState(0); // State for the extra (dimensions/price/DOM/PO Number) section.\n\n  const {\n    0: showExtra,\n    1: setShowExtra\n  } = useState(false); // State for the local warehouse location inputs.\n\n  const {\n    0: localLocFrom,\n    1: setLocalLocFrom\n  } = useState(\"\");\n  const {\n    0: localLocCurrent,\n    1: setLocalLocCurrent\n  } = useState(\"\"); // New state for DOM (Date of Manufacture)\n\n  const {\n    0: DOM,\n    1: setDOM\n  } = useState(\"\"); // New state for OEM, Modality, and Model.\n\n  const {\n    0: oem,\n    1: setOem\n  } = useState(\"\");\n  const {\n    0: modality,\n    1: setModality\n  } = useState(\"\");\n  const {\n    0: model,\n    1: setModel\n  } = useState(\"\"); // More info modal state.\n\n  const {\n    0: showInfoModal,\n    1: setShowInfoModal\n  } = useState(false);\n  const {\n    0: itemName,\n    1: setItemName\n  } = useState(\"\");\n  const {\n    0: machineFieldsInitialized,\n    1: setMachineFieldsInitialized\n  } = useState(false); // near the top of DisplayItem()\n\n  const {\n    0: showLocalModalFrom,\n    1: setShowLocalModalFrom\n  } = useState(false);\n  const {\n    0: showLocalModalCurrent,\n    1: setShowLocalModalCurrent\n  } = useState(false);\n\n  const openLocalModalFrom = () => setShowLocalModalFrom(true);\n\n  const closeLocalModalFrom = () => setShowLocalModalFrom(false);\n\n  const openLocalModalCurrent = () => setShowLocalModalCurrent(true);\n\n  const closeLocalModalCurrent = () => setShowLocalModalCurrent(false); // at the top of DisplayItem()\n\n\n  const {\n    0: showNewLocalModalFrom,\n    1: setShowNewLocalModalFrom\n  } = useState(false);\n  const {\n    0: showNewLocalModalCurrent,\n    1: setShowNewLocalModalCurrent\n  } = useState(false);\n\n  function formatLoc(loc) {\n    var _loc$section3, _loc$section4;\n\n    if (!loc) return \"\";\n    const parts = [];\n    if (loc.region) parts.push(loc.region);\n    if ((_loc$section3 = loc.section) !== null && _loc$section3 !== void 0 && _loc$section3.letter && (_loc$section4 = loc.section) !== null && _loc$section4 !== void 0 && _loc$section4.number) parts.push(`${loc.section.letter}${loc.section.number}`);\n    if (loc.bin) parts.push(`B${loc.bin}`);\n    if (loc.pallet) parts.push(`P${loc.pallet}`);\n    return parts.join(\"–\");\n  } // when the From-client changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom]);\n  // // when the From-machine changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedMachine]);\n  // same for Current:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n\n  const handleSendToInflow = async () => {\n    try {\n      var _descriptions$selecte;\n\n      const name = items.name;\n      const description = ((_descriptions$selecte = descriptions[selectedDesc]) === null || _descriptions$selecte === void 0 ? void 0 : _descriptions$selecte.description) || \"\"; // gather every photo URL from Firebase Storage\n\n      const imageUrls = photos.map(p => p.url);\n      await InflowAPI.upsertProduct({\n        name,\n        description,\n        imageUrls\n      });\n      alert(\"Sent to inFlow successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Error sending to inFlow: \" + err.message);\n    }\n  }; // const [storedMachine, setStoredMachine] = useState(null);\n  // useEffect(() => {\n  //   // once any of these three change, re-merge:\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\n  //     const merged = updateMachineFields(\n  //       TheMachine,\n  //       selectedCurrentMachine,\n  //       selectedMachine\n  //     );\n  //     setOem(merged.oem);\n  //     setModality(merged.modality);\n  //     setModel(merged.model);\n  //   }\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\n  // whenever the “From” client changes:\n\n\n  useEffect(() => {\n    var _selectedClientFrom$n;\n\n    setShowLocalLocFrom((selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n = selectedClientFrom.name) === null || _selectedClientFrom$n === void 0 ? void 0 : _selectedClientFrom$n.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientFrom]); // whenever the “Current” client changes:\n\n  useEffect(() => {\n    var _selectedClientCurren;\n\n    setShowLocalLocCurrent((selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren = selectedClientCurrent.name) === null || _selectedClientCurren === void 0 ? void 0 : _selectedClientCurren.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientCurrent]); // Fetch clients data.\n\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n\n    fetchClientsData();\n  }, []); // Fetch PN and SN options from Firebase.\n\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      const pnArray = [...pnSet];\n      const snArray = [...snSet];\n      setPnOptions(pnArray);\n      setSnOptions(snArray);\n    }\n\n    fetchPnSn();\n  }, []);\n  useEffect(() => {\n    if (id) {\n      fetchData();\n    }\n  }, [id]);\n\n  async function resolveClientFromMachine(machineRef, setClient, setMachine, isFrom = true) {\n    const machineDoc = await machineRef.get();\n\n    if (machineDoc.exists) {\n      var _machineData$name;\n\n      const machineData = machineDoc.data();\n      setMachine(_objectSpread({\n        id: machineDoc.id\n      }, machineData)); // Determine if the machine is \"interior socal\"\n      // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\n      // if (isSocalInterior) {\n      //   if (isFrom) {\n      //     setShowLocalLocFrom(true);\n      //   } else {\n      //     setShowLocalLocCurrent(true);\n      //   }\n      // } else {\n      // Optionally clear the flag if it is not \"interior socal\"\n      // if (isFrom) {\n      //   setShowLocalLocFrom(false);\n      // } else {\n      //   setShowLocalLocCurrent(false);\n      // }\n      // }\n      // new: fetch client name and combine both checks\n\n      const clientDoc = machineData.client && typeof machineData.client.get === \"function\" ? await machineData.client.get() : null;\n      const clientName = clientDoc && clientDoc.exists ? clientDoc.data().name : null;\n      const isSocalInterior = ((_machineData$name = machineData.name) === null || _machineData$name === void 0 ? void 0 : _machineData$name.toLowerCase()) === \"interior socal\";\n      const shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\n\n      if (isFrom) {\n        setShowLocalLocFrom(shouldShow);\n      } else {\n        setShowLocalLocCurrent(shouldShow);\n      }\n\n      if (machineData.client && typeof machineData.client.get === \"function\") {\n        const clientDoc = await machineData.client.get();\n\n        if (clientDoc.exists) {\n          setClient(_objectSpread({\n            id: clientDoc.id\n          }, clientDoc.data()));\n        }\n      }\n    }\n  }\n\n  const fetchData = async () => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Test\").doc(id).get();\n\n    if (doc.exists) {\n      var _machineFromData, _machineFromData$name, _machineCurrentData, _machineCurrentData$n, _selectedClientFrom$n2, _selectedClientCurren2;\n\n      console.log(\"test\");\n      const data = doc.data();\n      const normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\n      const normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\n      setItems(_objectSpread(_objectSpread({}, data), {}, {\n        pn: normalizedPN,\n        sn: normalizedSN\n      }));\n      setDescriptions(data.descriptions || []);\n      setWorkOrders(data.workOrders || []);\n      if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\n      if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\n\n      if (data.DOM) {\n        setDOM(data.DOM);\n      } // …after you do setItems, setDescriptions, etc.\n      // load the “newLocal” maps\n\n\n      if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\n      if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent); // Load PO Number if it exists.\n\n      if (data.poNumber) {\n        setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          poNumber: data.poNumber\n        }));\n      }\n\n      if (data.ClientFrom) {\n        const clientFromDoc = await data.ClientFrom.get();\n\n        if (clientFromDoc.exists) {\n          setSelectedClientFrom(_objectSpread({\n            id: clientFromDoc.id\n          }, clientFromDoc.data()));\n        }\n      }\n\n      if (data.ClientCurrent) {\n        const clientCurrentDoc = await data.ClientCurrent.get();\n\n        if (clientCurrentDoc.exists) {\n          setSelectedClientCurrent(_objectSpread({\n            id: clientCurrentDoc.id\n          }, clientCurrentDoc.data()));\n        }\n      }\n\n      if (!data.ClientFrom && data.Machine && typeof data.Machine.get === \"function\") {\n        console.log(\"Entered resolveClientFromMachine for Machine (old style for From)\");\n        await resolveClientFromMachine(data.Machine, setSelectedClientFrom, setSelectedMachine, true);\n      }\n\n      if (!data.ClientCurrent && data.CurrentMachine && typeof data.CurrentMachine.get === \"function\") {\n        console.log(\"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\");\n        await resolveClientFromMachine(data.CurrentMachine, setSelectedClientCurrent, setSelectedCurrentMachine, false);\n      }\n\n      let machineFromData = null;\n      let machineCurrentData = null;\n\n      if (data.MachineFrom) {\n        const doc = await data.MachineFrom.get();\n        machineFromData = doc.exists ? doc.data() : null;\n        setSelectedMachine(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      }\n\n      if (data.MachineCurrent) {\n        const doc = await data.MachineCurrent.get();\n        machineCurrentData = doc.exists ? doc.data() : null;\n        setSelectedCurrentMachine(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      }\n\n      const nameFrom = (_machineFromData = machineFromData) === null || _machineFromData === void 0 ? void 0 : (_machineFromData$name = _machineFromData.name) === null || _machineFromData$name === void 0 ? void 0 : _machineFromData$name.toLowerCase();\n      const nameCurrent = (_machineCurrentData = machineCurrentData) === null || _machineCurrentData === void 0 ? void 0 : (_machineCurrentData$n = _machineCurrentData.name) === null || _machineCurrentData$n === void 0 ? void 0 : _machineCurrentData$n.toLowerCase(); // If the machine’s name is “interior socal”, show that branch:\n      // setShowLocalLocFrom(nameFrom === \"interior socal\");\n      // // Or if your Firestore already has a value for localLocFrom, show it anyway:\n      // if (data.localLocFrom) setShowLocalLocFrom(true);\n      // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\n      // if (data.localLocCurrent) setShowLocalLocCurrent(true);\n      // new: combine machine-name OR client-name check, keep existing-data\n\n      setShowLocalLocFrom(nameFrom === \"interior socal\" || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n2 = selectedClientFrom.name) === null || _selectedClientFrom$n2 === void 0 ? void 0 : _selectedClientFrom$n2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocFrom));\n      setShowLocalLocCurrent(nameCurrent === \"interior socal\" || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren2 = selectedClientCurrent.name) === null || _selectedClientCurren2 === void 0 ? void 0 : _selectedClientCurren2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocCurrent));\n      const theMachineData = data.TheMachine || null;\n      setTheMachine(theMachineData);\n\n      if (theMachineData) {\n        var _theMachineData$oem, _theMachineData$modal, _theMachineData$model;\n\n        // pull both variants, prefer lowercase if it exists\n        const OEM = (_theMachineData$oem = theMachineData.oem) !== null && _theMachineData$oem !== void 0 ? _theMachineData$oem : theMachineData.OEM;\n        const Modality = (_theMachineData$modal = theMachineData.modality) !== null && _theMachineData$modal !== void 0 ? _theMachineData$modal : theMachineData.Modality;\n        const Model = (_theMachineData$model = theMachineData.model) !== null && _theMachineData$model !== void 0 ? _theMachineData$model : theMachineData.Model;\n        setTheMachine(_objectSpread(_objectSpread({}, theMachineData), {}, {\n          OEM,\n          Modality,\n          Model\n        }));\n      } // setStoredMachine(theMachineData);\n      // **right here** merge from the three sources you just fetched:\n\n\n      const merged = updateMachineFields(theMachineData, machineCurrentData, machineFromData);\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n      console.log(\"SelectedMachine:\", selectedMachine, \"SelectedCurrentMachine:\", selectedCurrentMachine); // Show local loc inputs if applicable\n      // if (\n      //   selectedMachine &&\n      //   selectedMachine.name &&\n      //   selectedMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocFrom(true);\n      // }\n      // if (\n      //   selectedCurrentMachine &&\n      //   selectedCurrentMachine.name &&\n      //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocCurrent(true);\n      // }\n\n      if (data.Parent) {\n        const parentDoc = await data.Parent.get();\n        setSelectedParent(_objectSpread({\n          id: parentDoc.id\n        }, parentDoc.data()));\n      } // Priority auto‑population of machine fields.\n      // const updatedFields = updateMachineFields(storedMachine, selectedCurrentMachine, selectedMachine);\n      // // console.log(\"Updated machine fields:\", updatedFields);\n      // setOem(updatedFields.oem);\n      // setModality(updatedFields.modality);\n      // setModel(updatedFields.model);\n\n\n      await fetchPhotos(id);\n      await checkIfAddedToWebsite(id);\n      await calculateItemFrequencyAndUsage(data.pn);\n    } else {\n      router.push({\n        pathname: \"../AddItem/NewItem\",\n        query: {\n          signal: id\n        }\n      });\n    }\n  }; // Returns the value for a given field from the highest-priority source.\n\n\n  function getPriorityMachineField(field, theMachine, currentMachine, fromMachine) {\n    console.log(\"the machine: \", theMachine, \"field: \", field);\n\n    if (theMachine && theMachine[field] && theMachine[field] !== \"N/A\" && theMachine[field].trim() !== \"\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field] !== \"N/A\" && currentMachine[field].trim() !== \"\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field] !== \"N/A\" && fromMachine[field].trim() !== \"\") {\n      return fromMachine[field];\n    }\n\n    return \"\";\n  } // Returns an object with updated OEM, modality, and model fields.\n\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getPriorityMachineField(\"OEM\", theMachine, currentMachine, fromMachine),\n      modality: getPriorityMachineField(\"Modality\", theMachine, currentMachine, fromMachine),\n      model: getPriorityMachineField(\"Model\", theMachine, currentMachine, fromMachine)\n    };\n  }\n\n  const calculateItemFrequencyAndUsage = async pn => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n    const normalizedPN = pn !== undefined ? pn : \"\";\n    const itemsSnapshot = await db.collection(\"Test\").where(\"pn\", \"==\", normalizedPN).get();\n    setFreqItem(itemsSnapshot.size);\n    let usagePastYear = 0;\n    itemsSnapshot.forEach(doc => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach(workOrder => {\n        const workOrderDate = new Date(workOrder.date);\n\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  };\n\n  const fetchMachine = async machineId => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData); // re-merge all three sources with correct priority:\n\n      const merged = updateMachineFields(machineData, selectedCurrentMachine, selectedMachine);\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n      const machinesSnapshot = await db.collection(\"Machine\").where(\"Model\", \"==\", machineData.Model || machineData.model).get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  };\n\n  const fetchPhotos = async docID => {\n    const storageRef = firebase.storage().ref();\n    const listRef = storageRef.child(`Parts/${docID}`);\n\n    try {\n      const res = await listRef.listAll();\n      const urls = await Promise.all(res.items.map(item => item.getDownloadURL()));\n      console.log(\"Fetched photo URLs:\", urls);\n      setPhotos(urls.map(url => ({\n        url,\n        file: null\n      })));\n    } catch (error) {\n      console.error(\"Error fetching photos: \", error);\n    }\n  };\n\n  const checkIfAddedToWebsite = async docID => {\n    const db = firebase.firestore();\n    const partsDoc = await db.collection(\"Parts\").doc(docID).get();\n\n    if (partsDoc.exists) {\n      setAddToWebsite(true);\n    }\n  };\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleCloseErr = () => setShowErr(false);\n\n  const handleShowErr = () => setShowErr(true);\n\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n\n  const handleClosePrintModal = () => setShowPrintModal(false);\n\n  const handleShowSaveModal = () => setShowSaveModal(true);\n\n  const handleShowPrintModal = () => setShowPrintModal(true);\n\n  const handleMachineSelectionModal = () => setMachineSelectionModal(false);\n\n  const handleCloseDescModal = () => setShowDescModal(false);\n\n  const handleShowDescModal = () => setShowDescModal(true);\n\n  const handleCloseWoModal = () => setShowWoModal(false);\n\n  const handleShowWoModal = () => setShowWoModal(true);\n\n  const handleCloseClientModal = () => setShowClientModal(false);\n\n  const handleShowClientModal = () => setShowClientModal(true);\n\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n\n  const handleCloseParentModal = () => setShowParentModal(false);\n\n  const handleShowParentModal = () => setShowParentModal(true); // When a client is selected from the client table.\n\n\n  const handleClientInfo = async clientId => {\n    // Clear any previously selected machine and local loc info for this branch.\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n\n    if (clientDoc.exists) {\n      const clientData = _objectSpread({\n        id: clientDoc.id\n      }, clientDoc.data());\n\n      if (machinePick) {\n        setSelectedClientFrom(clientData);\n      } else {\n        setSelectedClientCurrent(clientData);\n      } // after setting selectedClientFrom/Current:\n\n\n      if (clientData.name === \"SoCalWarehouse\") {\n        if (machinePick) setShowLocalLocFrom(true);else setShowLocalLocCurrent(true);\n      } // Fetch machines for this client:\n\n\n      const machinePromises = clientData.machines.map(machineRef => machineRef.get());\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map(machineDoc => _objectSpread({\n        id: machineDoc.id\n      }, machineDoc.data()));\n      setMachineOptions(machines); // Close the client modal\n\n      handleCloseClientModal();\n    }\n  }; // Reordering function for dropdowns.\n\n\n  const reorderArray = (arr, selectedValue) => {\n    const newArr = arr.filter(val => val !== selectedValue);\n    return [selectedValue, ...newArr];\n  };\n\n  const {\n    0: addingNewPn,\n    1: setAddingNewPn\n  } = useState(false);\n  const {\n    0: newPn,\n    1: setNewPn\n  } = useState(\"\");\n  const {\n    0: addingNewSn,\n    1: setAddingNewSn\n  } = useState(false);\n  const {\n    0: newSn,\n    1: setNewSn\n  } = useState(\"\");\n\n  const handlePnSelect = e => {\n    const selected = e.target.value;\n    setItems(prev => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: updatedPn\n      });\n    });\n  };\n\n  const handleSnSelect = e => {\n    const selected = e.target.value;\n    setItems(prev => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: updatedSn\n      });\n    });\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        pn: [...prev.pn, newPn.trim()]\n      }));\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        sn: [...prev.sn, newSn.trim()]\n      }));\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  }; // Generate custom document ID if needed.\n\n\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  function shallowClean(obj) {\n    const newObj = {};\n\n    for (const key in obj) {\n      console.log(key, obj[key]);\n\n      if (obj.hasOwnProperty(key)) {\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\n      }\n    }\n\n    return newObj;\n  }\n\n  async function toSend() {\n    var _fromDetails$section, _fromDetails$section2, _currentDetails$secti, _currentDetails$secti2;\n\n    const db = firebase.firestore();\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\"; // Always use the current state values for OEM, modality, and model.\n\n    const machineData = _objectSpread(_objectSpread({}, TheMachine || {}), {}, {\n      oem: oem,\n      modality: modality,\n      model: model\n    });\n\n    const formattedItems = _objectSpread(_objectSpread({}, items), {}, {\n      descriptions,\n      workOrders\n    }); // Remove any unused fields.\n\n\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite; // NEW: Add the user's email under the field \"user\"\n\n    formattedItems.lastEdited = userEmail; // Clean pn and sn arrays to replace undefined values with an empty string.\n\n    formattedItems.pn = (items.pn || []).map(value => value === undefined ? \"\" : value);\n    formattedItems.sn = (items.sn || []).map(value => value === undefined ? \"\" : value);\n    const fromDetails = buildLocalLocObject(newLocalFrom);\n    const currentDetails = buildLocalLocObject(newLocalCurrent);\n    console.log(\"From Details: \" + fromDetails.region + \" \" + ((_fromDetails$section = fromDetails.section) === null || _fromDetails$section === void 0 ? void 0 : _fromDetails$section.letter) + ((_fromDetails$section2 = fromDetails.section) === null || _fromDetails$section2 === void 0 ? void 0 : _fromDetails$section2.number) + \" \" + fromDetails.bin + \" \" + fromDetails.pallet);\n    console.log(\"Current Details: \" + currentDetails.region + \" \" + ((_currentDetails$secti = currentDetails.section) === null || _currentDetails$secti === void 0 ? void 0 : _currentDetails$secti.letter) + ((_currentDetails$secti2 = currentDetails.section) === null || _currentDetails$secti2 === void 0 ? void 0 : _currentDetails$secti2.number) + \" \" + currentDetails.bin + \" \" + currentDetails.pallet);\n\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n      formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      console.log(\"entered empty fromDetails else\");\n      formattedItems.localLocFrom = \"\";\n      formattedItems.newLocalFrom = {};\n    }\n\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n      formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      formattedItems.localLocCurrent = \"\";\n      formattedItems.newLocalCurrent = {};\n    }\n\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db.collection(\"Machine\").doc(selectedMachine.id);\n    }\n\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n    }\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    } // NEW: Set separate client references.\n\n\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db.collection(\"Client\").doc(selectedClientFrom.id);\n    }\n\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db.collection(\"Client\").doc(selectedClientCurrent.id);\n    } // Only attach the richer “newLocal” map when the user actually filled something in\n\n\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n    }\n\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n    }\n\n    let docId = id;\n\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : docId;\n\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n            }\n          } // Delete the old document.\n\n\n          await db.collection(\"Test\").doc(docId).delete(); // Set docId to the new document ID.\n\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n            });\n          }\n        }\n      } // Upload any new photos to Firebase Storage.\n\n\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\"); // Redirect to the new URL using the new document id.\n\n      router.push(`/NewSearch/item/${docId}`); // Optionally, you can also show a save confirmation modal:\n\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  } // Additional state for local warehouse location inputs.\n\n\n  const {\n    0: showLocalLocFrom,\n    1: setShowLocalLocFrom\n  } = useState(false);\n  const {\n    0: showLocalLocCurrent,\n    1: setShowLocalLocCurrent\n  } = useState(false); // When a machine is selected from the modal.\n\n  const handleSetSelectedMachine = machine => {\n    var _machine$name;\n\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    const isSocalInterior = ((_machine$name = machine.name) === null || _machine$name === void 0 ? void 0 : _machine$name.toLowerCase()) === \"interior socal\";\n\n    if (machinePick) {\n      var _selectedClientFrom$n3;\n\n      setSelectedMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocFrom(isSocalInterior || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n3 = selectedClientFrom.name) === null || _selectedClientFrom$n3 === void 0 ? void 0 : _selectedClientFrom$n3.toLowerCase()) === \"socalwarehouse\");\n    } else {\n      var _selectedClientCurren3;\n\n      setSelectedCurrentMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocCurrent(isSocalInterior || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren3 = selectedClientCurrent.name) === null || _selectedClientCurren3 === void 0 ? void 0 : _selectedClientCurren3.toLowerCase()) === \"socalwarehouse\");\n    }\n\n    fetchMachine(machine.id); // Close the machine modal (assuming you're using showMachineModal to control it)\n\n    setShowMachineModal(false);\n  };\n\n  const uploadPhotos = async docID => {\n    const storageRef = firebase.storage().ref();\n\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(`Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`);\n        const metadata = {\n          contentType: \"image/png\"\n        };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  }; // Function to handle printing the label.\n\n\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    }\n\n    let clientName = \"\"; // Attempt to fetch client name from the Machine document reference.\n\n    if (items.Machine && typeof items.Machine.get === \"function\") {\n      try {\n        const machineDoc = await items.Machine.get();\n\n        if (machineDoc.exists) {\n          const machineData = machineDoc.data();\n\n          if (machineData.client && typeof machineData.client.get === \"function\") {\n            const clientDoc = await machineData.client.get();\n\n            if (clientDoc.exists) {\n              clientName = clientDoc.data().name || \"\";\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine or client:\", error);\n      }\n    } else {\n      console.warn(\"No Machine reference available in the item\");\n    }\n\n    console.log(clientName, \":\", items.client); // Fallback: if no client name was found, check items.client.\n\n    if (!clientName && items.client) {\n      if (typeof items.client.get === \"function\") {\n        try {\n          const clientDoc = await items.client.get();\n\n          if (clientDoc.exists) {\n            clientName = clientDoc.data().name || \"\";\n          }\n        } catch (error) {\n          console.error(\"Error fetching client from items.client:\", error);\n        }\n      } else {\n        clientName = items.client;\n      }\n    }\n\n    console.log(\"descriptions:\", descriptions[selectedDesc]);\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      client: clientName,\n      status: items.status,\n      local_sn: id,\n      descriptions: [descriptions[selectedDesc] || {\n        description: \"\",\n        date: \"\"\n      }],\n      date: items.dateCreated || \"\",\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model,\n      poNumber: items.poNumber,\n      arrival_date: items.arrival_date // NEW: Include arrival_date\n\n    };\n    console.log(\"Payload for printing:\", payload);\n\n    try {\n      const response = await fetch(\"https://9d70-174-76-22-138.ngrok-free.app/print-label\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      console.log(\"Print result:\", result.status);\n\n      if (result.status.includes(\"successfully.\")) {\n        handleShowPrintModal();\n      } else {\n        console.error(\"Error printing label:\", result.error);\n      }\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault(); // Only check that the Name field is filled out.\n\n    if (!items.name) {\n      handleShow(); // This shows the \"missing field\" modal.\n    } else {\n      toSend();\n    }\n  } // Handlers for input changes.\n\n\n  const handleChange = field => event => {\n    const value = event.target ? event.target.value : event.value;\n    setItems(prevItems => _objectSpread(_objectSpread({}, prevItems), {}, {\n      [field]: value\n    }));\n  };\n\n  const addDescription = () => {\n    setDescriptions([...descriptions, {\n      description: \"\",\n      date: \"\"\n    }]);\n  };\n\n  const removeDescription = index => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) => i === index ? _objectSpread(_objectSpread({}, desc), {}, {\n      [field]: value\n    }) : desc);\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, {\n      workOrder: \"\",\n      date: \"\"\n    }]);\n  };\n\n  const removeWorkOrder = index => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) => i === index ? _objectSpread(_objectSpread({}, wo), {}, {\n      [field]: value\n    }) : wo);\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = index => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const savePhoto = () => {\n    setPhotos(prevPhotos => [...prevPhotos, {\n      file: capturedPhoto,\n      url: URL.createObjectURL(capturedPhoto)\n    }]);\n    setCapturedPhoto(null);\n    handleCloseCameraModal();\n  };\n\n  const removePhoto = index => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  };\n\n  const mostRecentWorkOrder = workOrders && workOrders.length > 0 ? workOrders.reduce((latest, current) => {\n    const latestDate = new Date(latest.date);\n    const currentDate = new Date(current.date);\n    return currentDate > latestDate ? current : latest;\n  }, workOrders[0]) : {};\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handlePnChange = (index, value) => {\n    setItems(prev => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: newPn\n      });\n    });\n  };\n\n  const addPn = () => {\n    setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      pn: [...prev.pn, \"\"]\n    }));\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems(prev => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: newSn\n      });\n    });\n  };\n\n  const addSn = () => {\n    setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      sn: [...prev.sn, \"\"]\n    }));\n  };\n\n  const browseInputRef = useRef(null);\n\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = e => {\n    const files = e.target.files;\n\n    if (files.length) {\n      const newPhotos = [];\n\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i])\n        });\n      }\n\n      setPhotos(prevPhotos => [...prevPhotos, ...newPhotos]);\n    }\n\n    e.target.value = \"\";\n  };\n\n  const {\n    0: currentPnIndex,\n    1: setCurrentPnIndex\n  } = useState(0);\n  const {\n    0: showDropdown,\n    1: setShowDropdown\n  } = useState(false);\n  const {\n    0: currentSnIndex,\n    1: setCurrentSnIndex\n  } = useState(0);\n  const {\n    0: showSnDropdown,\n    1: setShowSnDropdown\n  } = useState(false);\n\n  const handleAddNewClient = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    router.push(`../client/AIS${randomNum}/addClient?from=item&itemId=${id || \"\"}`);\n  };\n\n  const handleBluefolderButton = async () => {\n    var _descriptions$selecte2;\n\n    // Check that the work order field is filled out (using workOrders[0].workOrder as current)\n    const currentWorkOrder = workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\n\n    if (!currentWorkOrder) {\n      alert(\"Please fill out the work order field before adding to BlueFolder.\");\n      return;\n    } // Build the payload to send to your proxy endpoint.\n\n\n    const payload = {\n      name: items.name,\n      pn: items.pn[0] || \"\",\n      sn: items.sn[0] || \"\",\n      status: items.status,\n      description: ((_descriptions$selecte2 = descriptions[selectedDesc]) === null || _descriptions$selecte2 === void 0 ? void 0 : _descriptions$selecte2.description) || \"\",\n      workOrder: currentWorkOrder,\n      localsn: items.localSN || \"\"\n    };\n\n    try {\n      // Replace with your ngrok URL and appropriate endpoint path (e.g., /api/bluefolder)\n      const response = await fetch(\"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      alert(\"BlueFolder service item added successfully!\");\n      console.log(\"BlueFolder result:\", result);\n    } catch (error) {\n      console.error(\"BlueFolder error:\", error);\n      alert(\"Error adding data to BlueFolder.\");\n    }\n  };\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 7\n    }\n  }, __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1452,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454,\n      columnNumber: 11\n    }\n  }, \"Missing field\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showErr,\n    onHide: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 11\n    }\n  }, Err), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showSaveModal,\n    onHide: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 13\n    }\n  }, \"Save Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 11\n    }\n  }, \"Data has been saved successfully.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1477,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showPrintModal,\n    onHide: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 13\n    }\n  }, \"Print Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 11\n    }\n  }, \"Info has been sent to print.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1489,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 13\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1499,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 13\n    }\n  }, \"Add Description\"), descriptions.map((desc, index) => __jsx(Row, {\n    key: index,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1504,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: () => selectDescription(index),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1511,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1512,\n      columnNumber: 21\n    }\n  }, desc.description || \"Description\"), __jsx(\"span\", {\n    style: {\n      borderLeft: \"1px solid #ccc\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1513,\n      columnNumber: 21\n    }\n  }, desc.date || \"Date\"))))), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(Modal, {\n    show: showWoModal,\n    onHide: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1531,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1533,\n      columnNumber: 13\n    }\n  }, \"Work Orders\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addWorkOrder,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1536,\n      columnNumber: 13\n    }\n  }, \"Add Work Order\"), workOrders.map((wo, index) => __jsx(Row, {\n    key: index,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1545,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1546,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Work Order\",\n    value: wo.workOrder,\n    onChange: e => handleWorkOrderChange(index, \"workOrder\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1547,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1557,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Date\",\n    value: wo.date,\n    onChange: e => handleWorkOrderChange(index, \"date\", e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1558,\n      columnNumber: 19\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"danger\",\n    onClick: () => removeWorkOrder(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568,\n      columnNumber: 19\n    }\n  }, \"Remove\")))), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(ClientInfoModal, {\n    show: showMachineModal,\n    handleClose: handleCloseMachineModal,\n    selectedClient: selectedClient,\n    machineOptions: machineOptions,\n    setSelectedMachine: handleSetSelectedMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1583,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1591,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 13\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596,\n      columnNumber: 13\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(client => (client.name || \"\").toLowerCase().includes(search.toLowerCase())),\n    onSelectClient: handleClientInfo,\n    onInfoClick: handleClientInfo,\n    clearSelection: () => handleClientInfo(null),\n    onAddClient: handleAddNewClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 13\n    }\n  }))), __jsx(ParentModal, {\n    show: showParentModal,\n    handleClose: handleCloseParentModal,\n    setSelectedParent: setSelectedParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1615,\n      columnNumber: 9\n    }\n  }), __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: () => setMachineSelectionModal(false),\n    setMachine: setTheMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1628,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1629,\n      columnNumber: 13\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632,\n      columnNumber: 13\n    }\n  }, !capturedPhoto && __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1634,\n      columnNumber: 17\n    }\n  }), capturedPhoto && __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1643,\n      columnNumber: 19\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1655,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: () => setCameraFacing(prev => prev === \"environment\" ? \"user\" : \"environment\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1669,\n      columnNumber: 17\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1678,\n      columnNumber: 17\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => setCapturedPhoto(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 17\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1690,\n      columnNumber: 17\n    }\n  }, \"OK\")))), __jsx(InfoModal, {\n    show: showInfoModal,\n    handleClose: handleCloseInfoModal,\n    itemName: items.name,\n    dimensions: items.length + \",\" + items.width + \",\" + items.height,\n    price: items.price,\n    freqI: freqItem,\n    freqM: machineFrequency,\n    usage: usagePastYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1698,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1709,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1714,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1715,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1716,\n      columnNumber: 17\n    }\n  }, \"Item\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1717,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1721,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 25\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: items.name,\n    onChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 25\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1730,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"pn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 25\n    }\n  }, \"Product Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1734,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.pn[currentPnIndex] || \"\",\n    onChange: e => handlePnChange(currentPnIndex, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1735,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowDropdown(!showDropdown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1748,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setAddingNewPn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 31\n    }\n  }, \"+\"))), showDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1758,\n      columnNumber: 29\n    }\n  }, pnOptions.map((pnOption, idx) => __jsx(\"div\", {\n    key: idx,\n    style: {\n      padding: \"8px\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setCurrentPnIndex(idx);\n      setShowDropdown(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1772,\n      columnNumber: 33\n    }\n  }, pnOption)))), addingNewPn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new PN\",\n    value: newPn,\n    onChange: e => setNewPn(e.target.value),\n    onBlur: handleAddNewPn,\n    onKeyDown: e => e.key === \"Enter\" && handleAddNewPn(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 27\n    }\n  })))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1802,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1803,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"sn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1804,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1805,\n      columnNumber: 25\n    }\n  }, \"Serial Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1806,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.sn[currentSnIndex] || \"\",\n    onChange: e => handleSnChange(currentSnIndex, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1808,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowSnDropdown(!showSnDropdown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1815,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1821,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setAddingNewSn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1822,\n      columnNumber: 31\n    }\n  }, \"+\"))), showSnDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1831,\n      columnNumber: 29\n    }\n  }, snOptions.map((snOption, idx) => __jsx(\"div\", {\n    key: idx,\n    style: {\n      padding: \"8px\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setCurrentSnIndex(idx);\n      setShowSnDropdown(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1845,\n      columnNumber: 33\n    }\n  }, snOption)))), addingNewSn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new SN\",\n    value: newSn,\n    onChange: e => setNewSn(e.target.value),\n    onBlur: handleAddNewSn,\n    onKeyDown: e => e.key === \"Enter\" && handleAddNewSn(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1860,\n      columnNumber: 27\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1873,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1874,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 25\n    }\n  }, \"Status\"), __jsx(Form.Select, {\n    value: items.status || \"\",\n    onChange: handleChange(\"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1880,\n      columnNumber: 27\n    }\n  }, \"Select status\"), __jsx(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 27\n    }\n  }, \"Good\"), __jsx(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1882,\n      columnNumber: 27\n    }\n  }, \"Bad\"), __jsx(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1883,\n      columnNumber: 27\n    }\n  }, \"Unknown\"))))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1891,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"OEM\",\n    value: oem,\n    onChange: e => setOem(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1892,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1899,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1900,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Modality\",\n    value: modality,\n    onChange: e => setModality(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1901,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1908,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Model\",\n    value: model,\n    onChange: e => setModel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 23\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1919,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1920,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowWoModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1921,\n      columnNumber: 23\n    }\n  }, \"Manage Work Orders\"), workOrders.length > 0 && __jsx(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 27\n    }\n  }, \"Work Order\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Most Recent Work Order\",\n    value: mostRecentWorkOrder.workOrder,\n    onChange: e => handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"workOrder\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 27\n    }\n  }), __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1944,\n      columnNumber: 27\n    }\n  }, \"Date\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Work Order Date\",\n    value: mostRecentWorkOrder.date,\n    onChange: e => handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"date\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1945,\n      columnNumber: 27\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1961,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1962,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: listDescriptions,\n    className: \"mb-2 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1963,\n      columnNumber: 25\n    }\n  }, \"List Descriptions\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter description\",\n    value: ((_descriptions$selecte3 = descriptions[selectedDesc]) === null || _descriptions$selecte3 === void 0 ? void 0 : _descriptions$selecte3.description) || \"\",\n    onChange: e => handleDescriptionChange(selectedDesc, \"description\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1970,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Control, {\n    type: \"date\",\n    value: ((_descriptions$selecte4 = descriptions[selectedDesc]) === null || _descriptions$selecte4 === void 0 ? void 0 : _descriptions$selecte4.date) || \"\",\n    onChange: e => handleDescriptionChange(selectedDesc, \"date\", e.target.value),\n    style: {\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1984,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2003,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2004,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2005,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => {\n      setMachinePick(true);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2006,\n      columnNumber: 25\n    }\n  }, \"Select From\"), selectedClientFrom && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2017,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2025,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2026,\n      columnNumber: 31\n    }\n  }, \"Selected Client (From):\"), \" \", selectedClientFrom.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2029,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowMachineModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2030,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientFrom.name), selectedMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2038,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2039,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (From):\"), \" \", selectedMachine.name), showLocalLocFrom && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowNewLocalModalFrom(true),\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2044,\n      columnNumber: 39\n    }\n  }, [newLocalFrom.region, ((_newLocalFrom$section = newLocalFrom.section) === null || _newLocalFrom$section === void 0 ? void 0 : _newLocalFrom$section.letter) + ((_newLocalFrom$section2 = newLocalFrom.section) === null || _newLocalFrom$section2 === void 0 ? void 0 : _newLocalFrom$section2.number), newLocalFrom.bin && `B${newLocalFrom.bin}`, newLocalFrom.pallet && `P${newLocalFrom.pallet}`].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalFrom,\n    onHide: () => setShowNewLocalModalFrom(false),\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2066,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2073,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2074,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (From)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2078,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientFrom,\n    showLocalLoc: showNewLocalModalFrom,\n    value: newLocalFrom,\n    onChange: setNewLocalFrom,\n    onSave: p => {\n      setNewLocalFrom(p);\n      setShowNewLocalModalFrom(false);\n    },\n    onCancel: () => setShowNewLocalModalFrom(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2079,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2110,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => {\n      setMachinePick(false);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2111,\n      columnNumber: 25\n    }\n  }, \"Select Current\"), selectedClientCurrent && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2122,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2130,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2131,\n      columnNumber: 31\n    }\n  }, \"Selected Client (Current):\"), \" \", selectedClientCurrent.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2134,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowMachineModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2135,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientCurrent.name), selectedCurrentMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2143,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2144,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (Current):\"), \" \", selectedCurrentMachine.name), showLocalLocCurrent && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowNewLocalModalCurrent(true),\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2149,\n      columnNumber: 39\n    }\n  }, [newLocalCurrent.region, ((_newLocalCurrent$sect = newLocalCurrent.section) === null || _newLocalCurrent$sect === void 0 ? void 0 : _newLocalCurrent$sect.letter) + ((_newLocalCurrent$sect2 = newLocalCurrent.section) === null || _newLocalCurrent$sect2 === void 0 ? void 0 : _newLocalCurrent$sect2.number), newLocalCurrent.bin && `B${newLocalCurrent.bin}`, newLocalCurrent.pallet && `P${newLocalCurrent.pallet}`].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalCurrent,\n    onHide: () => setShowNewLocalModalCurrent(false),\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2168,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2175,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2176,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (Current)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2180,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientCurrent,\n    showLocalLoc: showNewLocalModalCurrent,\n    value: newLocalCurrent,\n    onChange: setNewLocalCurrent,\n    onSave: p => {\n      setNewLocalCurrent(p);\n      setShowNewLocalModalCurrent(false);\n    },\n    onCancel: () => setShowNewLocalModalCurrent(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2181,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2218,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowParentModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2219,\n      columnNumber: 25\n    }\n  }, \"Select Parent\"), selectedParent && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Selected Parent\",\n    value: selectedParent.name,\n    readOnly: true,\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2227,\n      columnNumber: 27\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2239,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2240,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2241,\n      columnNumber: 23\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2242,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2243,\n      columnNumber: 27\n    }\n  }, \"Take Photo\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleBrowsePhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2249,\n      columnNumber: 27\n    }\n  }, \"Browse\"))), __jsx(Col, {\n    xs: 6,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2257,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"success\",\n    onClick: handleSendToInflow,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2258,\n      columnNumber: 25\n    }\n  }, \"Send to inFlow\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleBluefolderButton,\n    style: {\n      marginLeft: \"0.5rem\",\n      marginRight: \".5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2265,\n      columnNumber: 25\n    }\n  }, \"BlueFolder\"), __jsx(Button, {\n    variant: addToWebsite ? \"primary\" : \"outline-primary\",\n    onClick: () => setAddToWebsite(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2273,\n      columnNumber: 25\n    }\n  }, addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"), __jsx(Form.Check, {\n    type: \"checkbox\",\n    id: \"hide-checkbox\",\n    label: \"Hide\" // box is checked when we want visible = false\n    ,\n    checked: !items.visible,\n    onChange: e => {\n      // grab checked immediately\n      const isHidden = e.currentTarget.checked;\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        visible: !isHidden\n      }));\n    },\n    className: \"ms-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2280,\n      columnNumber: 25\n    }\n  }))), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: true,\n    ref: browseInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2298,\n      columnNumber: 21\n    }\n  })), photos && photos.length > 0 && __jsx(\"div\", {\n    className: \"photo-gallery\",\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"10px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2309,\n      columnNumber: 21\n    }\n  }, photos.map((photo, index) => __jsx(\"div\", {\n    key: index,\n    style: {\n      position: \"relative\",\n      width: \"100px\",\n      height: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2319,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: photo.url,\n    alt: `Photo ${index + 1}`,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2327,\n      columnNumber: 27\n    }\n  }), photo.file && __jsx(Button, {\n    variant: \"danger\",\n    size: \"sm\",\n    style: {\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      padding: \"0 5px\"\n    },\n    onClick: () => removePhoto(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2337,\n      columnNumber: 29\n    }\n  }, \"x\")))), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2356,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2357,\n      columnNumber: 21\n    }\n  }, \"Save\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleShowInfoModal,\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2364,\n      columnNumber: 21\n    }\n  }, \"More Info\"), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Back\",\n    route: \"NewSearch/mainSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2371,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    variant: \"info\",\n    onClick: handlePrint,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2376,\n      columnNumber: 21\n    }\n  }, \"Print Label\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2384,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"24px\"\n    },\n    onClick: () => setShowExtra(!showExtra),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2385,\n      columnNumber: 21\n    }\n  }, \"\\u25BC\")), __jsx(Collapse, {\n    in: showExtra,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2397,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    id: \"extra-collapse\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2398,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2399,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2400,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2401,\n      columnNumber: 27\n    }\n  }, \"Dimensions\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2402,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Length\",\n    type: \"text\",\n    value: items.length,\n    onChange: handleChange(\"length\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2405,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2411,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Width\",\n    type: \"text\",\n    value: items.width,\n    onChange: handleChange(\"width\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2412,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2418,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Height\",\n    type: \"text\",\n    value: items.height,\n    onChange: handleChange(\"height\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2419,\n      columnNumber: 29\n    }\n  }))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"trackingNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2427,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2428,\n      columnNumber: 27\n    }\n  }, \"Tracking Number\"), __jsx(Form.Control, {\n    placeholder: \"Tracking Number\",\n    type: \"text\",\n    value: items.trackingNumber,\n    onChange: handleChange(\"trackingNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2429,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2438,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2439,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2440,\n      columnNumber: 27\n    }\n  }, \"Price\"), __jsx(Form.Control, {\n    placeholder: \"Price\",\n    type: \"text\",\n    value: items.price,\n    onChange: handleChange(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2441,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"DOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2448,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2449,\n      columnNumber: 27\n    }\n  }, \"DOM\"), __jsx(Form.Control, {\n    placeholder: \"Date of Manufacture\",\n    type: \"date\",\n    value: DOM,\n    onChange: e => setDOM(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2450,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"poNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2457,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2458,\n      columnNumber: 27\n    }\n  }, \"PO Number\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"PO Number\",\n    value: items.poNumber || \"\",\n    onChange: handleChange(\"poNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2459,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2467,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"localSN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2468,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2469,\n      columnNumber: 27\n    }\n  }, \"Local SN\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Local SN\",\n    value: items.localSN || \"\",\n    onChange: handleChange(\"localSN\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2470,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"arrivalDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2477,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2478,\n      columnNumber: 27\n    }\n  }, \"Arrival Date\"), __jsx(Form.Control, {\n    placeholder: \"Enter Arrival Date\",\n    type: \"date\",\n    value: items.arrival_date,\n    onChange: e => {\n      const value = e.target.value;\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        arrival_date: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2479,\n      columnNumber: 27\n    }\n  }))))))))))), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2502,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2503,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2504,\n      columnNumber: 11\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2506,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2507,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2509,\n      columnNumber: 15\n    }\n  }) : __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2516,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2517,\n      columnNumber: 17\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2526,\n      columnNumber: 9\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2529,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: () => setCameraFacing(prev => prev === \"environment\" ? \"user\" : \"environment\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2543,\n      columnNumber: 15\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2552,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => setCapturedPhoto(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2558,\n      columnNumber: 15\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2564,\n      columnNumber: 15\n    }\n  }, \"OK\")))));\n} // Server-side rendering function\n\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.params;\n\n  try {\n    // Fetch item data from Firestore using Admin SDK\n    const itemDoc = await adminDb.collection(\"Test\").doc(id).get();\n\n    if (!itemDoc.exists) {\n      return {\n        notFound: true // This will show a 404 page\n\n      };\n    }\n\n    const itemData = itemDoc.data(); // Fetch machine data if it exists\n\n    let machineData = {};\n\n    if (itemData.Machine && itemData.Machine.path) {\n      try {\n        const machineDoc = await adminDb.doc(itemData.Machine.path).get();\n\n        if (machineDoc.exists) {\n          machineData = machineDoc.data(); // Fetch client data if it exists\n\n          if (machineData.client && machineData.client.path) {\n            const clientDoc = await adminDb.doc(machineData.client.path).get();\n\n            if (clientDoc.exists) {\n              machineData.Client = clientDoc.data().name;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    } // Serialize the item data, removing any non-serializable fields\n\n\n    const serializedItem = {\n      id,\n      name: itemData.name || \"\",\n      pn: itemData.pn || [],\n      sn: itemData.sn || [],\n      price: itemData.price || \"\",\n      status: itemData.status || \"\",\n      length: itemData.length || \"\",\n      width: itemData.width || \"\",\n      height: itemData.height || \"\",\n      poNumber: itemData.poNumber || \"\",\n      trackingNumber: itemData.trackingNumber || \"\",\n      localSN: itemData.localSN || \"\",\n      arrival_date: itemData.arrival_date || \"\",\n      visible: itemData.visible !== undefined ? itemData.visible : true // Add other item fields as needed, but ensure they're serializable\n\n    };\n    return {\n      props: {\n        initialItem: serializedItem,\n        initialMachineData: machineData\n      }\n    };\n  } catch (error) {\n    console.error(\"Error in getServerSideProps:\", error);\n    return {\n      props: {\n        error: \"Failed to load item data\"\n      }\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/item/[id]/index.js"],"names":["React","useEffect","useState","useRef","Form","Button","Card","Container","Row","Col","Modal","FormControl","Collapse","InputGroup","ButtonGroup","Link","useAuth","firebase","LoggedIn","useRouter","fetchClients","ClientTable","ClientInfoModal","ParentModal","dynamic","InfoModal","MachineSelectionModal","addServiceItem","NewLocal","InflowAPI","adminDb","buildLocalLocObject","loc","o","region","section","letter","number","bin","undefined","pallet","BarcodeScannerComponent","ssr","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","handleClick","DisplayItem","router","signOut","id","idFromRouter","query","initialId","initialItem","items","setItems","pn","Array","isArray","sn","price","status","length","width","height","poNumber","trackingNumber","localSN","arrival_date","visible","newLocalFrom","setNewLocalFrom","newLocalCurrent","setNewLocalCurrent","selectedClientFrom","setSelectedClientFrom","selectedClientCurrent","setSelectedClientCurrent","selectedMachine","setSelectedMachine","selectedCurrentMachine","setSelectedCurrentMachine","pnOptions","setPnOptions","snOptions","setSnOptions","descriptions","setDescriptions","description","date","workOrders","setWorkOrders","workOrder","clients","setClients","photos","setPhotos","show","setShow","showErr","setShowErr","Err","setErr","showDescModal","setShowDescModal","showWoModal","setShowWoModal","showClientModal","setShowClientModal","showMachineModal","setShowMachineModal","showParentModal","setShowParentModal","showCameraModal","setShowCameraModal","showSaveModal","setShowSaveModal","showPrintModal","setShowPrintModal","machineSelectionModal","setMachineSelectionModal","selectedDesc","setSelectedDesc","selectedClient","setSelectedClient","selectedParent","setSelectedParent","TheMachine","setTheMachine","machineOptions","setMachineOptions","search","setSearch","capturedPhoto","setCapturedPhoto","cameraFacing","setCameraFacing","addToWebsite","setAddToWebsite","machinePick","setMachinePick","freqItem","setFreqItem","usagePastYear","setUsagePastYear","machineFrequency","setMachineFrequency","showExtra","setShowExtra","localLocFrom","setLocalLocFrom","localLocCurrent","setLocalLocCurrent","DOM","setDOM","oem","setOem","modality","setModality","model","setModel","showInfoModal","setShowInfoModal","itemName","setItemName","machineFieldsInitialized","setMachineFieldsInitialized","showLocalModalFrom","setShowLocalModalFrom","showLocalModalCurrent","setShowLocalModalCurrent","openLocalModalFrom","closeLocalModalFrom","openLocalModalCurrent","closeLocalModalCurrent","showNewLocalModalFrom","setShowNewLocalModalFrom","showNewLocalModalCurrent","setShowNewLocalModalCurrent","formatLoc","parts","push","join","handleSendToInflow","imageUrls","map","p","url","upsertProduct","alert","err","console","error","message","setShowLocalLocFrom","toLowerCase","setShowLocalLocCurrent","fetchClientsData","clientsData","log","fetchPnSn","db","firestore","snapshot","collection","get","pnSet","Set","snSet","forEach","doc","data","add","pnArray","snArray","fetchData","resolveClientFromMachine","machineRef","setClient","setMachine","isFrom","machineDoc","exists","machineData","clientDoc","client","clientName","isSocalInterior","shouldShow","normalizedPN","normalizedSN","prev","ClientFrom","clientFromDoc","ClientCurrent","clientCurrentDoc","Machine","CurrentMachine","machineFromData","machineCurrentData","MachineFrom","MachineCurrent","nameFrom","nameCurrent","Boolean","theMachineData","OEM","Modality","Model","merged","updateMachineFields","Parent","parentDoc","fetchPhotos","checkIfAddedToWebsite","calculateItemFrequencyAndUsage","pathname","signal","getPriorityMachineField","field","theMachine","currentMachine","fromMachine","trim","currentDate","Date","oneYearAgo","setFullYear","getFullYear","itemsSnapshot","where","size","itemData","workOrderDate","fetchMachine","machineId","machinesSnapshot","docID","storageRef","storage","ref","listRef","child","res","listAll","urls","all","item","getDownloadURL","file","partsDoc","handleClose","handleShow","handleCloseErr","handleShowErr","handleCloseSaveModal","handleClosePrintModal","handleShowSaveModal","handleShowPrintModal","handleMachineSelectionModal","handleCloseDescModal","handleShowDescModal","handleCloseWoModal","handleShowWoModal","handleCloseClientModal","handleShowClientModal","handleCloseMachineModal","handleShowMachineModal","handleCloseParentModal","handleShowParentModal","handleClientInfo","clientId","clientData","machinePromises","machines","machineDocs","reorderArray","arr","selectedValue","newArr","filter","val","addingNewPn","setAddingNewPn","newPn","setNewPn","addingNewSn","setAddingNewSn","newSn","setNewSn","handlePnSelect","e","selected","target","value","updatedPn","handleSnSelect","updatedSn","handleAddNewPn","handleAddNewSn","generateCustomID","randomNum","Math","floor","random","shallowClean","obj","newObj","key","hasOwnProperty","toSend","currentUser","auth","userEmail","email","formattedItems","addedToWebsite","lastEdited","fromDetails","currentDetails","Object","keys","docId","newDocId","set","update","associatedParts","FieldValue","arrayUnion","currentMachineRef","currentMachineDoc","delete","cleanFormattedItems","uploadPhotos","showLocalLocFrom","showLocalLocCurrent","handleSetSelectedMachine","machine","i","photoRef","metadata","contentType","put","handlePrint","warn","payload","wo","local_sn","dateCreated","response","fetch","method","headers","body","JSON","stringify","result","json","includes","handleSubmit","event","preventDefault","handleChange","prevItems","addDescription","removeDescription","index","_","handleDescriptionChange","newDescriptions","desc","addWorkOrder","removeWorkOrder","handleWorkOrderChange","newWorkOrders","listDescriptions","selectDescription","handleShowCameraModal","handleCloseCameraModal","handleCapture","savePhoto","prevPhotos","URL","createObjectURL","removePhoto","mostRecentWorkOrder","reduce","latest","current","latestDate","capturePhoto","video","document","querySelector","canvas","createElement","videoWidth","videoHeight","context","getContext","drawImage","toBlob","blob","handleShowInfoModal","handleCloseInfoModal","handlePnChange","addPn","handleSnChange","addSn","browseInputRef","handleBrowsePhotos","click","handleFilesSelected","files","newPhotos","currentPnIndex","setCurrentPnIndex","showDropdown","setShowDropdown","currentSnIndex","setCurrentSnIndex","showSnDropdown","setShowSnDropdown","handleAddNewClient","handleBluefolderButton","currentWorkOrder","localsn","cursor","borderLeft","paddingLeft","marginBottom","borderRadius","position","left","transform","bottom","minHeight","maxWidth","top","right","backgroundColor","border","zIndex","maxHeight","overflowY","pnOption","idx","padding","snOption","marginTop","indexOf","marginLeft","marginRight","isHidden","currentTarget","checked","display","flexWrap","gap","photo","objectFit","textAlign","margin","textDecoration","color","fontSize","alignItems","getServerSideProps","params","itemDoc","notFound","path","Client","serializedItem","props","initialMachineData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  FormControl,\n  Collapse,\n  InputGroup,\n  ButtonGroup,\n} from \"react-bootstrap\";\n\nimport Link from \"next/link\";\nimport { useAuth } from \"../../../../context/AuthUserContext\";\nimport firebase from \"../../../../context/Firebase\";\nimport LoggedIn from \"../../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../../utils/ClientTable\";\nimport ClientInfoModal from \"../../ClientInfoModal\";\nimport ParentModal from \"../../AddItem/parentModal\";\nimport dynamic from \"next/dynamic\";\nimport InfoModal from \"../../InfoModal\";\nimport MachineSelectionModal from \"./MachineSelectionModal\";\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\n\nimport NewLocal from \"./NewLocal\";\n\n//inflow API\nimport InflowAPI from \"../../../../utils/inflowAPI\";\n\n// Import for SSR\nimport { adminDb } from \"../../../../context/FirebaseAdmin\";\n\n// === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\nfunction buildLocalLocObject(loc) {\n  const o = {};\n  if (loc.region) o.region = loc.region;\n  if (loc.section?.letter && loc.section?.number) o.section = loc.section;\n  // pick up the new singular fields, too:\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\n  return o;\n}\n\n// This will only load the component on the client-side.\nconst BarcodeScannerComponent = dynamic(\n  () => import(\"react-qr-barcode-scanner\"),\n  { ssr: false }\n);\n\n// Simulates a network request delay.\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\n// Custom LoadingButton component.\nfunction LoadingButton({ type, name, route }) {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return (\n    <Link href={`/${route}`}>\n      <a\n        className={`btn btn-${type}`}\n        disabled={isLoading}\n        onClick={!isLoading ? handleClick : null}\n      >\n        {isLoading ? \"Loading…\" : name}\n      </a>\n    </Link>\n  );\n}\n\nexport default function DisplayItem() {\n  const router = useRouter();\n  const { signOut } = useAuth();\n  // const { id } = router.query;\n  const { id: idFromRouter } = router.query;\n  const initialId = initialItem?.id || idFromRouter;\n\n  const [items, setItems] = useState({\n\n    name: initialItem?.name || \"\",\n    pn: Array.isArray(initialItem?.pn) ? initialItem.pn : (initialItem?.pn ? [initialItem.pn] : []),\n    sn: Array.isArray(initialItem?.sn) ? initialItem.sn : (initialItem?.sn ? [initialItem.sn] : []),\n\n    price: \"\",\n    status: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    poNumber: \"\",\n    trackingNumber: \"\",\n    localSN: initialItem?.localSN || \"\",\n    arrival_date: initialItem?.arrival_date || \"\",\n    visible: initialItem?.visible ?? true,\n  });\n\n  const [newLocalFrom, setNewLocalFrom] = useState({\n    region: \"\",\n    section: { letter: \"\", number: \"\" },\n    bin: \"\",\n    pallet: \"\",\n  });\n  const [newLocalCurrent, setNewLocalCurrent] = useState({\n    region: \"\",\n    section: { letter: \"\", number: \"\" },\n    bin: \"\",\n    pallet: \"\",\n  });\n\n  // New states for separate client selections:\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\n\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [selectedCurrentMachine, setSelectedCurrentMachine] = useState(null);\n\n  // whenever you pick a new “From” client or machine, clear the old From-loc:\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom, selectedMachine]);\n  // const didMountFrom = useRef(false);\n\n  // useEffect(() => {\n  //   if (!didMountFrom.current) {\n  //     // first time through (the data-load phase), don’t clear\n  //     didMountFrom.current = true;\n  //     return;\n  //   }\n  //   // thereafter, when the user picks a new client or machine, clear:\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  //   setLocalLocFrom(\"\");\n  // }, [selectedClientFrom, selectedMachine]);\n\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const [didFetch, setDidFetch] = useState(false);\n\n  // useEffect(() => {\n  //   if (!didFetch) {\n  //     // we’re in the data-load phase, skip clearing\n  //     setDidFetch(true);\n  //     return;\n  //   }\n  //   // only clear on subsequent user changes:\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n  // These arrays will be populated from Firebase.\n  const [pnOptions, setPnOptions] = useState([]);\n  const [snOptions, setSnOptions] = useState([]);\n\n  const [descriptions, setDescriptions] = useState([\n    { description: \"\", date: \"\" },\n  ]);\n  const [workOrders, setWorkOrders] = useState([{ workOrder: \"\", date: \"\" }]);\n  const [clients, setClients] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showErr, setShowErr] = useState(false);\n  const [Err, setErr] = useState(\"N/A\");\n  const [showDescModal, setShowDescModal] = useState(false);\n  const [showWoModal, setShowWoModal] = useState(false);\n  const [showClientModal, setShowClientModal] = useState(false);\n  const [showMachineModal, setShowMachineModal] = useState(false);\n  const [showParentModal, setShowParentModal] = useState(false);\n  const [showCameraModal, setShowCameraModal] = useState(false);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [showPrintModal, setShowPrintModal] = useState(false);\n  const [machineSelectionModal, setMachineSelectionModal] = useState(false);\n  const [selectedDesc, setSelectedDesc] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [TheMachine, setTheMachine] = useState(null);\n  const [machineOptions, setMachineOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\n  const [cameraFacing, setCameraFacing] = useState(\"environment\");\n  const [addToWebsite, setAddToWebsite] = useState(false);\n  const [machinePick, setMachinePick] = useState(false);\n  const [freqItem, setFreqItem] = useState(0);\n  const [usagePastYear, setUsagePastYear] = useState(0);\n  const [machineFrequency, setMachineFrequency] = useState(0);\n  // State for the extra (dimensions/price/DOM/PO Number) section.\n  const [showExtra, setShowExtra] = useState(false);\n  // State for the local warehouse location inputs.\n  const [localLocFrom, setLocalLocFrom] = useState(\"\");\n  const [localLocCurrent, setLocalLocCurrent] = useState(\"\");\n\n  // New state for DOM (Date of Manufacture)\n  const [DOM, setDOM] = useState(\"\");\n  // New state for OEM, Modality, and Model.\n  const [oem, setOem] = useState(\"\");\n  const [modality, setModality] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n\n  // More info modal state.\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n\n  const [machineFieldsInitialized, setMachineFieldsInitialized] =\n    useState(false);\n\n  // near the top of DisplayItem()\n  const [showLocalModalFrom, setShowLocalModalFrom] = useState(false);\n  const [showLocalModalCurrent, setShowLocalModalCurrent] = useState(false);\n\n  const openLocalModalFrom = () => setShowLocalModalFrom(true);\n  const closeLocalModalFrom = () => setShowLocalModalFrom(false);\n  const openLocalModalCurrent = () => setShowLocalModalCurrent(true);\n  const closeLocalModalCurrent = () => setShowLocalModalCurrent(false);\n\n  // at the top of DisplayItem()\n  const [showNewLocalModalFrom, setShowNewLocalModalFrom] = useState(false);\n  const [showNewLocalModalCurrent, setShowNewLocalModalCurrent] =\n    useState(false);\n\n  function formatLoc(loc) {\n    if (!loc) return \"\";\n    const parts = [];\n    if (loc.region) parts.push(loc.region);\n    if (loc.section?.letter && loc.section?.number)\n      parts.push(`${loc.section.letter}${loc.section.number}`);\n    if (loc.bin) parts.push(`B${loc.bin}`);\n    if (loc.pallet) parts.push(`P${loc.pallet}`);\n    return parts.join(\"–\");\n  }\n\n  // when the From-client changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom]);\n\n  // // when the From-machine changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedMachine]);\n\n  // same for Current:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n\n  const handleSendToInflow = async () => {\n    try {\n      const name = items.name;\n      const description = descriptions[selectedDesc]?.description || \"\";\n      // gather every photo URL from Firebase Storage\n      const imageUrls = photos.map((p) => p.url);\n      await InflowAPI.upsertProduct({ name, description, imageUrls });\n      alert(\"Sent to inFlow successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Error sending to inFlow: \" + err.message);\n    }\n  };\n\n  // const [storedMachine, setStoredMachine] = useState(null);\n\n  // useEffect(() => {\n  //   // once any of these three change, re-merge:\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\n  //     const merged = updateMachineFields(\n  //       TheMachine,\n  //       selectedCurrentMachine,\n  //       selectedMachine\n  //     );\n  //     setOem(merged.oem);\n  //     setModality(merged.modality);\n  //     setModel(merged.model);\n  //   }\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\n\n  // whenever the “From” client changes:\n  useEffect(() => {\n    setShowLocalLocFrom(\n      selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\n    );\n  }, [selectedClientFrom]);\n\n  // whenever the “Current” client changes:\n  useEffect(() => {\n    setShowLocalLocCurrent(\n      selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\n    );\n  }, [selectedClientCurrent]);\n\n  // Fetch clients data.\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n    fetchClientsData();\n  }, []);\n\n  // Fetch PN and SN options from Firebase.\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      const pnArray = [...pnSet];\n      const snArray = [...snSet];\n      setPnOptions(pnArray);\n      setSnOptions(snArray);\n    }\n    fetchPnSn();\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      fetchData();\n    }\n  }, [id]);\n\n  async function resolveClientFromMachine(\n    machineRef,\n    setClient,\n    setMachine,\n    isFrom = true\n  ) {\n    const machineDoc = await machineRef.get();\n    if (machineDoc.exists) {\n      const machineData = machineDoc.data();\n      setMachine({ id: machineDoc.id, ...machineData });\n\n      // Determine if the machine is \"interior socal\"\n      // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\n      // if (isSocalInterior) {\n      //   if (isFrom) {\n      //     setShowLocalLocFrom(true);\n      //   } else {\n      //     setShowLocalLocCurrent(true);\n      //   }\n      // } else {\n      // Optionally clear the flag if it is not \"interior socal\"\n      // if (isFrom) {\n      //   setShowLocalLocFrom(false);\n      // } else {\n      //   setShowLocalLocCurrent(false);\n      // }\n      // }\n      // new: fetch client name and combine both checks\n      const clientDoc =\n        machineData.client && typeof machineData.client.get === \"function\"\n          ? await machineData.client.get()\n          : null;\n      const clientName =\n        clientDoc && clientDoc.exists ? clientDoc.data().name : null;\n      const isSocalInterior =\n        machineData.name?.toLowerCase() === \"interior socal\";\n      const shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\n\n      if (isFrom) {\n        setShowLocalLocFrom(shouldShow);\n      } else {\n        setShowLocalLocCurrent(shouldShow);\n      }\n\n      if (machineData.client && typeof machineData.client.get === \"function\") {\n        const clientDoc = await machineData.client.get();\n        if (clientDoc.exists) {\n          setClient({ id: clientDoc.id, ...clientDoc.data() });\n        }\n      }\n    }\n  }\n\n  const fetchData = async () => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Test\").doc(id).get();\n    if (doc.exists) {\n      console.log(\"test\");\n      const data = doc.data();\n      const normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\n      const normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\n      setItems({\n        ...data,\n        pn: normalizedPN,\n        sn: normalizedSN,\n      });\n      setDescriptions(data.descriptions || []);\n      setWorkOrders(data.workOrders || []);\n      if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\n      if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\n      if (data.DOM) {\n        setDOM(data.DOM);\n      }\n\n      // …after you do setItems, setDescriptions, etc.\n\n      // load the “newLocal” maps\n      if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\n      if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent);\n\n      // Load PO Number if it exists.\n      if (data.poNumber) {\n        setItems((prev) => ({ ...prev, poNumber: data.poNumber }));\n      }\n\n      if (data.ClientFrom) {\n        const clientFromDoc = await data.ClientFrom.get();\n        if (clientFromDoc.exists) {\n          setSelectedClientFrom({\n            id: clientFromDoc.id,\n            ...clientFromDoc.data(),\n          });\n        }\n      }\n      if (data.ClientCurrent) {\n        const clientCurrentDoc = await data.ClientCurrent.get();\n        if (clientCurrentDoc.exists) {\n          setSelectedClientCurrent({\n            id: clientCurrentDoc.id,\n            ...clientCurrentDoc.data(),\n          });\n        }\n      }\n\n      if (\n        !data.ClientFrom &&\n        data.Machine &&\n        typeof data.Machine.get === \"function\"\n      ) {\n        console.log(\n          \"Entered resolveClientFromMachine for Machine (old style for From)\"\n        );\n        await resolveClientFromMachine(\n          data.Machine,\n          setSelectedClientFrom,\n          setSelectedMachine,\n          true\n        );\n      }\n      if (\n        !data.ClientCurrent &&\n        data.CurrentMachine &&\n        typeof data.CurrentMachine.get === \"function\"\n      ) {\n        console.log(\n          \"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\"\n        );\n        await resolveClientFromMachine(\n          data.CurrentMachine,\n          setSelectedClientCurrent,\n          setSelectedCurrentMachine,\n          false\n        );\n      }\n\n      let machineFromData = null;\n      let machineCurrentData = null;\n\n      if (data.MachineFrom) {\n        const doc = await data.MachineFrom.get();\n        machineFromData = doc.exists ? doc.data() : null;\n        setSelectedMachine({ id: doc.id, ...doc.data() });\n      }\n      if (data.MachineCurrent) {\n        const doc = await data.MachineCurrent.get();\n        machineCurrentData = doc.exists ? doc.data() : null;\n        setSelectedCurrentMachine({ id: doc.id, ...doc.data() });\n      }\n      const nameFrom = machineFromData?.name?.toLowerCase();\n      const nameCurrent = machineCurrentData?.name?.toLowerCase();\n\n      // If the machine’s name is “interior socal”, show that branch:\n      // setShowLocalLocFrom(nameFrom === \"interior socal\");\n      // // Or if your Firestore already has a value for localLocFrom, show it anyway:\n      // if (data.localLocFrom) setShowLocalLocFrom(true);\n\n      // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\n      // if (data.localLocCurrent) setShowLocalLocCurrent(true);\n      // new: combine machine-name OR client-name check, keep existing-data\n      setShowLocalLocFrom(\n        nameFrom === \"interior socal\" ||\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\" ||\n          Boolean(data.localLocFrom)\n      );\n      setShowLocalLocCurrent(\n        nameCurrent === \"interior socal\" ||\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\" ||\n          Boolean(data.localLocCurrent)\n      );\n\n      const theMachineData = data.TheMachine || null;\n\n      setTheMachine(theMachineData);\n      if (theMachineData) {\n        // pull both variants, prefer lowercase if it exists\n        const OEM = theMachineData.oem ?? theMachineData.OEM;\n        const Modality = theMachineData.modality ?? theMachineData.Modality;\n        const Model = theMachineData.model ?? theMachineData.Model;\n        setTheMachine({ ...theMachineData, OEM, Modality, Model });\n      }\n      // setStoredMachine(theMachineData);\n\n      // **right here** merge from the three sources you just fetched:\n      const merged = updateMachineFields(\n        theMachineData,\n        machineCurrentData,\n        machineFromData\n      );\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n\n      console.log(\n        \"SelectedMachine:\",\n        selectedMachine,\n        \"SelectedCurrentMachine:\",\n        selectedCurrentMachine\n      );\n      // Show local loc inputs if applicable\n      // if (\n      //   selectedMachine &&\n      //   selectedMachine.name &&\n      //   selectedMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocFrom(true);\n      // }\n      // if (\n      //   selectedCurrentMachine &&\n      //   selectedCurrentMachine.name &&\n      //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\n      // ) {\n      //   setShowLocalLocCurrent(true);\n      // }\n\n      if (data.Parent) {\n        const parentDoc = await data.Parent.get();\n        setSelectedParent({ id: parentDoc.id, ...parentDoc.data() });\n      }\n\n      // Priority auto‑population of machine fields.\n      // const updatedFields = updateMachineFields(storedMachine, selectedCurrentMachine, selectedMachine);\n      // // console.log(\"Updated machine fields:\", updatedFields);\n      // setOem(updatedFields.oem);\n      // setModality(updatedFields.modality);\n      // setModel(updatedFields.model);\n\n      await fetchPhotos(id);\n      await checkIfAddedToWebsite(id);\n      await calculateItemFrequencyAndUsage(data.pn);\n    } else {\n      router.push({\n        pathname: \"../AddItem/NewItem\",\n        query: { signal: id },\n      });\n    }\n  };\n\n  // Returns the value for a given field from the highest-priority source.\n  function getPriorityMachineField(\n    field,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    console.log(\"the machine: \", theMachine, \"field: \", field);\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field] !== \"N/A\" &&\n      theMachine[field].trim() !== \"\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field] !== \"N/A\" &&\n      currentMachine[field].trim() !== \"\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field] !== \"N/A\" &&\n      fromMachine[field].trim() !== \"\"\n    ) {\n      return fromMachine[field];\n    }\n    return \"\";\n  }\n\n  // Returns an object with updated OEM, modality, and model fields.\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getPriorityMachineField(\n        \"OEM\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      modality: getPriorityMachineField(\n        \"Modality\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      model: getPriorityMachineField(\n        \"Model\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n    };\n  }\n\n  const calculateItemFrequencyAndUsage = async (pn) => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n\n    const normalizedPN = pn !== undefined ? pn : \"\";\n    const itemsSnapshot = await db\n      .collection(\"Test\")\n      .where(\"pn\", \"==\", normalizedPN)\n      .get();\n\n    setFreqItem(itemsSnapshot.size);\n\n    let usagePastYear = 0;\n    itemsSnapshot.forEach((doc) => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach((workOrder) => {\n        const workOrderDate = new Date(workOrder.date);\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  };\n\n  const fetchMachine = async (machineId) => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData);\n      // re-merge all three sources with correct priority:\n      const merged = updateMachineFields(\n        machineData,\n        selectedCurrentMachine,\n        selectedMachine\n      );\n      setOem(merged.oem);\n      setModality(merged.modality);\n      setModel(merged.model);\n      const machinesSnapshot = await db\n        .collection(\"Machine\")\n        .where(\"Model\", \"==\", machineData.Model || machineData.model)\n        .get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  };\n\n  const fetchPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    const listRef = storageRef.child(`Parts/${docID}`);\n    try {\n      const res = await listRef.listAll();\n      const urls = await Promise.all(\n        res.items.map((item) => item.getDownloadURL())\n      );\n      console.log(\"Fetched photo URLs:\", urls);\n      setPhotos(urls.map((url) => ({ url, file: null })));\n    } catch (error) {\n      console.error(\"Error fetching photos: \", error);\n    }\n  };\n\n  const checkIfAddedToWebsite = async (docID) => {\n    const db = firebase.firestore();\n    const partsDoc = await db.collection(\"Parts\").doc(docID).get();\n    if (partsDoc.exists) {\n      setAddToWebsite(true);\n    }\n  };\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseErr = () => setShowErr(false);\n  const handleShowErr = () => setShowErr(true);\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n  const handleClosePrintModal = () => setShowPrintModal(false);\n  const handleShowSaveModal = () => setShowSaveModal(true);\n  const handleShowPrintModal = () => setShowPrintModal(true);\n  const handleMachineSelectionModal = () => setMachineSelectionModal(false);\n  const handleCloseDescModal = () => setShowDescModal(false);\n  const handleShowDescModal = () => setShowDescModal(true);\n  const handleCloseWoModal = () => setShowWoModal(false);\n  const handleShowWoModal = () => setShowWoModal(true);\n  const handleCloseClientModal = () => setShowClientModal(false);\n  const handleShowClientModal = () => setShowClientModal(true);\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n  const handleCloseParentModal = () => setShowParentModal(false);\n  const handleShowParentModal = () => setShowParentModal(true);\n\n  // When a client is selected from the client table.\n  const handleClientInfo = async (clientId) => {\n    // Clear any previously selected machine and local loc info for this branch.\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n    if (clientDoc.exists) {\n      const clientData = { id: clientDoc.id, ...clientDoc.data() };\n      if (machinePick) {\n        setSelectedClientFrom(clientData);\n      } else {\n        setSelectedClientCurrent(clientData);\n      }\n      // after setting selectedClientFrom/Current:\n      if (clientData.name === \"SoCalWarehouse\") {\n        if (machinePick) setShowLocalLocFrom(true);\n        else setShowLocalLocCurrent(true);\n      }\n      // Fetch machines for this client:\n      const machinePromises = clientData.machines.map((machineRef) =>\n        machineRef.get()\n      );\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map((machineDoc) => ({\n        id: machineDoc.id,\n        ...machineDoc.data(),\n      }));\n      setMachineOptions(machines);\n      // Close the client modal\n      handleCloseClientModal();\n    }\n  };\n\n  // Reordering function for dropdowns.\n  const reorderArray = (arr, selectedValue) => {\n    const newArr = arr.filter((val) => val !== selectedValue);\n    return [selectedValue, ...newArr];\n  };\n\n  const [addingNewPn, setAddingNewPn] = useState(false);\n  const [newPn, setNewPn] = useState(\"\");\n  const [addingNewSn, setAddingNewSn] = useState(false);\n  const [newSn, setNewSn] = useState(\"\");\n\n  const handlePnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return { ...prev, pn: updatedPn };\n    });\n  };\n\n  const handleSnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return { ...prev, sn: updatedSn };\n    });\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  // Generate custom document ID if needed.\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  function shallowClean(obj) {\n    const newObj = {};\n    for (const key in obj) {\n      console.log(key, obj[key]);\n      if (obj.hasOwnProperty(key)) {\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\n      }\n    }\n    return newObj;\n  }\n\n  async function toSend() {\n    const db = firebase.firestore();\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\";\n\n    // Always use the current state values for OEM, modality, and model.\n    const machineData = {\n      ...(TheMachine || {}),\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    const formattedItems = { ...items, descriptions, workOrders };\n    // Remove any unused fields.\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite;\n\n    // NEW: Add the user's email under the field \"user\"\n    formattedItems.lastEdited = userEmail;\n\n    // Clean pn and sn arrays to replace undefined values with an empty string.\n    formattedItems.pn = (items.pn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n    formattedItems.sn = (items.sn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n\n    const fromDetails = buildLocalLocObject(newLocalFrom);\n    const currentDetails = buildLocalLocObject(newLocalCurrent);\n\n    console.log(\n      \"From Details: \" +\n        fromDetails.region +\n        \" \" +\n        fromDetails.section?.letter +\n        fromDetails.section?.number +\n        \" \" +\n        fromDetails.bin +\n        \" \" +\n        fromDetails.pallet\n    );\n    console.log(\n      \"Current Details: \" +\n        currentDetails.region +\n        \" \" +\n        currentDetails.section?.letter +\n        currentDetails.section?.number +\n        \" \" +\n        currentDetails.bin +\n        \" \" +\n        currentDetails.pallet\n    );\n\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n      formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      console.log(\"entered empty fromDetails else\");\n      formattedItems.localLocFrom = \"\";\n      formattedItems.newLocalFrom = {};\n    }\n\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n      formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\n    } else {\n      // all fields empty — force an empty string and remove any stray map\n      formattedItems.localLocCurrent = \"\";\n      formattedItems.newLocalCurrent = {};\n    }\n\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db\n        .collection(\"Machine\")\n        .doc(selectedMachine.id);\n    }\n\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db\n        .collection(\"Machine\")\n        .doc(selectedCurrentMachine.id);\n    }\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    }\n\n    // NEW: Set separate client references.\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db\n        .collection(\"Client\")\n        .doc(selectedClientFrom.id);\n    }\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db\n        .collection(\"Client\")\n        .doc(selectedClientCurrent.id);\n    }\n\n    // Only attach the richer “newLocal” map when the user actually filled something in\n    if (Object.keys(fromDetails).length) {\n      formattedItems.newLocalFrom = fromDetails;\n    }\n    if (Object.keys(currentDetails).length) {\n      formattedItems.newLocalCurrent = currentDetails;\n    }\n\n    let docId = id;\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : docId;\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n          // Delete the old document.\n          await db.collection(\"Test\").doc(docId).delete();\n          // Set docId to the new document ID.\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db\n            .collection(\"Machine\")\n            .doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n      }\n      // Upload any new photos to Firebase Storage.\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\");\n\n      // Redirect to the new URL using the new document id.\n      router.push(`/NewSearch/item/${docId}`);\n\n      // Optionally, you can also show a save confirmation modal:\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  }\n\n  // Additional state for local warehouse location inputs.\n  const [showLocalLocFrom, setShowLocalLocFrom] = useState(false);\n  const [showLocalLocCurrent, setShowLocalLocCurrent] = useState(false);\n\n  // When a machine is selected from the modal.\n  const handleSetSelectedMachine = (machine) => {\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    const isSocalInterior = machine.name?.toLowerCase() === \"interior socal\";\n\n    if (machinePick) {\n      setSelectedMachine({ id: machine.id, name: machine.name });\n      setShowLocalLocFrom(\n        isSocalInterior ||\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\n      );\n    } else {\n      setSelectedCurrentMachine({ id: machine.id, name: machine.name });\n      setShowLocalLocCurrent(\n        isSocalInterior ||\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\n      );\n    }\n    fetchMachine(machine.id);\n    // Close the machine modal (assuming you're using showMachineModal to control it)\n    setShowMachineModal(false);\n  };\n\n  const uploadPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(\n          `Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`\n        );\n        const metadata = {\n          contentType: \"image/png\",\n        };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  };\n\n  // Function to handle printing the label.\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    }\n\n    let clientName = \"\";\n\n    // Attempt to fetch client name from the Machine document reference.\n    if (items.Machine && typeof items.Machine.get === \"function\") {\n      try {\n        const machineDoc = await items.Machine.get();\n        if (machineDoc.exists) {\n          const machineData = machineDoc.data();\n          if (\n            machineData.client &&\n            typeof machineData.client.get === \"function\"\n          ) {\n            const clientDoc = await machineData.client.get();\n            if (clientDoc.exists) {\n              clientName = clientDoc.data().name || \"\";\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine or client:\", error);\n      }\n    } else {\n      console.warn(\"No Machine reference available in the item\");\n    }\n    console.log(clientName, \":\", items.client);\n    // Fallback: if no client name was found, check items.client.\n    if (!clientName && items.client) {\n      if (typeof items.client.get === \"function\") {\n        try {\n          const clientDoc = await items.client.get();\n          if (clientDoc.exists) {\n            clientName = clientDoc.data().name || \"\";\n          }\n        } catch (error) {\n          console.error(\"Error fetching client from items.client:\", error);\n        }\n      } else {\n        clientName = items.client;\n      }\n    }\n    console.log(\"descriptions:\", descriptions[selectedDesc]);\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      client: clientName,\n      status: items.status,\n      local_sn: id,\n      descriptions: [\n        descriptions[selectedDesc] || { description: \"\", date: \"\" },\n      ],\n      date: items.dateCreated || \"\",\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model,\n      poNumber: items.poNumber,\n      arrival_date: items.arrival_date, // NEW: Include arrival_date\n    };\n\n    console.log(\"Payload for printing:\", payload);\n    try {\n      const response = await fetch(\n        \"https://9d70-174-76-22-138.ngrok-free.app/print-label\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      console.log(\"Print result:\", result.status);\n\n      if (result.status.includes(\"successfully.\")) {\n        handleShowPrintModal();\n      } else {\n        console.error(\"Error printing label:\", result.error);\n      }\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    // Only check that the Name field is filled out.\n    if (!items.name) {\n      handleShow(); // This shows the \"missing field\" modal.\n    } else {\n      toSend();\n    }\n  }\n\n  // Handlers for input changes.\n  const handleChange = (field) => (event) => {\n    const value = event.target ? event.target.value : event.value;\n    setItems((prevItems) => ({ ...prevItems, [field]: value }));\n  };\n\n  const addDescription = () => {\n    setDescriptions([...descriptions, { description: \"\", date: \"\" }]);\n  };\n\n  const removeDescription = (index) => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) =>\n      i === index ? { ...desc, [field]: value } : desc\n    );\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, { workOrder: \"\", date: \"\" }]);\n  };\n\n  const removeWorkOrder = (index) => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) =>\n      i === index ? { ...wo, [field]: value } : wo\n    );\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = (index) => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const savePhoto = () => {\n    setPhotos((prevPhotos) => [\n      ...prevPhotos,\n      { file: capturedPhoto, url: URL.createObjectURL(capturedPhoto) },\n    ]);\n    setCapturedPhoto(null);\n    handleCloseCameraModal();\n  };\n\n  const removePhoto = (index) => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  };\n\n  const mostRecentWorkOrder =\n    workOrders && workOrders.length > 0\n      ? workOrders.reduce((latest, current) => {\n          const latestDate = new Date(latest.date);\n          const currentDate = new Date(current.date);\n          return currentDate > latestDate ? current : latest;\n        }, workOrders[0])\n      : {};\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob) => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handlePnChange = (index, value) => {\n    setItems((prev) => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return { ...prev, pn: newPn };\n    });\n  };\n\n  const addPn = () => {\n    setItems((prev) => ({\n      ...prev,\n      pn: [...prev.pn, \"\"],\n    }));\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems((prev) => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return { ...prev, sn: newSn };\n    });\n  };\n\n  const addSn = () => {\n    setItems((prev) => ({\n      ...prev,\n      sn: [...prev.sn, \"\"],\n    }));\n  };\n\n  const browseInputRef = useRef(null);\n\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = (e) => {\n    const files = e.target.files;\n    if (files.length) {\n      const newPhotos = [];\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i]),\n        });\n      }\n      setPhotos((prevPhotos) => [...prevPhotos, ...newPhotos]);\n    }\n    e.target.value = \"\";\n  };\n\n  const [currentPnIndex, setCurrentPnIndex] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentSnIndex, setCurrentSnIndex] = useState(0);\n  const [showSnDropdown, setShowSnDropdown] = useState(false);\n\n  const handleAddNewClient = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    router.push(\n      `../client/AIS${randomNum}/addClient?from=item&itemId=${id || \"\"}`\n    );\n  };\n\n  const handleBluefolderButton = async () => {\n    // Check that the work order field is filled out (using workOrders[0].workOrder as current)\n    const currentWorkOrder =\n      workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\n    if (!currentWorkOrder) {\n      alert(\n        \"Please fill out the work order field before adding to BlueFolder.\"\n      );\n      return;\n    }\n\n    // Build the payload to send to your proxy endpoint.\n    const payload = {\n      name: items.name,\n      pn: items.pn[0] || \"\",\n      sn: items.sn[0] || \"\",\n      status: items.status,\n      description: descriptions[selectedDesc]?.description || \"\",\n      workOrder: currentWorkOrder,\n      localsn: items.localSN || \"\",\n    };\n\n    try {\n      // Replace with your ngrok URL and appropriate endpoint path (e.g., /api/bluefolder)\n      const response = await fetch(\n        \"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      alert(\"BlueFolder service item added successfully!\");\n      console.log(\"BlueFolder result:\", result);\n    } catch (error) {\n      console.error(\"BlueFolder error:\", error);\n      alert(\"Error adding data to BlueFolder.\");\n    }\n  };\n\n  return (\n    <LoggedIn>\n      <div>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Error</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Missing field</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showErr} onHide={handleCloseErr}>\n          <Modal.Header closeButton>\n            <Modal.Title>Error</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{Err}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseErr}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showSaveModal} onHide={handleCloseSaveModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Save Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Data has been saved successfully.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseSaveModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal show={showPrintModal} onHide={handleClosePrintModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Print Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Info has been sent to print.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleClosePrintModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={showDescModal} onHide={handleCloseDescModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Descriptions</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n              Add Description\n            </Button>\n            {descriptions.map((desc, index) => (\n              <Row key={index} className=\"mb-3\">\n                <Button\n                  variant=\"outline-secondary\"\n                  className=\"w-100\"\n                  onClick={() => selectDescription(index)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <div className=\"d-flex justify-content-between\">\n                    <span>{desc.description || \"Description\"}</span>\n                    <span\n                      style={{\n                        borderLeft: \"1px solid #ccc\",\n                        paddingLeft: \"10px\",\n                      }}\n                    >\n                      {desc.date || \"Date\"}\n                    </span>\n                  </div>\n                </Button>\n              </Row>\n            ))}\n            <Button variant=\"primary\" onClick={handleCloseDescModal}>\n              OK\n            </Button>\n          </Modal.Body>\n        </Modal>\n\n        <Modal show={showWoModal} onHide={handleCloseWoModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Work Orders</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Button\n              variant=\"primary\"\n              className=\"mb-3\"\n              onClick={addWorkOrder}\n              style={{ marginBottom: \"1rem\" }}\n            >\n              Add Work Order\n            </Button>\n            {workOrders.map((wo, index) => (\n              <Row key={index} className=\"mb-3\">\n                <Col>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Work Order\"\n                    value={wo.workOrder}\n                    onChange={(e) =>\n                      handleWorkOrderChange(index, \"workOrder\", e.target.value)\n                    }\n                    style={{ marginBottom: \"0.5rem\" }}\n                  />\n                </Col>\n                <Col>\n                  <Form.Control\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={wo.date}\n                    onChange={(e) =>\n                      handleWorkOrderChange(index, \"date\", e.target.value)\n                    }\n                  />\n                </Col>\n                <Col>\n                  <Button\n                    variant=\"danger\"\n                    onClick={() => removeWorkOrder(index)}\n                  >\n                    Remove\n                  </Button>\n                </Col>\n              </Row>\n            ))}\n            <Button variant=\"primary\" onClick={handleCloseWoModal}>\n              OK\n            </Button>\n          </Modal.Body>\n        </Modal>\n\n        <ClientInfoModal\n          show={showMachineModal}\n          handleClose={handleCloseMachineModal}\n          selectedClient={selectedClient}\n          machineOptions={machineOptions}\n          setSelectedMachine={handleSetSelectedMachine}\n        />\n\n        <Modal show={showClientModal} onHide={handleCloseClientModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Select Client</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search by name\"\n              className=\"mb-3\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n            <ClientTable\n              clients={clients.filter((client) =>\n                (client.name || \"\").toLowerCase().includes(search.toLowerCase())\n              )}\n              onSelectClient={handleClientInfo}\n              onInfoClick={handleClientInfo}\n              clearSelection={() => handleClientInfo(null)}\n              onAddClient={handleAddNewClient}\n            />\n          </Modal.Body>\n        </Modal>\n\n        <ParentModal\n          show={showParentModal}\n          handleClose={handleCloseParentModal}\n          setSelectedParent={setSelectedParent}\n        />\n\n        <MachineSelectionModal\n          show={machineSelectionModal}\n          handleClose={() => setMachineSelectionModal(false)}\n          setMachine={setTheMachine}\n        />\n\n        <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Take a Photo</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"camera\">\n              {!capturedPhoto && (\n                <BarcodeScannerComponent\n                  width=\"100%\"\n                  height={300}\n                  onUpdate={handleCapture}\n                  facingMode={cameraFacing}\n                />\n              )}\n              {capturedPhoto && (\n                <div className=\"photo-preview\">\n                  <img\n                    src={URL.createObjectURL(capturedPhoto)}\n                    alt=\"captured\"\n                    style={{ width: \"100%\" }}\n                  />\n                </div>\n              )}\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            {!capturedPhoto ? (\n              <>\n                <Button\n                  onClick={capturePhoto}\n                  style={{\n                    borderRadius: \"50%\",\n                    width: \"60px\",\n                    height: \"60px\",\n                    position: \"absolute\",\n                    left: \"50%\",\n                    transform: \"translateX(-50%)\",\n                    bottom: \"10px\",\n                  }}\n                >\n                  📷\n                </Button>\n                <Button\n                  onClick={() =>\n                    setCameraFacing((prev) =>\n                      prev === \"environment\" ? \"user\" : \"environment\"\n                    )\n                  }\n                >\n                  Flip Camera\n                </Button>\n                <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                  Cancel\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setCapturedPhoto(null)}\n                >\n                  Retake\n                </Button>\n                <Button variant=\"primary\" onClick={savePhoto}>\n                  OK\n                </Button>\n              </>\n            )}\n          </Modal.Footer>\n        </Modal>\n\n        <InfoModal\n          show={showInfoModal}\n          handleClose={handleCloseInfoModal}\n          itemName={items.name}\n          dimensions={items.length + \",\" + items.width + \",\" + items.height}\n          price={items.price}\n          freqI={freqItem}\n          freqM={machineFrequency}\n          usage={usagePastYear}\n        />\n\n        <Container\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <div className=\"w-100\" style={{ maxWidth: \"600px\" }}>\n            <Card className=\"align-items-center justify-content-center\">\n              <Card.Body>\n                <h2 className=\"text-center mb-4\">Item</h2>\n                <Form onSubmit={handleSubmit}>\n                  {/* Row for Name and PN */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={items.name}\n                          onChange={handleChange(\"name\")}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"pn\">\n                        <Form.Label>Product Number</Form.Label>\n                        <div style={{ position: \"relative\" }}>\n                          <InputGroup>\n                            <Form.Control\n                              type=\"text\"\n                              value={items.pn[currentPnIndex] || \"\"}\n                              onChange={(e) =>\n                                handlePnChange(currentPnIndex, e.target.value)\n                              }\n                            />\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowDropdown(!showDropdown)}\n                            >\n                              &#9662;\n                            </Button>\n                            <InputGroup.Text>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setAddingNewPn(true)}\n                              >\n                                +\n                              </Button>\n                            </InputGroup.Text>\n                          </InputGroup>\n                          {showDropdown && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                top: \"100%\",\n                                left: 0,\n                                right: 0,\n                                backgroundColor: \"white\",\n                                border: \"1px solid #ccc\",\n                                zIndex: 1000,\n                                maxHeight: \"150px\",\n                                overflowY: \"auto\",\n                              }}\n                            >\n                              {pnOptions.map((pnOption, idx) => (\n                                <div\n                                  key={idx}\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    setCurrentPnIndex(idx);\n                                    setShowDropdown(false);\n                                  }}\n                                >\n                                  {pnOption}\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                        {addingNewPn && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter new PN\"\n                            value={newPn}\n                            onChange={(e) => setNewPn(e.target.value)}\n                            onBlur={handleAddNewPn}\n                            onKeyDown={(e) =>\n                              e.key === \"Enter\" && handleAddNewPn()\n                            }\n                          />\n                        )}\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  {/* Row for SN and Status */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Group controlId=\"sn\">\n                        <Form.Label>Serial Number</Form.Label>\n                        <div style={{ position: \"relative\" }}>\n                          <InputGroup>\n                            <Form.Control\n                              type=\"text\"\n                              value={items.sn[currentSnIndex] || \"\"}\n                              onChange={(e) =>\n                                handleSnChange(currentSnIndex, e.target.value)\n                              }\n                            />\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowSnDropdown(!showSnDropdown)}\n                            >\n                              &#9662;\n                            </Button>\n                            <InputGroup.Text>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setAddingNewSn(true)}\n                              >\n                                +\n                              </Button>\n                            </InputGroup.Text>\n                          </InputGroup>\n                          {showSnDropdown && (\n                            <div\n                              style={{\n                                position: \"absolute\",\n                                top: \"100%\",\n                                left: 0,\n                                right: 0,\n                                backgroundColor: \"white\",\n                                border: \"1px solid #ccc\",\n                                zIndex: 1000,\n                                maxHeight: \"150px\",\n                                overflowY: \"auto\",\n                              }}\n                            >\n                              {snOptions.map((snOption, idx) => (\n                                <div\n                                  key={idx}\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                  onClick={() => {\n                                    setCurrentSnIndex(idx);\n                                    setShowSnDropdown(false);\n                                  }}\n                                >\n                                  {snOption}\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                        {addingNewSn && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter new SN\"\n                            value={newSn}\n                            onChange={(e) => setNewSn(e.target.value)}\n                            onBlur={handleAddNewSn}\n                            onKeyDown={(e) =>\n                              e.key === \"Enter\" && handleAddNewSn()\n                            }\n                          />\n                        )}\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      <Form.Group controlId=\"status\">\n                        <Form.Label>Status</Form.Label>\n                        <Form.Select\n                          value={items.status || \"\"}\n                          onChange={handleChange(\"status\")}\n                        >\n                          <option value=\"\">Select status</option>\n                          <option value=\"Good\">Good</option>\n                          <option value=\"Bad\">Bad</option>\n                          <option value=\"Unknown\">Unknown</option>\n                        </Form.Select>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  {/* Row for OEM, Modality, Model */}\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Form.Label>OEM</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"OEM\"\n                        value={oem}\n                        onChange={(e) => setOem(e.target.value)}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Label>Modality</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Modality\"\n                        value={modality}\n                        onChange={(e) => setModality(e.target.value)}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Label>Model</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Model\"\n                        value={model}\n                        onChange={(e) => setModel(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                  {/* Work Orders and Inline Description Section */}\n                  <div style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\n                    <div className=\"d-flex align-items-center\">\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={handleShowWoModal}\n                        className=\"me-2\"\n                      >\n                        Manage Work Orders\n                      </Button>\n                      {workOrders.length > 0 && (\n                        <div className=\"d-flex flex-column align-items-start\">\n                          <Form.Label>Work Order</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Most Recent Work Order\"\n                            value={mostRecentWorkOrder.workOrder}\n                            onChange={(e) =>\n                              handleWorkOrderChange(\n                                workOrders.indexOf(mostRecentWorkOrder),\n                                \"workOrder\",\n                                e.target.value\n                              )\n                            }\n                            style={{ marginBottom: \"0.5rem\" }}\n                          />\n                          <Form.Label>Date</Form.Label>\n                          <Form.Control\n                            type=\"date\"\n                            placeholder=\"Work Order Date\"\n                            value={mostRecentWorkOrder.date}\n                            onChange={(e) =>\n                              handleWorkOrderChange(\n                                workOrders.indexOf(mostRecentWorkOrder),\n                                \"date\",\n                                e.target.value\n                              )\n                            }\n                            style={{ marginBottom: \"0.5rem\" }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                    <div style={{ marginBottom: \"1rem\" }}>\n                      <Form.Group controlId=\"desc\">\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={listDescriptions}\n                          className=\"mb-2 me-2\"\n                        >\n                          List Descriptions\n                        </Button>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          placeholder=\"Enter description\"\n                          value={descriptions[selectedDesc]?.description || \"\"}\n                          onChange={(e) =>\n                            handleDescriptionChange(\n                              selectedDesc,\n                              \"description\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                        <Form.Control\n                          type=\"date\"\n                          value={descriptions[selectedDesc]?.date || \"\"}\n                          onChange={(e) =>\n                            handleDescriptionChange(\n                              selectedDesc,\n                              \"date\",\n                              e.target.value\n                            )\n                          }\n                          style={{\n                            marginTop: \"0.5rem\",\n                            marginBottom: \"0.5rem\",\n                          }}\n                        />\n                      </Form.Group>\n                    </div>\n                  </div>\n                  {/* Machine Selection Row */}\n                  <div style={{ marginBottom: \"1rem\" }}>\n                    <Row className=\"mb-3\">\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={() => {\n                            setMachinePick(true);\n                            handleShowClientModal();\n                          }}\n                          className=\"me-2\"\n                        >\n                          Select From\n                        </Button>\n                        {selectedClientFrom && (\n                          <div\n                            style={{\n                              border: \"1px solid #ccc\",\n                              padding: \"0.75rem\",\n                              borderRadius: \"4px\",\n                              marginBottom: \"1rem\",\n                            }}\n                          >\n                            <p>\n                              <strong>Selected Client (From):</strong>{\" \"}\n                              {selectedClientFrom.name}\n                            </p>\n                            <div style={{ marginTop: \"0.5rem\" }}>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setShowMachineModal(true)}\n                              >\n                                Select Machine for {selectedClientFrom.name}\n                              </Button>\n                              {selectedMachine && (\n                                <>\n                                  <p style={{ marginTop: \"0.5rem\" }}>\n                                    <strong>Selected Machine (From):</strong>{\" \"}\n                                    {selectedMachine.name}\n                                  </p>\n                                  {showLocalLocFrom && (\n                                    <>\n                                      <Button\n                                        variant=\"outline-secondary\"\n                                        onClick={() =>\n                                          setShowNewLocalModalFrom(true)\n                                        }\n                                        className=\"w-100 mb-2\"\n                                      >\n                                        {/* build a little helper inline: region-section-bin-pallet */}\n                                        {[\n                                          newLocalFrom.region,\n                                          newLocalFrom.section?.letter +\n                                            newLocalFrom.section?.number,\n                                          newLocalFrom.bin &&\n                                            `B${newLocalFrom.bin}`,\n                                          newLocalFrom.pallet &&\n                                            `P${newLocalFrom.pallet}`,\n                                        ]\n                                          .filter(Boolean)\n                                          .join(\"-\")}\n                                        {/* e.g. “E-A7-B3-P2” */}\n                                      </Button>\n\n                                      <Modal\n                                        show={showNewLocalModalFrom}\n                                        onHide={() =>\n                                          setShowNewLocalModalFrom(false)\n                                        }\n                                        centered\n                                      >\n                                        <Modal.Header>\n                                          <Modal.Title>\n                                            Edit Local Loc (From)\n                                          </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                          <NewLocal\n                                            selectedClient={selectedClientFrom}\n                                            showLocalLoc={showNewLocalModalFrom}\n                                            value={newLocalFrom}\n                                            onChange={setNewLocalFrom}\n                                            onSave={(p) => {\n                                              setNewLocalFrom(p);\n                                              setShowNewLocalModalFrom(false);\n                                            }}\n                                            onCancel={() =>\n                                              setShowNewLocalModalFrom(false)\n                                            }\n                                          />\n                                        </Modal.Body>\n                                        {/* <Modal.Footer>\n                                          <Button\n                                            variant=\"secondary\"\n                                            onClick={() => setShowNewLocalModalFrom(false)}\n                                          >\n                                            Close\n                                          </Button>\n                                        </Modal.Footer> */}\n                                      </Modal>\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Col>\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={() => {\n                            setMachinePick(false);\n                            handleShowClientModal();\n                          }}\n                          className=\"me-2\"\n                        >\n                          Select Current\n                        </Button>\n                        {selectedClientCurrent && (\n                          <div\n                            style={{\n                              border: \"1px solid #ccc\",\n                              padding: \"0.75rem\",\n                              borderRadius: \"4px\",\n                              marginBottom: \"1rem\",\n                            }}\n                          >\n                            <p>\n                              <strong>Selected Client (Current):</strong>{\" \"}\n                              {selectedClientCurrent.name}\n                            </p>\n                            <div style={{ marginTop: \"0.5rem\" }}>\n                              <Button\n                                variant=\"outline-secondary\"\n                                onClick={() => setShowMachineModal(true)}\n                              >\n                                Select Machine for {selectedClientCurrent.name}\n                              </Button>\n                              {selectedCurrentMachine && (\n                                <>\n                                  <p style={{ marginTop: \"0.5rem\" }}>\n                                    <strong>Selected Machine (Current):</strong>{\" \"}\n                                    {selectedCurrentMachine.name}\n                                  </p>\n                                  {showLocalLocCurrent && (\n                                    <>\n                                      <Button\n                                        variant=\"outline-secondary\"\n                                        onClick={() =>\n                                          setShowNewLocalModalCurrent(true)\n                                        }\n                                        className=\"w-100 mb-2\"\n                                      >\n                                        {[\n                                          newLocalCurrent.region,\n                                          newLocalCurrent.section?.letter +\n                                            newLocalCurrent.section?.number,\n                                          newLocalCurrent.bin &&\n                                            `B${newLocalCurrent.bin}`,\n                                          newLocalCurrent.pallet &&\n                                            `P${newLocalCurrent.pallet}`,\n                                        ]\n                                          .filter(Boolean)\n                                          .join(\"-\")}\n                                      </Button>\n                                      <Modal\n                                        show={showNewLocalModalCurrent}\n                                        onHide={() =>\n                                          setShowNewLocalModalCurrent(false)\n                                        }\n                                        centered\n                                      >\n                                        <Modal.Header>\n                                          <Modal.Title>\n                                            Edit Local Loc (Current)\n                                          </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                          <NewLocal\n                                            selectedClient={\n                                              selectedClientCurrent\n                                            }\n                                            showLocalLoc={\n                                              showNewLocalModalCurrent\n                                            }\n                                            value={newLocalCurrent}\n                                            onChange={setNewLocalCurrent}\n                                            onSave={(p) => {\n                                              setNewLocalCurrent(p);\n                                              setShowNewLocalModalCurrent(\n                                                false\n                                              );\n                                            }}\n                                            onCancel={() =>\n                                              setShowNewLocalModalCurrent(false)\n                                            }\n                                          />\n                                        </Modal.Body>\n                                        {/* <Modal.Footer>\n                                          <Button\n                                            variant=\"secondary\"\n                                            onClick={() => setShowNewLocalModalCurrent(false)}\n                                          >\n                                            Close\n                                          </Button>\n                                        </Modal.Footer> */}\n                                      </Modal>\n                                    </>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </Col>\n                      <Col>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleShowParentModal}\n                          className=\"me-2\"\n                        >\n                          Select Parent\n                        </Button>\n                        {selectedParent && (\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Selected Parent\"\n                            value={selectedParent.name}\n                            readOnly\n                            style={{ marginTop: \"0.5rem\" }}\n                          />\n                        )}\n                      </Col>\n                    </Row>\n                  </div>\n                  {/* Photo and Website Options */}\n                  <div style={{ marginBottom: \"1rem\" }}>\n                    <Row className=\"mb-3\">\n                      <Col xs={6}>\n                        <ButtonGroup>\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={handleShowCameraModal}\n                          >\n                            Take Photo\n                          </Button>\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={handleBrowsePhotos}\n                          >\n                            Browse\n                          </Button>\n                        </ButtonGroup>\n                      </Col>\n                      <Col xs={6} className=\"d-flex align-items-center\">\n                        <Button\n                          variant=\"success\"\n                          onClick={handleSendToInflow}\n                          style={{ marginLeft: \"auto\" }}\n                        >\n                          Send to inFlow\n                        </Button>\n                        <Button\n                          variant=\"secondary\"\n                          onClick={handleBluefolderButton}\n                          style={{ marginLeft: \"0.5rem\", marginRight: \".5rem\" }}\n                        >\n                          BlueFolder\n                        </Button>\n\n                        <Button\n                          variant={addToWebsite ? \"primary\" : \"outline-primary\"}\n                          onClick={() => setAddToWebsite((prev) => !prev)}\n                        >\n                          {addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"}\n                        </Button>\n\n                        <Form.Check\n                          type=\"checkbox\"\n                          id=\"hide-checkbox\"\n                          label=\"Hide\"\n                          // box is checked when we want visible = false\n                          checked={!items.visible}\n                          onChange={(e) => {\n                            // grab checked immediately\n                            const isHidden = e.currentTarget.checked;\n                            setItems((prev) => ({\n                              ...prev,\n                              visible: !isHidden,\n                            }));\n                          }}\n                          className=\"ms-3\"\n                        />\n                      </Col>\n                    </Row>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      multiple\n                      ref={browseInputRef}\n                      style={{ display: \"none\" }}\n                      onChange={handleFilesSelected}\n                    />\n                  </div>\n                  {/* Photo Gallery */}\n                  {photos && photos.length > 0 && (\n                    <div\n                      className=\"photo-gallery\"\n                      style={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        gap: \"10px\",\n                        marginBottom: \"1rem\",\n                      }}\n                    >\n                      {photos.map((photo, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            position: \"relative\",\n                            width: \"100px\",\n                            height: \"100px\",\n                          }}\n                        >\n                          <img\n                            src={photo.url}\n                            alt={`Photo ${index + 1}`}\n                            style={{\n                              width: \"100%\",\n                              height: \"100%\",\n                              objectFit: \"cover\",\n                            }}\n                          />\n                          {photo.file && (\n                            <Button\n                              variant=\"danger\"\n                              size=\"sm\"\n                              style={{\n                                position: \"absolute\",\n                                top: 0,\n                                right: 0,\n                                padding: \"0 5px\",\n                              }}\n                              onClick={() => removePhoto(index)}\n                            >\n                              x\n                            </Button>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  {/* Action Buttons */}\n                  <div className=\"mt-3 d-flex flex-wrap align-items-center\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      style={{ marginRight: \"1rem\" }}\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={handleShowInfoModal}\n                      style={{ marginRight: \"1rem\" }}\n                    >\n                      More Info\n                    </Button>\n                    <LoadingButton\n                      type=\"primary\"\n                      name=\"Back\"\n                      route=\"NewSearch/mainSearch\"\n                    />\n                    <Button\n                      variant=\"info\"\n                      onClick={handlePrint}\n                      style={{ marginLeft: \"auto\" }}\n                    >\n                      Print Label\n                    </Button>\n                  </div>\n                  <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\n                    <Button\n                      variant=\"link\"\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"black\",\n                        fontSize: \"24px\",\n                      }}\n                      onClick={() => setShowExtra(!showExtra)}\n                    >\n                      ▼\n                    </Button>\n                  </div>\n                  <Collapse in={showExtra}>\n                    <div id=\"extra-collapse\" className=\"mt-3\">\n                      <Row>\n                        <Form.Group as={Col} controlId=\"dimensions\">\n                          <Form.Label>Dimensions</Form.Label>\n                          <div\n                            style={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Form.Control\n                              placeholder=\"Length\"\n                              type=\"text\"\n                              value={items.length}\n                              onChange={handleChange(\"length\")}\n                            />\n                            <span style={{ padding: \"0 5px\" }}>x</span>\n                            <Form.Control\n                              placeholder=\"Width\"\n                              type=\"text\"\n                              value={items.width}\n                              onChange={handleChange(\"width\")}\n                            />\n                            <span style={{ padding: \"0 5px\" }}>x</span>\n                            <Form.Control\n                              placeholder=\"Height\"\n                              type=\"text\"\n                              value={items.height}\n                              onChange={handleChange(\"height\")}\n                            />\n                          </div>\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"trackingNumber\">\n                          <Form.Label>Tracking Number</Form.Label>\n                          <Form.Control\n                            placeholder=\"Tracking Number\"\n                            type=\"text\"\n                            value={items.trackingNumber}\n                            onChange={handleChange(\"trackingNumber\")}\n                          />\n                        </Form.Group>\n                      </Row>\n\n                      <Row className=\"mt-3\">\n                        <Form.Group as={Col} controlId=\"Price\">\n                          <Form.Label>Price</Form.Label>\n                          <Form.Control\n                            placeholder=\"Price\"\n                            type=\"text\"\n                            value={items.price}\n                            onChange={handleChange(\"price\")}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"DOM\">\n                          <Form.Label>DOM</Form.Label>\n                          <Form.Control\n                            placeholder=\"Date of Manufacture\"\n                            type=\"date\"\n                            value={DOM}\n                            onChange={(e) => setDOM(e.target.value)}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"poNumber\">\n                          <Form.Label>PO Number</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"PO Number\"\n                            value={items.poNumber || \"\"}\n                            onChange={handleChange(\"poNumber\")}\n                          />\n                        </Form.Group>\n                      </Row>\n                      <Row className=\"mt-3\">\n                        <Form.Group as={Col} controlId=\"localSN\">\n                          <Form.Label>Local SN</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Local SN\"\n                            value={items.localSN || \"\"}\n                            onChange={handleChange(\"localSN\")}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"arrivalDate\">\n                          <Form.Label>Arrival Date</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter Arrival Date\"\n                            type=\"date\"\n                            value={items.arrival_date}\n                            onChange={(e) => {\n                              const value = e.target.value;\n                              setItems((prev) => ({\n                                ...prev,\n                                arrival_date: value,\n                              }));\n                            }}\n                          />\n                        </Form.Group>\n                      </Row>\n                    </div>\n                  </Collapse>\n                </Form>\n              </Card.Body>\n            </Card>\n          </div>\n        </Container>\n      </div>\n      {/* Camera Modal */}\n      <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Take a Photo</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"camera\">\n            {!capturedPhoto ? (\n              <BarcodeScannerComponent\n                width=\"100%\"\n                height={300}\n                onUpdate={handleCapture}\n                facingMode={cameraFacing}\n              />\n            ) : (\n              <div className=\"photo-preview\">\n                <img\n                  src={URL.createObjectURL(capturedPhoto)}\n                  alt=\"captured\"\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n            )}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {!capturedPhoto ? (\n            <>\n              <Button\n                onClick={capturePhoto}\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"60px\",\n                  height: \"60px\",\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  bottom: \"10px\",\n                }}\n              >\n                📷\n              </Button>\n              <Button\n                onClick={() =>\n                  setCameraFacing((prev) =>\n                    prev === \"environment\" ? \"user\" : \"environment\"\n                  )\n                }\n              >\n                Flip Camera\n              </Button>\n              <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setCapturedPhoto(null)}\n              >\n                Retake\n              </Button>\n              <Button variant=\"primary\" onClick={savePhoto}>\n                OK\n              </Button>\n            </>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </LoggedIn>\n  );\n}\n\n// Server-side rendering function\nexport async function getServerSideProps(context) {\n  const { id } = context.params;\n\n  try {\n    // Fetch item data from Firestore using Admin SDK\n    const itemDoc = await adminDb.collection(\"Test\").doc(id).get();\n\n    if (!itemDoc.exists) {\n      return {\n        notFound: true, // This will show a 404 page\n      };\n    }\n\n    const itemData = itemDoc.data();\n\n    // Fetch machine data if it exists\n    let machineData = {};\n    if (itemData.Machine && itemData.Machine.path) {\n      try {\n        const machineDoc = await adminDb.doc(itemData.Machine.path).get();\n        if (machineDoc.exists) {\n          machineData = machineDoc.data();\n\n          // Fetch client data if it exists\n          if (machineData.client && machineData.client.path) {\n            const clientDoc = await adminDb.doc(machineData.client.path).get();\n            if (clientDoc.exists) {\n              machineData.Client = clientDoc.data().name;\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching machine data:\", error);\n      }\n    }\n\n    // Serialize the item data, removing any non-serializable fields\n    const serializedItem = {\n      id,\n      name: itemData.name || \"\",\n      pn: itemData.pn || [],\n      sn: itemData.sn || [],\n      price: itemData.price || \"\",\n      status: itemData.status || \"\",\n      length: itemData.length || \"\",\n      width: itemData.width || \"\",\n      height: itemData.height || \"\",\n      poNumber: itemData.poNumber || \"\",\n      trackingNumber: itemData.trackingNumber || \"\",\n      localSN: itemData.localSN || \"\",\n      arrival_date: itemData.arrival_date || \"\",\n      visible: itemData.visible !== undefined ? itemData.visible : true,\n      // Add other item fields as needed, but ensure they're serializable\n    };\n\n    return {\n      props: {\n        initialItem: serializedItem,\n        initialMachineData: machineData,\n      },\n    };\n  } catch (error) {\n    console.error(\"Error in getServerSideProps:\", error);\n    return {\n      props: {\n        error: \"Failed to load item data\",\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}