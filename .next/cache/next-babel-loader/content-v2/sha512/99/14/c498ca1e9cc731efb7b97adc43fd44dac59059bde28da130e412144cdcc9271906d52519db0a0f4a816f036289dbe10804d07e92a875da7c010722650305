{"ast":null,"code":"export default function cosineSim(a, b) {\n  // a and b are arrays of numbers (embeddings)\n  if (!a || !b || a.length !== b.length) return 0;\n  let dot = 0;\n  let normA = 0;\n  let normB = 0;\n\n  for (let i = 0; i < a.length; i++) {\n    const x = a[i];\n    const y = b[i];\n    dot += x * y;\n    normA += x * x;\n    normB += y * y;\n  }\n\n  const denom = Math.sqrt(normA) * Math.sqrt(normB);\n  if (denom === 0) return 0;\n  return dot / denom;\n}","map":{"version":3,"sources":["C:/Users/mack2/OneDrive/Desktop/code/utils/cosineSim.js"],"names":["cosineSim","a","b","length","dot","normA","normB","i","x","y","denom","Math","sqrt"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACtC;AACA,MAAI,CAACD,CAAD,IAAM,CAACC,CAAP,IAAYD,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAA/B,EAAuC,OAAO,CAAP;AAEvC,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAAC,CAACE,MAAtB,EAA8BI,CAAC,EAA/B,EAAmC;AACjC,UAAMC,CAAC,GAAGP,CAAC,CAACM,CAAD,CAAX;AACA,UAAME,CAAC,GAAGP,CAAC,CAACK,CAAD,CAAX;AACAH,IAAAA,GAAG,IAAII,CAAC,GAAGC,CAAX;AACAJ,IAAAA,KAAK,IAAIG,CAAC,GAAGA,CAAb;AACAF,IAAAA,KAAK,IAAIG,CAAC,GAAGA,CAAb;AACD;;AAED,QAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUP,KAAV,IAAmBM,IAAI,CAACC,IAAL,CAAUN,KAAV,CAAjC;AACA,MAAII,KAAK,KAAK,CAAd,EAAiB,OAAO,CAAP;AAEjB,SAAON,GAAG,GAAGM,KAAb;AACD","sourcesContent":["export default function cosineSim(a, b) {\r\n  // a and b are arrays of numbers (embeddings)\r\n  if (!a || !b || a.length !== b.length) return 0;\r\n\r\n  let dot = 0;\r\n  let normA = 0;\r\n  let normB = 0;\r\n\r\n  for (let i = 0; i < a.length; i++) {\r\n    const x = a[i];\r\n    const y = b[i];\r\n    dot += x * y;\r\n    normA += x * x;\r\n    normB += y * y;\r\n  }\r\n\r\n  const denom = Math.sqrt(normA) * Math.sqrt(normB);\r\n  if (denom === 0) return 0;\r\n\r\n  return dot / denom;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}