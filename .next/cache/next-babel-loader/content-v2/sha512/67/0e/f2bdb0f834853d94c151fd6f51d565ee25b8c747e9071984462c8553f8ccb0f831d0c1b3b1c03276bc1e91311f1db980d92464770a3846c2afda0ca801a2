{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\AddItem\\\\NewItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Row, Col, Modal, FormControl, Collapse, InputGroup, ButtonGroup, Spinner } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport firebase from \"../../../context/Firebase\";\nimport LoggedIn from \"../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ClientInfoModal from \"../ClientInfoModal\";\nimport ParentModal from \"./parentModal\";\nimport MachineSelectionModal from \"../item/[id]/MachineSelectionModal\";\nimport InfoModal from \"../InfoModal\"; // Load BarcodeScannerComponent only on the client-side.\n\nconst BarcodeScannerComponent = dynamic(() => import(\"react-qr-barcode-scanner\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-qr-barcode-scanner\")],\n    modules: [\"NewSearch\\\\AddItem\\\\NewItem.js -> \" + \"react-qr-barcode-scanner\"]\n  }\n}); // Simulate network delay.\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n} // Custom LoadingButton component.\n\n\nfunction LoadingButton({\n  type,\n  name,\n  route\n}) {\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return __jsx(Link, {\n    href: `/${route}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: `btn btn-${type}`,\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loading…\" : name));\n}\n\nexport default function NewItem() {\n  var _descriptions$selecte, _descriptions$selecte2;\n\n  const router = useRouter();\n  const {\n    signOut\n  } = useAuth(); // Initialize item state – for a new item, these start empty.\n  // We store PN and SN as arrays.\n\n  const {\n    0: items,\n    1: setItems\n  } = useState({\n    name: \"\",\n    pn: [\"\"],\n    sn: [\"\"],\n    // This will be overridden on submit.\n    localSN: \"\",\n    // NEW FIELD: holds user input for a local serial number.\n    price: \"\",\n    status: \"\",\n    poNumber: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    arrival_date: \"\",\n    // NEW FIELD: Arrival Date\n    visible: true\n  });\n  const {\n    0: editingPn,\n    1: setEditingPn\n  } = useState(true); // const [newPn, setNewPn] = useState(\"\"); // for the input value when editing\n\n  const {\n    0: editingSn,\n    1: setEditingSn\n  } = useState(true); // const [newSn, setNewSn] = useState(\"\");\n  // DOM is the Date of Manufacture input (user provided).\n\n  const {\n    0: DOM,\n    1: setDOM\n  } = useState(\"\"); // OEM, Modality, Model fields.\n\n  const {\n    0: oem,\n    1: setOem\n  } = useState(\"\");\n  const {\n    0: modality,\n    1: setModality\n  } = useState(\"\");\n  const {\n    0: model,\n    1: setModel\n  } = useState(\"\"); // Local location states.\n\n  const {\n    0: localLocFrom,\n    1: setLocalLocFrom\n  } = useState(\"\");\n  const {\n    0: localLocCurrent,\n    1: setLocalLocCurrent\n  } = useState(\"\"); // Other states.\n\n  const {\n    0: pnOptions,\n    1: setPnOptions\n  } = useState([]);\n  const {\n    0: snOptions,\n    1: setSnOptions\n  } = useState([]);\n  const {\n    0: descriptions,\n    1: setDescriptions\n  } = useState([{\n    description: \"\",\n    date: \"\"\n  }]);\n  const {\n    0: workOrders,\n    1: setWorkOrders\n  } = useState([{\n    workOrder: \"\",\n    date: \"\"\n  }]);\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false); // error modal for missing required fields\n\n  const {\n    0: showErr,\n    1: setShowErr\n  } = useState(false);\n  const {\n    0: Err,\n    1: setErr\n  } = useState(\"Missing required field: Name and Description\");\n  const {\n    0: showDescModal,\n    1: setShowDescModal\n  } = useState(false);\n  const {\n    0: showWoModal,\n    1: setShowWoModal\n  } = useState(false);\n  const {\n    0: showClientModal,\n    1: setShowClientModal\n  } = useState(false);\n  const {\n    0: showMachineModal,\n    1: setShowMachineModal\n  } = useState(false);\n  const {\n    0: showParentModal,\n    1: setShowParentModal\n  } = useState(false);\n  const {\n    0: showCameraModal,\n    1: setShowCameraModal\n  } = useState(false);\n  const {\n    0: showSaveModal,\n    1: setShowSaveModal\n  } = useState(false);\n  const {\n    0: machineSelectionModal,\n    1: setMachineSelectionModal\n  } = useState(false);\n  const {\n    0: selectedDesc,\n    1: setSelectedDesc\n  } = useState(0);\n  const {\n    0: selectedClient,\n    1: setSelectedClient\n  } = useState(null);\n  const {\n    0: selectedMachine,\n    1: setSelectedMachine\n  } = useState(null);\n  const {\n    0: selectedCurrentMachine,\n    1: setSelectedCurrentMachine\n  } = useState(null);\n  const {\n    0: selectedParent,\n    1: setSelectedParent\n  } = useState(null);\n  const {\n    0: TheMachine,\n    1: setTheMachine\n  } = useState(null);\n  const {\n    0: machineOptions,\n    1: setMachineOptions\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: capturedPhoto,\n    1: setCapturedPhoto\n  } = useState(null);\n  const {\n    0: cameraFacing,\n    1: setCameraFacing\n  } = useState(\"environment\");\n  const {\n    0: addToWebsite,\n    1: setAddToWebsite\n  } = useState(false);\n  const {\n    0: machinePick,\n    1: setMachinePick\n  } = useState(false);\n  const {\n    0: freqItem,\n    1: setFreqItem\n  } = useState(0);\n  const {\n    0: usagePastYear,\n    1: setUsagePastYear\n  } = useState(0);\n  const {\n    0: machineFrequency,\n    1: setMachineFrequency\n  } = useState(0); // For extra (dimensions/price/DOM) section collapse.\n\n  const {\n    0: showExtra,\n    1: setShowExtra\n  } = useState(false); // For PN/SN \"add new\" functionality.\n\n  const {\n    0: addingNewPn,\n    1: setAddingNewPn\n  } = useState(false);\n  const {\n    0: newPn,\n    1: setNewPn\n  } = useState(\"\");\n  const {\n    0: addingNewSn,\n    1: setAddingNewSn\n  } = useState(false);\n  const {\n    0: newSn,\n    1: setNewSn\n  } = useState(\"\"); // For browsing photos.\n\n  const browseInputRef = useRef(null); // Inside your NewItem component:\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  if (!router.isReady) {\n    return null; // or a loading indicator\n  } // -------------------- Since this is \"add\" mode, we do not fetch an existing document.\n  // However, we still fetch global PN and SN options and clients for selection.\n\n\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(\"Clients:\", clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n\n    fetchClientsData();\n  }, []);\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      setPnOptions([...pnSet]);\n      setSnOptions([...snSet]);\n    }\n\n    fetchPnSn();\n  }, []);\n  const {\n    0: machineFieldsInitialized,\n    1: setMachineFieldsInitialized\n  } = useState(false);\n  useEffect(() => {\n    if (!machineFieldsInitialized && (TheMachine || selectedCurrentMachine || selectedMachine)) {\n      const updatedFields = updateMachineFields(TheMachine, selectedCurrentMachine, selectedMachine); // Only set fields if they are empty or \"N/A\"\n\n      if (!oem || oem === \"N/A\") setOem(updatedFields.oem);\n      if (!modality || modality === \"N/A\") setModality(updatedFields.modality);\n      if (!model || model === \"N/A\") setModel(updatedFields.model);\n      setMachineFieldsInitialized(true);\n    }\n  }, [TheMachine, selectedCurrentMachine, selectedMachine, machineFieldsInitialized]);\n  const {\n    0: signal,\n    1: setSignal\n  } = useState(null);\n  useEffect(() => {\n    if (router.isReady) {\n      setSignal(router.query.signal || null);\n    }\n  }, [router.isReady, router.query.signal]); // -------------------- Handlers for PN and SN dropdowns\n  // PN: when a user selects an existing PN value.\n\n  const handlePnSelect = e => {\n    const selected = e.target.value;\n    setItems(prev => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: updatedPn\n      });\n    });\n  };\n\n  const handlePnChange = (index, value) => {\n    setItems(prev => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: newPn\n      });\n    });\n  };\n\n  const addPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        pn: [...prev.pn, newPn.trim()]\n      }));\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  }; // SN: when a user selects an existing SN value.\n\n\n  const handleSnSelect = e => {\n    const selected = e.target.value;\n    setItems(prev => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: updatedSn\n      });\n    });\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems(prev => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: newSn\n      });\n    });\n  };\n\n  const addSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        sn: [...prev.sn, newSn.trim()]\n      }));\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  }; // -------------------- Photo Browse Handlers\n\n\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = e => {\n    const files = e.target.files;\n\n    if (files.length) {\n      const newPhotos = [];\n\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i])\n        });\n      }\n\n      setPhotos(prevPhotos => [...prevPhotos, ...newPhotos]);\n    }\n\n    e.target.value = \"\";\n  }; // -------------------- Photo Capture Handlers remain as in your index.js\n\n\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const savePhoto = () => {\n    setPhotos(prevPhotos => [...prevPhotos, {\n      file: capturedPhoto,\n      url: URL.createObjectURL(capturedPhoto)\n    }]);\n    setCapturedPhoto(null);\n    setShowCameraModal(false);\n  };\n\n  const removePhoto = index => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  }; // -------------------- Modal Handlers\n\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleCloseErr = () => setShowErr(false);\n\n  const handleShowErr = () => setShowErr(true);\n\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n\n  const handleShowSaveModal = () => setShowSaveModal(true);\n\n  const handleCloseDescModal = () => setShowDescModal(false);\n\n  const handleShowDescModal = () => setShowDescModal(true);\n\n  const handleCloseWoModal = () => setShowWoModal(false);\n\n  const handleShowWoModal = () => setShowWoModal(true);\n\n  const handleCloseClientModal = () => setShowClientModal(false);\n\n  const handleShowClientModal = () => setShowClientModal(true);\n\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n\n  const handleCloseParentModal = () => setShowParentModal(false);\n\n  const handleShowParentModal = () => setShowParentModal(true); // -------------------- Work Orders / Descriptions Handlers (unchanged)\n\n\n  const addDescription = () => {\n    setDescriptions([...descriptions, {\n      description: \"\",\n      date: \"\"\n    }]);\n  };\n\n  const removeDescription = index => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) => i === index ? _objectSpread(_objectSpread({}, desc), {}, {\n      [field]: value\n    }) : desc);\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, {\n      workOrder: \"\",\n      date: \"\"\n    }]);\n  };\n\n  const removeWorkOrder = index => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) => i === index ? _objectSpread(_objectSpread({}, wo), {}, {\n      [field]: value\n    }) : wo);\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = index => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  }; // -------------------- Machine Selection (unchanged)\n\n\n  const handleClientInfo = async clientId => {\n    // Clear any previously selected machine/local loc for the branch\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n\n    if (clientDoc.exists) {\n      const clientData = clientDoc.data();\n\n      if (machinePick) {\n        setSelectedClientFrom(_objectSpread({\n          id: clientDoc.id\n        }, clientData));\n      } else {\n        setSelectedClientCurrent(_objectSpread({\n          id: clientDoc.id\n        }, clientData));\n      } // Fetch machines for this client:\n\n\n      const machinePromises = clientData.machines.map(machineRef => machineRef.get());\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map(machineDoc => _objectSpread({\n        id: machineDoc.id\n      }, machineDoc.data()));\n      setMachineOptions(machines);\n      handleCloseClientModal();\n    }\n  };\n\n  const fetchMachine = async machineId => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData); // Ensure OEM, Modality, and Model update properly only if necessary\n\n      if (!oem || oem === \"N/A\") setOem(machineData.oem || machineData.OEM || \"\");\n      if (!modality || modality === \"N/A\") setModality(machineData.modality || machineData.Modality || \"\");\n      if (!model || model === \"N/A\") setModel(machineData.model || machineData.Model || \"\"); // Set machine frequency count\n\n      const machinesSnapshot = await db.collection(\"Machine\").where(\"Model\", \"==\", machineData.Model || machineData.model).get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  }; // -------------------- Frequency/Usage (unchanged)\n\n\n  const calculateItemFrequencyAndUsage = async pn => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n    const itemsSnapshot = await db.collection(\"Test\").where(\"pn\", \"==\", pn).get();\n    setFreqItem(itemsSnapshot.size);\n    let usagePastYear = 0;\n    itemsSnapshot.forEach(doc => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach(workOrder => {\n        const workOrderDate = new Date(workOrder.date);\n\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  }; // -------------------- Photo Upload (unchanged)\n\n\n  const uploadPhotos = async docID => {\n    const storageRef = firebase.storage().ref();\n\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(`Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`);\n        const metadata = {\n          contentType: \"image/png\"\n        };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  }; // -------------------- Submission Handler\n  // For NewItem, only require Name and Description.\n\n\n  async function handleSubmit(event) {\n    var _descriptions$;\n\n    event.preventDefault();\n\n    if (!items.name || !((_descriptions$ = descriptions[0]) !== null && _descriptions$ !== void 0 && _descriptions$.description)) {\n      handleShow();\n    } else {\n      setLoading(true); // start loading before async work\n\n      try {\n        await toSend();\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false); // end loading after async work completes\n      }\n    }\n  }\n\n  async function toSend(redirect = true) {\n    const {\n      id\n    } = router.query; // Ensure id is defined (it may be undefined for a new item)\n\n    const db = firebase.firestore(); // Get the current authenticated user\n\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\"; // Always use the current state values for OEM, modality, and model.\n\n    const machineData = _objectSpread(_objectSpread({}, TheMachine || {}), {}, {\n      oem: oem,\n      modality: modality,\n      model: model\n    });\n\n    const formattedItems = _objectSpread(_objectSpread({}, items), {}, {\n      descriptions,\n      workOrders\n    }); // Remove any unused fields.\n\n\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite;\n    formattedItems.visible = items.visible; // Add the current user's email under the \"user\" field\n\n    formattedItems.user = userEmail; // Clean pn and sn arrays to replace undefined values with an empty string.\n\n    formattedItems.pn = (items.pn || []).map(value => value === undefined ? \"\" : value);\n    formattedItems.sn = (items.sn || []).map(value => value === undefined ? \"\" : value); // Set machine references for each branch.\n\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db.collection(\"Machine\").doc(selectedMachine.id);\n    }\n\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n    } // ***** NEW: Set client references for each branch *****\n\n\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db.collection(\"Client\").doc(selectedClientFrom.id);\n    }\n\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db.collection(\"Client\").doc(selectedClientCurrent.id);\n    } // ******************************************************\n\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    } // Only add dateCreated if this is a new document\n\n\n    if (!id) {\n      formattedItems.dateCreated = new Date().toISOString().split(\"T\")[0]; // \"YYYY-MM-DD\"\n    } // --- LOCAL SN LOGIC ---\n\n\n    let docId = id || null;\n\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : docId;\n\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n            }\n          } // Delete the old document.\n\n\n          await db.collection(\"Test\").doc(docId).delete(); // Set docId to the new document ID.\n\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n            });\n          }\n        }\n      } // Upload any new photos to Firebase Storage.\n\n\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\"); // Redirect to the new URL using the new document id.\n\n      if (redirect) {\n        router.push(`/NewSearch/item/${docId}`);\n      } else {\n        setRedirect(true);\n      } // Optionally, show a save confirmation modal.\n\n\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  } // -------------------- Info Modal Handlers (unchanged)\n\n\n  const {\n    0: showInfoModal,\n    1: setShowInfoModal\n  } = useState(false);\n  const {\n    0: itemName,\n    1: setItemName\n  } = useState(\"\");\n\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleChange = field => event => {\n    const value = event.target ? event.target.value : event.value;\n    setItems(prevItems => _objectSpread(_objectSpread({}, prevItems), {}, {\n      [field]: value\n    }));\n  };\n\n  const mostRecentWorkOrder = workOrders && workOrders.length > 0 ? workOrders.reduce((latest, current) => {\n    const latestDate = new Date(latest.date);\n    const currentDate = new Date(current.date);\n    return currentDate > latestDate ? current : latest;\n  }, workOrders[0]) : {};\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    } // In addItem mode, there is no existing id so generate one\n\n\n    const printId = generateCustomID();\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      status: items.status,\n      local_sn: printId,\n      // Use the generated custom ID\n      descriptions: descriptions,\n      date: items.date || new Date().toISOString().split(\"T\")[0],\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model\n    };\n    console.log(\"Payload for printing:\", payload);\n\n    try {\n      const response = await fetch(\"https://cc7e-174-76-22-138.ngrok-free.app/print-label\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      console.log(\"Print result:\", result);\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        pn: [...prev.pn, newPn.trim()]\n      }));\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        sn: [...prev.sn, newSn.trim()]\n      }));\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  function getPriorityMachineField(field, currentValue, theMachine, currentMachine, fromMachine) {\n    // If the field is already filled in by the user, return it unchanged.\n    if (currentValue && currentValue.trim() !== \"\" && currentValue.trim() !== \"N/A\") {\n      return currentValue;\n    } // Otherwise, prioritize the best available value.\n\n\n    if (theMachine && theMachine[field] && theMachine[field].trim() !== \"\" && theMachine[field] !== \"N/A\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field].trim() !== \"\" && currentMachine[field] !== \"N/A\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field].trim() !== \"\" && fromMachine[field] !== \"N/A\") {\n      return fromMachine[field];\n    }\n\n    return currentValue; // Default to keeping the current value\n  }\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getValidMachineField(\"oem\", theMachine, currentMachine, fromMachine),\n      modality: getValidMachineField(\"modality\", theMachine, currentMachine, fromMachine),\n      model: getValidMachineField(\"model\", theMachine, currentMachine, fromMachine)\n    };\n  }\n\n  function getValidMachineField(field, theMachine, currentMachine, fromMachine) {\n    if (theMachine && theMachine[field] && theMachine[field].trim() !== \"\" && theMachine[field] !== \"N/A\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field].trim() !== \"\" && currentMachine[field] !== \"N/A\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field].trim() !== \"\" && fromMachine[field] !== \"N/A\") {\n      return fromMachine[field];\n    }\n\n    return \"\"; // Keep it empty if no valid data exists\n  }\n\n  const {\n    0: showLocalLocFrom,\n    1: setShowLocalLocFrom\n  } = useState(false);\n  const {\n    0: showLocalLocCurrent,\n    1: setShowLocalLocCurrent\n  } = useState(false);\n\n  async function handleClone() {\n    var _descriptions$2;\n\n    event.preventDefault();\n\n    if (!items.name || !((_descriptions$2 = descriptions[0]) !== null && _descriptions$2 !== void 0 && _descriptions$2.description)) {\n      handleShow(); // your existing error modal\n\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // save but don’t redirect\n      await toSend(false);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const condition = name => {\n    return name && name.toLowerCase() === \"interior socal\";\n  };\n\n  const handleSetSelectedMachine = machine => {\n    const condition = name => name && name.toLowerCase() === \"interior socal\";\n\n    if (machinePick) {\n      setSelectedMachine({\n        id: machine.id,\n        name: machine.name\n      }); // For \"from\", show the local loc input if condition met.\n\n      setShowLocalLocFrom(condition(machine.name));\n    } else {\n      setSelectedCurrentMachine({\n        id: machine.id,\n        name: machine.name\n      }); // For \"current\", you might also want a local loc input:\n\n      setShowLocalLocCurrent(condition(machine.name));\n    }\n\n    fetchMachine(machine.id);\n    setShowMachineModal(false);\n  };\n\n  const {\n    0: currentPnIndex,\n    1: setCurrentPnIndex\n  } = useState(0);\n  const {\n    0: showDropdown,\n    1: setShowDropdown\n  } = useState(false);\n  const {\n    0: currentSnIndex,\n    1: setCurrentSnIndex\n  } = useState(0);\n  const {\n    0: showSnDropdown,\n    1: setShowSnDropdown\n  } = useState(false);\n\n  const handleAddNewClient = () => {\n    // Generate a random client number as part of the URL.\n    const randomNum = Math.floor(10000 + Math.random() * 90000); // When pushing, include a query parameter (from=item) and the current item id if available.\n\n    router.push(`/NewSearch/client/AIS${randomNum}/addClient?from=addItem`);\n  };\n\n  const {\n    0: showMachineSelect,\n    1: setShowMachineSelect\n  } = useState(false);\n  const {\n    0: selectedClientFrom,\n    1: setSelectedClientFrom\n  } = useState(null);\n  const {\n    0: selectedClientCurrent,\n    1: setSelectedClientCurrent\n  } = useState(null);\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 5\n    }\n  }, __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: () => setMachineSelectionModal(false),\n    setMachine: handleSetSelectedMachine,\n    machineOptions: machineOptions // if your modal needs the list of machines\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 11\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 9\n    }\n  }, \"Missing required field: Name and Description\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showErr,\n    onHide: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 11\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 9\n    }\n  }, Err), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showSaveModal,\n    onHide: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 11\n    }\n  }, \"Save Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 9\n    }\n  }, \"Data has been saved successfully.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 11\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 11\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 11\n    }\n  }, \"Add Description\"), descriptions.map((desc, index) => __jsx(Row, {\n    key: index,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: () => selectDescription(index),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 19\n    }\n  }, desc.description || \"Description\"), __jsx(\"span\", {\n    style: {\n      borderLeft: \"1px solid #ccc\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 19\n    }\n  }, desc.date || \"Date\"))))), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(Modal, {\n    show: showWoModal,\n    onHide: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 11\n    }\n  }, \"Work Orders\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addWorkOrder,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 11\n    }\n  }, \"Add Work Order\"), workOrders.map((wo, index) => __jsx(Row, {\n    key: index,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Work Order\",\n    value: wo.workOrder,\n    onChange: e => handleWorkOrderChange(index, \"workOrder\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 15\n    }\n  }, __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Date\",\n    value: wo.date,\n    onChange: e => handleWorkOrderChange(index, \"date\", e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    variant: \"danger\",\n    onClick: () => removeWorkOrder(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 17\n    }\n  }, \"Remove\")))), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(ClientInfoModal, {\n    show: showMachineModal,\n    handleClose: handleCloseMachineModal,\n    selectedClient: selectedClient,\n    machineOptions: machineOptions,\n    setSelectedMachine: handleSetSelectedMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 11\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: search,\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 11\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(client => client.name.toLowerCase().includes(search.toLowerCase())),\n    onSelectClient: handleClientInfo,\n    onInfoClick: handleClientInfo,\n    clearSelection: () => handleClientInfo(null),\n    onAddClient: handleAddNewClient // new prop\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 11\n    }\n  }))), __jsx(ParentModal, {\n    show: showParentModal,\n    handleClose: handleCloseParentModal,\n    setSelectedParent: setSelectedParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 7\n    }\n  }), __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: () => setMachineSelectionModal(false),\n    setMachine: setTheMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 11\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 15\n    }\n  }) : __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 17\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 9\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: () => setCameraFacing(prev => prev === \"environment\" ? \"user\" : \"environment\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 15\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => setCapturedPhoto(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 15\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 15\n    }\n  }, \"OK\")))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 11\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 11\n    }\n  }, \"Add Description\"), descriptions.map((desc, index) => __jsx(Row, {\n    key: index,\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: () => selectDescription(index),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 19\n    }\n  }, desc.description || \"Description\"), __jsx(\"span\", {\n    style: {\n      borderLeft: \"1px solid #ccc\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 19\n    }\n  }, desc.date || \"Date\"))))), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 11\n    }\n  }, \"OK\"))), __jsx(InfoModal, {\n    show: showInfoModal,\n    handleClose: handleCloseInfoModal,\n    itemName: items.name,\n    dimensions: `${items.length},${items.width},${items.height}`,\n    price: items.price,\n    freqI: freqItem,\n    freqM: machineFrequency,\n    usage: usagePastYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 7\n    }\n  }), loading && __jsx(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n      backdropFilter: \"blur(5px)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 9999 // Make sure it's above everything else\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 15\n    }\n  }, \"Add New Item\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 23\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: items.name,\n    onChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"pn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 23\n    }\n  }, \"Product Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.pn[currentPnIndex] || \"\",\n    onChange: e => handlePnChange(currentPnIndex, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowDropdown(!showDropdown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 27\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setAddingNewPn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1330,\n      columnNumber: 29\n    }\n  }, \"+\"))), showDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 27\n    }\n  }, items.pn.map((pnOption, idx) => __jsx(\"div\", {\n    key: idx,\n    style: {\n      padding: \"8px\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setCurrentPnIndex(idx);\n      setShowDropdown(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 31\n    }\n  }, pnOption)))), addingNewPn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new PN\",\n    value: newPn,\n    onChange: e => setNewPn(e.target.value),\n    onBlur: handleAddNewPn,\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        handleAddNewPn();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 25\n    }\n  })))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1388,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"sn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 23\n    }\n  }, \"Serial Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1392,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.sn[currentSnIndex] || \"\",\n    onChange: e => handleSnChange(currentSnIndex, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 27\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowSnDropdown(!showSnDropdown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 27\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setAddingNewSn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 29\n    }\n  }, \"+\"))), showSnDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420,\n      columnNumber: 27\n    }\n  }, items.sn.map((snOption, idx) => __jsx(\"div\", {\n    key: idx,\n    style: {\n      padding: \"8px\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      setCurrentSnIndex(idx);\n      setShowSnDropdown(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1434,\n      columnNumber: 31\n    }\n  }, snOption)))), addingNewSn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new SN\",\n    value: newSn,\n    onChange: e => setNewSn(e.target.value),\n    onBlur: handleAddNewSn,\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        handleAddNewSn();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 25\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 23\n    }\n  }, \"Status\"), __jsx(Form.Select, {\n    value: items.status || \"\",\n    onChange: handleChange(\"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468,\n      columnNumber: 23\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 25\n    }\n  }, \"Select status\"), __jsx(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473,\n      columnNumber: 25\n    }\n  }, \"Good\"), __jsx(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1474,\n      columnNumber: 25\n    }\n  }, \"Bad\"), __jsx(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 25\n    }\n  }, \"Unknown\"))))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"oem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"OEM\",\n    value: oem,\n    onChange: e => setOem(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1486,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1494,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"modality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Modality\",\n    value: modality,\n    onChange: e => setModality(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 23\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1505,\n      columnNumber: 19\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"model\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1506,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1507,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Model\",\n    value: model,\n    onChange: e => setModel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1508,\n      columnNumber: 23\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1518,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1519,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowWoModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 21\n    }\n  }, \"Manage Work Orders\"), workOrders.length > 0 && __jsx(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1529,\n      columnNumber: 25\n    }\n  }, \"Work Order\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Most Recent Work Order\",\n    value: (mostRecentWorkOrder === null || mostRecentWorkOrder === void 0 ? void 0 : mostRecentWorkOrder.workOrder) || \"\",\n    onChange: e => handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"workOrder\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1530,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1543,\n      columnNumber: 25\n    }\n  }, \"Date\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Work Order Date\",\n    value: (mostRecentWorkOrder === null || mostRecentWorkOrder === void 0 ? void 0 : mostRecentWorkOrder.date) || \"\",\n    onChange: e => handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"date\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1544,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: listDescriptions,\n    className: \"mb-2 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 21\n    }\n  }, \"List Descriptions\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter description\",\n    value: ((_descriptions$selecte = descriptions[selectedDesc]) === null || _descriptions$selecte === void 0 ? void 0 : _descriptions$selecte.description) || \"\",\n    onChange: e => handleDescriptionChange(selectedDesc, \"description\", e.target.value),\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 21\n    }\n  }), __jsx(Form.Control, {\n    type: \"date\",\n    value: ((_descriptions$selecte2 = descriptions[selectedDesc]) === null || _descriptions$selecte2 === void 0 ? void 0 : _descriptions$selecte2.date) || \"\",\n    onChange: e => handleDescriptionChange(selectedDesc, \"date\", e.target.value),\n    style: {\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1600,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1601,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1602,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => {\n      setMachinePick(true);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 23\n    }\n  }, \"Select From\"), selectedClientFrom && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1614,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 27\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1623,\n      columnNumber: 29\n    }\n  }, \"Selected Client (From):\"), \" \", selectedClientFrom.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1626,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowMachineModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627,\n      columnNumber: 29\n    }\n  }, \"Select Machine for \", selectedClientFrom.name), selectedMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1635,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1636,\n      columnNumber: 35\n    }\n  }, \"Selected Machine (From):\"), \" \", selectedMachine.name), showLocalLocFrom && __jsx(Form.Group, {\n    controlId: \"localLocFrom\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1640,\n      columnNumber: 35\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1644,\n      columnNumber: 37\n    }\n  }, \"Local Loc (From)\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: localLocFrom,\n    onChange: e => setLocalLocFrom(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 37\n    }\n  })))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => {\n      setMachinePick(false);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1661,\n      columnNumber: 23\n    }\n  }, \"Select Current\"), selectedClientCurrent && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1672,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 27\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 29\n    }\n  }, \"Selected Client (Current):\"), \" \", selectedClientCurrent.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setShowMachineModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 29\n    }\n  }, \"Select Machine for \", selectedClientCurrent.name), selectedCurrentMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 33\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1694,\n      columnNumber: 35\n    }\n  }, \"Selected Machine (Current):\"), \" \", selectedCurrentMachine.name), showLocalLocCurrent && __jsx(Form.Group, {\n    controlId: \"localLocCurrent\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1698,\n      columnNumber: 35\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1702,\n      columnNumber: 37\n    }\n  }, \"Local Loc (Current)\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: localLocCurrent,\n    onChange: e => setLocalLocCurrent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1703,\n      columnNumber: 37\n    }\n  })))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowParentModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 23\n    }\n  }, \"Select Parent\"), selectedParent && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Selected Parent\",\n    value: selectedParent.name,\n    readOnly: true,\n    style: {\n      cursor: \"default\",\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1727,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1739,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1740,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1741,\n      columnNumber: 21\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1743,\n      columnNumber: 25\n    }\n  }, \"Take Photo\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleBrowsePhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 25\n    }\n  }, \"Browse\"))), __jsx(Col, {\n    xs: 6,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: addToWebsite ? \"primary\" : \"outline-primary\",\n    onClick: () => setAddToWebsite(prev => !prev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1758,\n      columnNumber: 23\n    }\n  }, addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"), __jsx(Form.Check, {\n    type: \"checkbox\",\n    id: \"hide-checkbox\",\n    label: \"Hide\" // box is checked when we want visible = false\n    ,\n    checked: !items.visible,\n    onChange: e => {\n      // grab checked immediately\n      const isHidden = e.currentTarget.checked;\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        visible: !isHidden\n      }));\n    },\n    className: \"ms-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 23\n    }\n  }))), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: true,\n    ref: browseInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1782,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 17\n    }\n  }, photos.map((photo, index) => __jsx(\"div\", {\n    key: index,\n    className: \"d-flex flex-column align-items-center mb-2 me-2\",\n    style: {\n      width: \"100px\",\n      height: \"100px\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1794,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: photo.url,\n    alt: `Photo ${index + 1}`,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1803,\n      columnNumber: 23\n    }\n  }), photo.file && __jsx(Button, {\n    variant: \"danger\",\n    size: \"sm\",\n    style: {\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      padding: \"0 5px\"\n    },\n    onClick: () => removePhoto(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1813,\n      columnNumber: 25\n    }\n  }, \"X\")))), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1833,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1834,\n      columnNumber: 19\n    }\n  }, \"Save\"), __jsx(Button, {\n    variant: \"info\",\n    onClick: handleClone,\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1841,\n      columnNumber: 19\n    }\n  }, \"Clone\"), __jsx(LoadingButton, {\n    type: \"secondary\",\n    name: \"Back\",\n    route: \"NewSearch/mainSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1848,\n      columnNumber: 19\n    }\n  }), __jsx(Button, {\n    variant: \"info\",\n    onClick: handlePrint,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1853,\n      columnNumber: 19\n    }\n  }, \"Print Label\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1861,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"24px\"\n    },\n    onClick: () => setShowExtra(!showExtra),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1862,\n      columnNumber: 19\n    }\n  }, \"\\u25BC\")), __jsx(Collapse, {\n    in: showExtra,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1874,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    id: \"extra-collapse\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1877,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 25\n    }\n  }, \"Dimensions (L x W x H)\"), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1879,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1880,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Length\",\n    type: \"text\",\n    value: items.length,\n    onChange: handleChange(\"length\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 29\n    }\n  })), \"x\", __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Width\",\n    type: \"text\",\n    value: items.width,\n    onChange: handleChange(\"width\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 29\n    }\n  })), \"x\", __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1898,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Height\",\n    type: \"text\",\n    value: items.height,\n    onChange: handleChange(\"height\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1899,\n      columnNumber: 29\n    }\n  })))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1908,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1909,\n      columnNumber: 25\n    }\n  }, \"Price\"), __jsx(Form.Control, {\n    placeholder: \"Price\",\n    type: \"text\",\n    value: items.price,\n    onChange: handleChange(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 25\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1918,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"DOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1919,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1920,\n      columnNumber: 25\n    }\n  }, \"DOM (Date of Manufacture)\"), __jsx(Form.Control, {\n    placeholder: \"Enter DOM\",\n    type: \"date\",\n    value: DOM,\n    onChange: e => setDOM(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1921,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"localSN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 25\n    }\n  }, \"Local SN\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Local SN\",\n    value: items.localSN || \"\",\n    onChange: handleChange(\"localSN\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 25\n    }\n  }))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1939,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"poNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1940,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1941,\n      columnNumber: 25\n    }\n  }, \"PO Number\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"PO Number\",\n    value: items.poNumber || \"\",\n    onChange: handleChange(\"poNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1942,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"arrivalDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1949,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1950,\n      columnNumber: 25\n    }\n  }, \"Arrival Date\"), __jsx(Form.Control, {\n    placeholder: \"Enter Arrival Date\",\n    type: \"date\",\n    value: items.arrival_date,\n    onChange: e => {\n      const value = e.target.value;\n      setItems(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        arrival_date: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1951,\n      columnNumber: 25\n    }\n  })))))))))));\n}","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/AddItem/NewItem.js"],"names":["React","useEffect","useState","useRef","Form","Button","Card","Container","Row","Col","Modal","FormControl","Collapse","InputGroup","ButtonGroup","Spinner","Link","dynamic","useAuth","firebase","LoggedIn","useRouter","fetchClients","ClientTable","ClientInfoModal","ParentModal","MachineSelectionModal","InfoModal","BarcodeScannerComponent","ssr","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","handleClick","NewItem","router","signOut","items","setItems","pn","sn","localSN","price","status","poNumber","length","width","height","arrival_date","visible","editingPn","setEditingPn","editingSn","setEditingSn","DOM","setDOM","oem","setOem","modality","setModality","model","setModel","localLocFrom","setLocalLocFrom","localLocCurrent","setLocalLocCurrent","pnOptions","setPnOptions","snOptions","setSnOptions","descriptions","setDescriptions","description","date","workOrders","setWorkOrders","workOrder","clients","setClients","photos","setPhotos","show","setShow","showErr","setShowErr","Err","setErr","showDescModal","setShowDescModal","showWoModal","setShowWoModal","showClientModal","setShowClientModal","showMachineModal","setShowMachineModal","showParentModal","setShowParentModal","showCameraModal","setShowCameraModal","showSaveModal","setShowSaveModal","machineSelectionModal","setMachineSelectionModal","selectedDesc","setSelectedDesc","selectedClient","setSelectedClient","selectedMachine","setSelectedMachine","selectedCurrentMachine","setSelectedCurrentMachine","selectedParent","setSelectedParent","TheMachine","setTheMachine","machineOptions","setMachineOptions","search","setSearch","capturedPhoto","setCapturedPhoto","cameraFacing","setCameraFacing","addToWebsite","setAddToWebsite","machinePick","setMachinePick","freqItem","setFreqItem","usagePastYear","setUsagePastYear","machineFrequency","setMachineFrequency","showExtra","setShowExtra","addingNewPn","setAddingNewPn","newPn","setNewPn","addingNewSn","setAddingNewSn","newSn","setNewSn","browseInputRef","loading","isReady","fetchClientsData","clientsData","console","log","error","fetchPnSn","db","firestore","snapshot","collection","get","pnSet","Set","snSet","forEach","doc","data","add","machineFieldsInitialized","setMachineFieldsInitialized","updatedFields","updateMachineFields","signal","setSignal","query","handlePnSelect","e","selected","target","value","prev","updatedPn","Array","isArray","handlePnChange","index","addPn","trim","handleSnSelect","updatedSn","handleSnChange","addSn","handleBrowsePhotos","current","click","handleFilesSelected","files","newPhotos","i","push","file","url","URL","createObjectURL","prevPhotos","handleCapture","err","result","capturePhoto","video","document","querySelector","canvas","createElement","videoWidth","videoHeight","context","getContext","drawImage","toBlob","blob","savePhoto","removePhoto","filter","_","handleClose","handleShow","handleCloseErr","handleShowErr","handleCloseSaveModal","handleShowSaveModal","handleCloseDescModal","handleShowDescModal","handleCloseWoModal","handleShowWoModal","handleCloseClientModal","handleShowClientModal","handleCloseMachineModal","handleShowMachineModal","handleCloseParentModal","handleShowParentModal","addDescription","removeDescription","handleDescriptionChange","field","newDescriptions","map","desc","addWorkOrder","removeWorkOrder","handleWorkOrderChange","newWorkOrders","wo","listDescriptions","selectDescription","handleClientInfo","clientId","setShowLocalLocFrom","setShowLocalLocCurrent","clientDoc","exists","clientData","setSelectedClientFrom","id","setSelectedClientCurrent","machinePromises","machines","machineRef","machineDocs","all","machineDoc","fetchMachine","machineId","machineData","OEM","Modality","Model","machinesSnapshot","where","size","calculateItemFrequencyAndUsage","currentDate","Date","oneYearAgo","setFullYear","getFullYear","itemsSnapshot","itemData","workOrderDate","uploadPhotos","docID","storageRef","storage","ref","photoRef","child","metadata","contentType","put","getDownloadURL","handleSubmit","event","preventDefault","toSend","redirect","currentUser","auth","userEmail","email","formattedItems","trackingNumber","addedToWebsite","user","undefined","MachineFrom","MachineCurrent","selectedClientFrom","ClientFrom","selectedClientCurrent","ClientCurrent","Parent","dateCreated","toISOString","split","docId","newDocId","set","update","associatedParts","FieldValue","arrayUnion","currentMachineRef","currentMachineDoc","delete","cleanFormattedItems","shallowClean","generateCustomID","setRedirect","showInfoModal","setShowInfoModal","itemName","setItemName","handleShowInfoModal","handleCloseInfoModal","handleCloseCameraModal","handleChange","prevItems","mostRecentWorkOrder","reduce","latest","latestDate","handleShowCameraModal","randomNum","Math","floor","random","handlePrint","alert","printId","payload","local_sn","response","fetch","method","headers","body","JSON","stringify","json","handleAddNewPn","handleAddNewSn","getPriorityMachineField","currentValue","theMachine","currentMachine","fromMachine","getValidMachineField","showLocalLocFrom","showLocalLocCurrent","handleClone","condition","toLowerCase","handleSetSelectedMachine","machine","currentPnIndex","setCurrentPnIndex","showDropdown","setShowDropdown","currentSnIndex","setCurrentSnIndex","showSnDropdown","setShowSnDropdown","handleAddNewClient","showMachineSelect","setShowMachineSelect","cursor","borderLeft","paddingLeft","marginBottom","client","includes","borderRadius","position","left","transform","bottom","top","backgroundColor","backdropFilter","display","alignItems","justifyContent","zIndex","minHeight","maxWidth","right","border","maxHeight","overflowY","pnOption","idx","padding","key","snOption","marginTop","indexOf","isHidden","currentTarget","checked","photo","objectFit","marginRight","marginLeft","textAlign","margin","textDecoration","color","fontSize"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,sCAAP;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,GALF,EAMEC,GANF,EAOEC,KAPF,EAQEC,WARF,EASEC,QATF,EAUEC,UAVF,EAWEC,WAXF,EAYEC,OAZF,QAaO,iBAbP;AAcA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;;AACA,MAAMC,uBAAuB,GAAGX,OAAO,CACrC,MAAM,OAAO,0BAAP,CAD+B,EAErC;AAAEY,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCADa,0BACb;AAAA,qDADa,0BACb;AAAA;AAAA,CAFqC,CAAvC,C,CAKA;;AACA,SAASC,sBAAT,GAAkC;AAChC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,CAAP;AACD,C,CAED;;;AACA,SAASE,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAvB,EAA8C;AAC5C,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA0BrC,QAAQ,CAAC,KAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,SAAJ,EAAe;AACbR,MAAAA,sBAAsB,GAAGU,IAAzB,CAA8B,MAAMD,UAAU,CAAC,KAAD,CAA9C;AACD;AACF,GAJQ,EAIN,CAACD,SAAD,CAJM,CAAT;;AAKA,QAAMG,WAAW,GAAG,MAAMF,UAAU,CAAC,IAAD,CAApC;;AACA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,IAAGF,KAAM,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,WAAUF,IAAK,EAD7B;AAEE,IAAA,QAAQ,EAAEG,SAFZ;AAGE,IAAA,OAAO,EAAE,CAACA,SAAD,GAAaG,WAAb,GAA2B,IAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,SAAS,GAAG,UAAH,GAAgBF,IAL5B,CADF,CADF;AAWD;;AAED,eAAe,SAASM,OAAT,GAAmB;AAAA;;AAChC,QAAMC,MAAM,GAAGtB,SAAS,EAAxB;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAAc1B,OAAO,EAA3B,CAFgC,CAGhC;AACA;;AACA,QAAM;AAAA,OAAC2B,KAAD;AAAA,OAAQC;AAAR,MAAoB5C,QAAQ,CAAC;AACjCkC,IAAAA,IAAI,EAAE,EAD2B;AAEjCW,IAAAA,EAAE,EAAE,CAAC,EAAD,CAF6B;AAGjCC,IAAAA,EAAE,EAAE,CAAC,EAAD,CAH6B;AAGvB;AACVC,IAAAA,OAAO,EAAE,EAJwB;AAIpB;AACbC,IAAAA,KAAK,EAAE,EAL0B;AAMjCC,IAAAA,MAAM,EAAE,EANyB;AAOjCC,IAAAA,QAAQ,EAAE,EAPuB;AAQjCC,IAAAA,MAAM,EAAE,EARyB;AASjCC,IAAAA,KAAK,EAAE,EAT0B;AAUjCC,IAAAA,MAAM,EAAE,EAVyB;AAWjCC,IAAAA,YAAY,EAAE,EAXmB;AAWf;AAClBC,IAAAA,OAAO,EAAE;AAZwB,GAAD,CAAlC;AAeA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BzD,QAAQ,CAAC,IAAD,CAA1C,CApBgC,CAqBhC;;AAEA,QAAM;AAAA,OAAC0D,SAAD;AAAA,OAAYC;AAAZ,MAA4B3D,QAAQ,CAAC,IAAD,CAA1C,CAvBgC,CAwBhC;AAEA;;AACA,QAAM;AAAA,OAAC4D,GAAD;AAAA,OAAMC;AAAN,MAAgB7D,QAAQ,CAAC,EAAD,CAA9B,CA3BgC,CA4BhC;;AACA,QAAM;AAAA,OAAC8D,GAAD;AAAA,OAAMC;AAAN,MAAgB/D,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAA,OAACgE,QAAD;AAAA,OAAWC;AAAX,MAA0BjE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACkE,KAAD;AAAA,OAAQC;AAAR,MAAoBnE,QAAQ,CAAC,EAAD,CAAlC,CA/BgC,CAiChC;;AACA,QAAM;AAAA,OAACoE,YAAD;AAAA,OAAeC;AAAf,MAAkCrE,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACsE,eAAD;AAAA,OAAkBC;AAAlB,MAAwCvE,QAAQ,CAAC,EAAD,CAAtD,CAnCgC,CAqChC;;AACA,QAAM;AAAA,OAACwE,SAAD;AAAA,OAAYC;AAAZ,MAA4BzE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAAC0E,SAAD;AAAA,OAAYC;AAAZ,MAA4B3E,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAAC4E,YAAD;AAAA,OAAeC;AAAf,MAAkC7E,QAAQ,CAAC,CAC/C;AAAE8E,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAD+C,CAAD,CAAhD;AAGA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BjF,QAAQ,CAAC,CAAC;AAAEkF,IAAAA,SAAS,EAAE,EAAb;AAAiBH,IAAAA,IAAI,EAAE;AAAvB,GAAD,CAAD,CAA5C;AACA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBpF,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACqF,MAAD;AAAA,OAASC;AAAT,MAAsBtF,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACuF,IAAD;AAAA,OAAOC;AAAP,MAAkBxF,QAAQ,CAAC,KAAD,CAAhC,CA9CgC,CA8CS;;AACzC,QAAM;AAAA,OAACyF,OAAD;AAAA,OAAUC;AAAV,MAAwB1F,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAAC2F,GAAD;AAAA,OAAMC;AAAN,MAAgB5F,QAAQ,CAC5B,8CAD4B,CAA9B;AAGA,QAAM;AAAA,OAAC6F,aAAD;AAAA,OAAgBC;AAAhB,MAAoC9F,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC+F,WAAD;AAAA,OAAcC;AAAd,MAAgChG,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACiG,eAAD;AAAA,OAAkBC;AAAlB,MAAwClG,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACmG,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CpG,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACqG,eAAD;AAAA,OAAkBC;AAAlB,MAAwCtG,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACuG,eAAD;AAAA,OAAkBC;AAAlB,MAAwCxG,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACyG,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1G,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC2G,qBAAD;AAAA,OAAwBC;AAAxB,MAAoD5G,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM;AAAA,OAAC6G,YAAD;AAAA,OAAeC;AAAf,MAAkC9G,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM;AAAA,OAAC+G,cAAD;AAAA,OAAiBC;AAAjB,MAAsChH,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM;AAAA,OAACiH,eAAD;AAAA,OAAkBC;AAAlB,MAAwClH,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAACmH,sBAAD;AAAA,OAAyBC;AAAzB,MAAsDpH,QAAQ,CAAC,IAAD,CAApE;AACA,QAAM;AAAA,OAACqH,cAAD;AAAA,OAAiBC;AAAjB,MAAsCtH,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM;AAAA,OAACuH,UAAD;AAAA,OAAaC;AAAb,MAA8BxH,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAACyH,cAAD;AAAA,OAAiBC;AAAjB,MAAsC1H,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAAC2H,MAAD;AAAA,OAASC;AAAT,MAAsB5H,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAC6H,aAAD;AAAA,OAAgBC;AAAhB,MAAoC9H,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAA,OAAC+H,YAAD;AAAA,OAAeC;AAAf,MAAkChI,QAAQ,CAAC,aAAD,CAAhD;AACA,QAAM;AAAA,OAACiI,YAAD;AAAA,OAAeC;AAAf,MAAkClI,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACmI,WAAD;AAAA,OAAcC;AAAd,MAAgCpI,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACqI,QAAD;AAAA,OAAWC;AAAX,MAA0BtI,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAA,OAACuI,aAAD;AAAA,OAAgBC;AAAhB,MAAoCxI,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM;AAAA,OAACyI,gBAAD;AAAA,OAAmBC;AAAnB,MAA0C1I,QAAQ,CAAC,CAAD,CAAxD,CAzEgC,CA0EhC;;AACA,QAAM;AAAA,OAAC2I,SAAD;AAAA,OAAYC;AAAZ,MAA4B5I,QAAQ,CAAC,KAAD,CAA1C,CA3EgC,CA6EhC;;AACA,QAAM;AAAA,OAAC6I,WAAD;AAAA,OAAcC;AAAd,MAAgC9I,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAAC+I,KAAD;AAAA,OAAQC;AAAR,MAAoBhJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACiJ,WAAD;AAAA,OAAcC;AAAd,MAAgClJ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACmJ,KAAD;AAAA,OAAQC;AAAR,MAAoBpJ,QAAQ,CAAC,EAAD,CAAlC,CAjFgC,CAmFhC;;AACA,QAAMqJ,cAAc,GAAGpJ,MAAM,CAAC,IAAD,CAA7B,CApFgC,CAsFhC;;AACA,QAAM;AAAA,OAACqJ,OAAD;AAAA,OAAUjH;AAAV,MAAwBrC,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAI,CAACyC,MAAM,CAAC8G,OAAZ,EAAqB;AACnB,WAAO,IAAP,CADmB,CACN;AACd,GA3F+B,CA6FhC;AACA;;;AACAxJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeyJ,gBAAf,GAAkC;AAChC,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMrI,YAAY,EAAtC;AACAsI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,WAAxB;AACArE,QAAAA,UAAU,CAACqE,WAAD,CAAV;AACD,OAJD,CAIE,OAAOG,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACE,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACD;AACF;;AACDJ,IAAAA,gBAAgB;AACjB,GAXQ,EAWN,EAXM,CAAT;AAaAzJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8J,SAAf,GAA2B;AACzB,YAAMC,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX;AACA,YAAMC,QAAQ,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,GAAtB,EAAvB;AACA,UAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ;AACA,UAAIC,KAAK,GAAG,IAAID,GAAJ,EAAZ;AACAJ,MAAAA,QAAQ,CAACM,OAAT,CAAkBC,GAAD,IAAS;AACxB,cAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAIA,IAAI,CAAC3H,EAAT,EAAasH,KAAK,CAACM,GAAN,CAAUD,IAAI,CAAC3H,EAAf;AACb,YAAI2H,IAAI,CAAC1H,EAAT,EAAauH,KAAK,CAACI,GAAN,CAAUD,IAAI,CAAC1H,EAAf;AACd,OAJD;AAKA2B,MAAAA,YAAY,CAAC,CAAC,GAAG0F,KAAJ,CAAD,CAAZ;AACAxF,MAAAA,YAAY,CAAC,CAAC,GAAG0F,KAAJ,CAAD,CAAZ;AACD;;AACDR,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAiBA,QAAM;AAAA,OAACa,wBAAD;AAAA,OAA2BC;AAA3B,MACJ3K,QAAQ,CAAC,KAAD,CADV;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QACE,CAAC2K,wBAAD,KACCnD,UAAU,IAAIJ,sBAAd,IAAwCF,eADzC,CADF,EAGE;AACA,YAAM2D,aAAa,GAAGC,mBAAmB,CACvCtD,UADuC,EAEvCJ,sBAFuC,EAGvCF,eAHuC,CAAzC,CADA,CAOA;;AACA,UAAI,CAACnD,GAAD,IAAQA,GAAG,KAAK,KAApB,EAA2BC,MAAM,CAAC6G,aAAa,CAAC9G,GAAf,CAAN;AAC3B,UAAI,CAACE,QAAD,IAAaA,QAAQ,KAAK,KAA9B,EAAqCC,WAAW,CAAC2G,aAAa,CAAC5G,QAAf,CAAX;AACrC,UAAI,CAACE,KAAD,IAAUA,KAAK,KAAK,KAAxB,EAA+BC,QAAQ,CAACyG,aAAa,CAAC1G,KAAf,CAAR;AAE/ByG,MAAAA,2BAA2B,CAAC,IAAD,CAA3B;AACD;AACF,GAlBQ,EAkBN,CACDpD,UADC,EAEDJ,sBAFC,EAGDF,eAHC,EAIDyD,wBAJC,CAlBM,CAAT;AAyBA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsB/K,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0C,MAAM,CAAC8G,OAAX,EAAoB;AAClBwB,MAAAA,SAAS,CAACtI,MAAM,CAACuI,KAAP,CAAaF,MAAb,IAAuB,IAAxB,CAAT;AACD;AACF,GAJQ,EAIN,CAACrI,MAAM,CAAC8G,OAAR,EAAiB9G,MAAM,CAACuI,KAAP,CAAaF,MAA9B,CAJM,CAAT,CA3JgC,CAiKhC;AAEA;;AACA,QAAMG,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAzI,IAAAA,QAAQ,CAAE0I,IAAD,IAAU;AACjB,UAAIC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACzI,EAAnB,IAAyB,CAAC,GAAGyI,IAAI,CAACzI,EAAT,CAAzB,GAAwC,EAAxD;AACA0I,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeJ,QAAf;AACA,6CAAYG,IAAZ;AAAkBzI,QAAAA,EAAE,EAAE0I;AAAtB;AACD,KAJO,CAAR;AAKD,GAPD;;AASA,QAAMG,cAAc,GAAG,CAACC,KAAD,EAAQN,KAAR,KAAkB;AACvCzI,IAAAA,QAAQ,CAAE0I,IAAD,IAAU;AACjB,YAAMvC,KAAK,GAAG,CAAC,GAAGuC,IAAI,CAACzI,EAAT,CAAd;AACAkG,MAAAA,KAAK,CAAC4C,KAAD,CAAL,GAAeN,KAAf;AACA,6CAAYC,IAAZ;AAAkBzI,QAAAA,EAAE,EAAEkG;AAAtB;AACD,KAJO,CAAR;AAKD,GAND;;AAQA,QAAM6C,KAAK,GAAG,MAAM;AAClB,QAAI7C,KAAK,CAAC8C,IAAN,OAAiB,EAArB,EAAyB;AACvBjJ,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEPzI,QAAAA,EAAE,EAAE,CAAC,GAAGyI,IAAI,CAACzI,EAAT,EAAakG,KAAK,CAAC8C,IAAN,EAAb;AAFG,QAAD,CAAR;AAID;;AACD7C,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GATD,CArLgC,CAgMhC;;;AACA,QAAMgD,cAAc,GAAIZ,CAAD,IAAO;AAC5B,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAzI,IAAAA,QAAQ,CAAE0I,IAAD,IAAU;AACjB,UAAIS,SAAS,GAAGP,KAAK,CAACC,OAAN,CAAcH,IAAI,CAACxI,EAAnB,IAAyB,CAAC,GAAGwI,IAAI,CAACxI,EAAT,CAAzB,GAAwC,EAAxD;AACAiJ,MAAAA,SAAS,CAAC,CAAD,CAAT,GAAeZ,QAAf;AACA,6CAAYG,IAAZ;AAAkBxI,QAAAA,EAAE,EAAEiJ;AAAtB;AACD,KAJO,CAAR;AAKD,GAPD;;AASA,QAAMC,cAAc,GAAG,CAACL,KAAD,EAAQN,KAAR,KAAkB;AACvCzI,IAAAA,QAAQ,CAAE0I,IAAD,IAAU;AACjB,YAAMnC,KAAK,GAAG,CAAC,GAAGmC,IAAI,CAACxI,EAAT,CAAd;AACAqG,MAAAA,KAAK,CAACwC,KAAD,CAAL,GAAeN,KAAf;AACA,6CAAYC,IAAZ;AAAkBxI,QAAAA,EAAE,EAAEqG;AAAtB;AACD,KAJO,CAAR;AAKD,GAND;;AAQA,QAAM8C,KAAK,GAAG,MAAM;AAClB,QAAI9C,KAAK,CAAC0C,IAAN,OAAiB,EAArB,EAAyB;AACvBjJ,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEPxI,QAAAA,EAAE,EAAE,CAAC,GAAGwI,IAAI,CAACxI,EAAT,EAAaqG,KAAK,CAAC0C,IAAN,EAAb;AAFG,QAAD,CAAR;AAID;;AACDzC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GATD,CAlNgC,CA6NhC;;;AACA,QAAMgD,kBAAkB,GAAG,MAAM;AAC/B,QAAI7C,cAAc,CAAC8C,OAAnB,EAA4B;AAC1B9C,MAAAA,cAAc,CAAC8C,OAAf,CAAuBC,KAAvB;AACD;AACF,GAJD;;AAMA,QAAMC,mBAAmB,GAAInB,CAAD,IAAO;AACjC,UAAMoB,KAAK,GAAGpB,CAAC,CAACE,MAAF,CAASkB,KAAvB;;AACA,QAAIA,KAAK,CAACnJ,MAAV,EAAkB;AAChB,YAAMoJ,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACnJ,MAA1B,EAAkCqJ,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,UAAAA,IAAI,EAAEJ,KAAK,CAACE,CAAD,CADE;AAEbG,UAAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBP,KAAK,CAACE,CAAD,CAAzB;AAFQ,SAAf;AAID;;AACDlH,MAAAA,SAAS,CAAEwH,UAAD,IAAgB,CAAC,GAAGA,UAAJ,EAAgB,GAAGP,SAAnB,CAAjB,CAAT;AACD;;AACDrB,IAAAA,CAAC,CAACE,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACD,GAbD,CApOgC,CAmPhC;;;AACA,QAAM0B,aAAa,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACrC,QAAIA,MAAJ,EAAY;AACVnF,MAAAA,gBAAgB,CAACmF,MAAD,CAAhB;AACD;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf;AACAD,IAAAA,MAAM,CAAClK,KAAP,GAAe+J,KAAK,CAACK,UAArB;AACAF,IAAAA,MAAM,CAACjK,MAAP,GAAgB8J,KAAK,CAACM,WAAtB;AACA,UAAMC,OAAO,GAAGJ,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkBT,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BG,MAAM,CAAClK,KAAtC,EAA6CkK,MAAM,CAACjK,MAApD;AACAiK,IAAAA,MAAM,CAACO,MAAP,CAAeC,IAAD,IAAU;AACtBhG,MAAAA,gBAAgB,CAACgG,IAAD,CAAhB;AACD,KAFD,EAEG,WAFH;AAGD,GAVD;;AAYA,QAAMC,SAAS,GAAG,MAAM;AACtBzI,IAAAA,SAAS,CAAEwH,UAAD,IAAgB,CACxB,GAAGA,UADqB,EAExB;AAAEJ,MAAAA,IAAI,EAAE7E,aAAR;AAAuB8E,MAAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBhF,aAApB;AAA5B,KAFwB,CAAjB,CAAT;AAIAC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAtB,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAPD;;AASA,QAAMwH,WAAW,GAAIrC,KAAD,IAAW;AAC7BrG,IAAAA,SAAS,CAACD,MAAM,CAAC4I,MAAP,CAAc,CAACC,CAAD,EAAI1B,CAAJ,KAAUA,CAAC,KAAKb,KAA9B,CAAD,CAAT;AACD,GAFD,CA/QgC,CAmRhC;;;AACA,QAAMwC,WAAW,GAAG,MAAM3I,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAM4I,UAAU,GAAG,MAAM5I,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAM6I,cAAc,GAAG,MAAM3I,UAAU,CAAC,KAAD,CAAvC;;AACA,QAAM4I,aAAa,GAAG,MAAM5I,UAAU,CAAC,IAAD,CAAtC;;AACA,QAAM6I,oBAAoB,GAAG,MAAM7H,gBAAgB,CAAC,KAAD,CAAnD;;AACA,QAAM8H,mBAAmB,GAAG,MAAM9H,gBAAgB,CAAC,IAAD,CAAlD;;AACA,QAAM+H,oBAAoB,GAAG,MAAM3I,gBAAgB,CAAC,KAAD,CAAnD;;AACA,QAAM4I,mBAAmB,GAAG,MAAM5I,gBAAgB,CAAC,IAAD,CAAlD;;AACA,QAAM6I,kBAAkB,GAAG,MAAM3I,cAAc,CAAC,KAAD,CAA/C;;AACA,QAAM4I,iBAAiB,GAAG,MAAM5I,cAAc,CAAC,IAAD,CAA9C;;AACA,QAAM6I,sBAAsB,GAAG,MAAM3I,kBAAkB,CAAC,KAAD,CAAvD;;AACA,QAAM4I,qBAAqB,GAAG,MAAM5I,kBAAkB,CAAC,IAAD,CAAtD;;AACA,QAAM6I,uBAAuB,GAAG,MAAM3I,mBAAmB,CAAC,KAAD,CAAzD;;AACA,QAAM4I,sBAAsB,GAAG,MAAM;AACnC5I,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHD;;AAIA,QAAM+I,sBAAsB,GAAG,MAAM3I,kBAAkB,CAAC,KAAD,CAAvD;;AACA,QAAM4I,qBAAqB,GAAG,MAAM5I,kBAAkB,CAAC,IAAD,CAAtD,CAtSgC,CAwShC;;;AACA,QAAM6I,cAAc,GAAG,MAAM;AAC3BtK,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB;AAAEE,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAlB,CAAD,CAAf;AACD,GAFD;;AAIA,QAAMqK,iBAAiB,GAAIzD,KAAD,IAAW;AACnC9G,IAAAA,eAAe,CAACD,YAAY,CAACqJ,MAAb,CAAoB,CAACC,CAAD,EAAI1B,CAAJ,KAAUA,CAAC,KAAKb,KAApC,CAAD,CAAf;AACD,GAFD;;AAIA,QAAM0D,uBAAuB,GAAG,CAAC1D,KAAD,EAAQ2D,KAAR,EAAejE,KAAf,KAAyB;AACvD,UAAMkE,eAAe,GAAG3K,YAAY,CAAC4K,GAAb,CAAiB,CAACC,IAAD,EAAOjD,CAAP,KACvCA,CAAC,KAAKb,KAAN,mCAAmB8D,IAAnB;AAAyB,OAACH,KAAD,GAASjE;AAAlC,SAA4CoE,IADtB,CAAxB;AAGA5K,IAAAA,eAAe,CAAC0K,eAAD,CAAf;AACD,GALD;;AAOA,QAAMG,YAAY,GAAG,MAAM;AACzBzK,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB;AAAEE,MAAAA,SAAS,EAAE,EAAb;AAAiBH,MAAAA,IAAI,EAAE;AAAvB,KAAhB,CAAD,CAAb;AACD,GAFD;;AAIA,QAAM4K,eAAe,GAAIhE,KAAD,IAAW;AACjC1G,IAAAA,aAAa,CAACD,UAAU,CAACiJ,MAAX,CAAkB,CAACC,CAAD,EAAI1B,CAAJ,KAAUA,CAAC,KAAKb,KAAlC,CAAD,CAAb;AACD,GAFD;;AAIA,QAAMiE,qBAAqB,GAAG,CAACjE,KAAD,EAAQ2D,KAAR,EAAejE,KAAf,KAAyB;AACrD,UAAMwE,aAAa,GAAG7K,UAAU,CAACwK,GAAX,CAAe,CAACM,EAAD,EAAKtD,CAAL,KACnCA,CAAC,KAAKb,KAAN,mCAAmBmE,EAAnB;AAAuB,OAACR,KAAD,GAASjE;AAAhC,SAA0CyE,EADtB,CAAtB;AAGA7K,IAAAA,aAAa,CAAC4K,aAAD,CAAb;AACD,GALD;;AAOA,QAAME,gBAAgB,GAAG,MAAM;AAC7BjK,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAMkK,iBAAiB,GAAIrE,KAAD,IAAW;AACnC7E,IAAAA,eAAe,CAAC6E,KAAD,CAAf;AACA7F,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD,CA3UgC,CAgVhC;;;AACA,QAAMmK,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3C;AACA,QAAI/H,WAAJ,EAAiB;AACfjB,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAiJ,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAHD,MAGO;AACL/I,MAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAgJ,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;;AAED,UAAMtG,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX;AACA,UAAMsG,SAAS,GAAG,MAAMvG,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBM,GAAxB,CAA4B2F,QAA5B,EAAsChG,GAAtC,EAAxB;;AACA,QAAImG,SAAS,CAACC,MAAd,EAAsB;AACpB,YAAMC,UAAU,GAAGF,SAAS,CAAC7F,IAAV,EAAnB;;AACA,UAAIrC,WAAJ,EAAiB;AACfqI,QAAAA,qBAAqB;AAAGC,UAAAA,EAAE,EAAEJ,SAAS,CAACI;AAAjB,WAAwBF,UAAxB,EAArB;AACD,OAFD,MAEO;AACLG,QAAAA,wBAAwB;AAAGD,UAAAA,EAAE,EAAEJ,SAAS,CAACI;AAAjB,WAAwBF,UAAxB,EAAxB;AACD,OANmB,CAOpB;;;AACA,YAAMI,eAAe,GAAGJ,UAAU,CAACK,QAAX,CAAoBpB,GAApB,CAAyBqB,UAAD,IAC9CA,UAAU,CAAC3G,GAAX,EADsB,CAAxB;AAGA,YAAM4G,WAAW,GAAG,MAAMjP,OAAO,CAACkP,GAAR,CAAYJ,eAAZ,CAA1B;AACA,YAAMC,QAAQ,GAAGE,WAAW,CAACtB,GAAZ,CAAiBwB,UAAD;AAC/BP,QAAAA,EAAE,EAAEO,UAAU,CAACP;AADgB,SAE5BO,UAAU,CAACxG,IAAX,EAF4B,CAAhB,CAAjB;AAIA9C,MAAAA,iBAAiB,CAACkJ,QAAD,CAAjB;AACA/B,MAAAA,sBAAsB;AACvB;AACF,GA/BD;;AAiCA,QAAMoC,YAAY,GAAG,MAAOC,SAAP,IAAqB;AACxC,UAAMpH,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX;AACA,UAAMQ,GAAG,GAAG,MAAMT,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6B2G,SAA7B,EAAwChH,GAAxC,EAAlB;;AACA,QAAIK,GAAG,CAAC+F,MAAR,EAAgB;AACd,YAAMa,WAAW,GAAG5G,GAAG,CAACC,IAAJ,EAApB;AACAhD,MAAAA,aAAa,CAAC2J,WAAD,CAAb,CAFc,CAId;;AACA,UAAI,CAACrN,GAAD,IAAQA,GAAG,KAAK,KAApB,EACEC,MAAM,CAACoN,WAAW,CAACrN,GAAZ,IAAmBqN,WAAW,CAACC,GAA/B,IAAsC,EAAvC,CAAN;AACF,UAAI,CAACpN,QAAD,IAAaA,QAAQ,KAAK,KAA9B,EACEC,WAAW,CAACkN,WAAW,CAACnN,QAAZ,IAAwBmN,WAAW,CAACE,QAApC,IAAgD,EAAjD,CAAX;AACF,UAAI,CAACnN,KAAD,IAAUA,KAAK,KAAK,KAAxB,EACEC,QAAQ,CAACgN,WAAW,CAACjN,KAAZ,IAAqBiN,WAAW,CAACG,KAAjC,IAA0C,EAA3C,CAAR,CAVY,CAYd;;AACA,YAAMC,gBAAgB,GAAG,MAAMzH,EAAE,CAC9BG,UAD4B,CACjB,SADiB,EAE5BuH,KAF4B,CAEtB,OAFsB,EAEb,IAFa,EAEPL,WAAW,CAACG,KAAZ,IAAqBH,WAAW,CAACjN,KAF1B,EAG5BgG,GAH4B,EAA/B;AAIAxB,MAAAA,mBAAmB,CAAC6I,gBAAgB,CAACE,IAAlB,CAAnB;AACD,KAlBD,MAkBO;AACL/H,MAAAA,OAAO,CAACE,KAAR,CAAc,mBAAd;AACD;AACF,GAxBD,CAlXgC,CA4YhC;;;AACA,QAAM8H,8BAA8B,GAAG,MAAO7O,EAAP,IAAc;AACnD,UAAMiH,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX;AACA,UAAM4H,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,UAAMC,UAAU,GAAG,IAAID,IAAJ,EAAnB;AACAC,IAAAA,UAAU,CAACC,WAAX,CAAuBH,WAAW,CAACI,WAAZ,KAA4B,CAAnD;AACA,UAAMC,aAAa,GAAG,MAAMlI,EAAE,CAC3BG,UADyB,CACd,MADc,EAEzBuH,KAFyB,CAEnB,IAFmB,EAEb,IAFa,EAEP3O,EAFO,EAGzBqH,GAHyB,EAA5B;AAIA5B,IAAAA,WAAW,CAAC0J,aAAa,CAACP,IAAf,CAAX;AACA,QAAIlJ,aAAa,GAAG,CAApB;AACAyJ,IAAAA,aAAa,CAAC1H,OAAd,CAAuBC,GAAD,IAAS;AAC7B,YAAM0H,QAAQ,GAAG1H,GAAG,CAACC,IAAJ,EAAjB;AACAyH,MAAAA,QAAQ,CAACjN,UAAT,CAAoBsF,OAApB,CAA6BpF,SAAD,IAAe;AACzC,cAAMgN,aAAa,GAAG,IAAIN,IAAJ,CAAS1M,SAAS,CAACH,IAAnB,CAAtB;;AACA,YAAImN,aAAa,IAAIL,UAAjB,IAA+BK,aAAa,IAAIP,WAApD,EAAiE;AAC/DpJ,UAAAA,aAAa;AACd;AACF,OALD;AAMD,KARD;AASAC,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GArBD,CA7YgC,CAoahC;;;AACA,QAAM4J,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,UAAU,GAAGpR,QAAQ,CAACqR,OAAT,GAAmBC,GAAnB,EAAnB;;AACA,SAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnH,MAAM,CAAClC,MAA3B,EAAmCqJ,CAAC,EAApC,EAAwC;AACtC,UAAInH,MAAM,CAACmH,CAAD,CAAN,CAAUE,IAAd,EAAoB;AAClB,cAAM8F,QAAQ,GAAGH,UAAU,CAACI,KAAX,CACd,SAAQL,KAAM,IAAGA,KAAM,GAAE5F,CAAC,KAAK,CAAN,GAAU,MAAV,GAAoB,IAAGA,CAAC,GAAG,CAAE,MAAM,EAD9C,CAAjB;AAGA,cAAMkG,QAAQ,GAAG;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAjB;AACA,cAAMH,QAAQ,CAACI,GAAT,CAAavN,MAAM,CAACmH,CAAD,CAAN,CAAUE,IAAvB,EAA6BgG,QAA7B,CAAN;AACA,cAAM/F,GAAG,GAAG,MAAM6F,QAAQ,CAACK,cAAT,EAAlB;AACAxN,QAAAA,MAAM,CAACmH,CAAD,CAAN,CAAUG,GAAV,GAAgBA,GAAhB;AACD;AACF;AACF,GAbD,CAragC,CAobhC;AACA;;;AACA,iBAAemG,YAAf,CAA4BC,KAA5B,EAAmC;AAAA;;AACjCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACrQ,KAAK,CAACT,IAAP,IAAe,oBAAC0C,YAAY,CAAC,CAAD,CAAb,2CAAC,eAAiBE,WAAlB,CAAnB,EAAkD;AAChDsJ,MAAAA,UAAU;AACX,KAFD,MAEO;AACL/L,MAAAA,UAAU,CAAC,IAAD,CAAV,CADK,CACa;;AAClB,UAAI;AACF,cAAM4Q,MAAM,EAAZ;AACD,OAFD,CAEE,OAAOrJ,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,OAJD,SAIU;AACRvH,QAAAA,UAAU,CAAC,KAAD,CAAV,CADQ,CACW;AACpB;AACF;AACF;;AAED,iBAAe4Q,MAAf,CAAsBC,QAAQ,GAAG,IAAjC,EAAuC;AACrC,UAAM;AAAEzC,MAAAA;AAAF,QAAShO,MAAM,CAACuI,KAAtB,CADqC,CACR;;AAC7B,UAAMlB,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX,CAFqC,CAIrC;;AACA,UAAMoJ,WAAW,GAAGlS,QAAQ,CAACmS,IAAT,GAAgBD,WAApC;AACA,UAAME,SAAS,GAAGF,WAAW,GAAGA,WAAW,CAACG,KAAf,GAAuB,SAApD,CANqC,CAQrC;;AACA,UAAMnC,WAAW,mCACX5J,UAAU,IAAI,EADH;AAEfzD,MAAAA,GAAG,EAAEA,GAFU;AAGfE,MAAAA,QAAQ,EAAEA,QAHK;AAIfE,MAAAA,KAAK,EAAEA;AAJQ,MAAjB;;AAOA,UAAMqP,cAAc,mCAAQ5Q,KAAR;AAAeiC,MAAAA,YAAf;AAA6BI,MAAAA;AAA7B,MAApB,CAhBqC,CAiBrC;;;AACAuO,IAAAA,cAAc,CAACtQ,MAAf,GAAwBN,KAAK,CAACM,MAAN,IAAgB,EAAxC;AACAsQ,IAAAA,cAAc,CAAC3P,GAAf,GAAqBA,GAArB,CAnBqC,CAmBX;;AAC1B2P,IAAAA,cAAc,CAACnP,YAAf,GAA8BA,YAAY,IAAI,EAA9C;AACAmP,IAAAA,cAAc,CAACjP,eAAf,GAAiCA,eAAe,IAAI,EAApD;AACAiP,IAAAA,cAAc,CAACxO,IAAf,GAAsBpC,KAAK,CAACoC,IAAN,IAAc,EAApC;AACAwO,IAAAA,cAAc,CAACjQ,YAAf,GAA8BX,KAAK,CAACW,YAAN,IAAsB,EAApD,CAvBqC,CAuBmB;;AACxDiQ,IAAAA,cAAc,CAACrQ,QAAf,GAA0BP,KAAK,CAACO,QAAN,IAAkB,EAA5C;AACAqQ,IAAAA,cAAc,CAACC,cAAf,GAAgC7Q,KAAK,CAAC6Q,cAAN,IAAwB,EAAxD;AACAD,IAAAA,cAAc,CAAChM,UAAf,GAA4B4J,WAAW,IAAI,EAA3C;AACAoC,IAAAA,cAAc,CAACE,cAAf,GAAgCxL,YAAhC;AACAsL,IAAAA,cAAc,CAAChQ,OAAf,GAAyBZ,KAAK,CAACY,OAA/B,CA5BqC,CA8BrC;;AACAgQ,IAAAA,cAAc,CAACG,IAAf,GAAsBL,SAAtB,CA/BqC,CAgCrC;;AACAE,IAAAA,cAAc,CAAC1Q,EAAf,GAAoB,CAACF,KAAK,CAACE,EAAN,IAAY,EAAb,EAAiB2M,GAAjB,CAAsBnE,KAAD,IACvCA,KAAK,KAAKsI,SAAV,GAAsB,EAAtB,GAA2BtI,KADT,CAApB;AAGAkI,IAAAA,cAAc,CAACzQ,EAAf,GAAoB,CAACH,KAAK,CAACG,EAAN,IAAY,EAAb,EAAiB0M,GAAjB,CAAsBnE,KAAD,IACvCA,KAAK,KAAKsI,SAAV,GAAsB,EAAtB,GAA2BtI,KADT,CAApB,CApCqC,CAwCrC;;AACA,QAAIpE,eAAe,IAAIA,eAAe,CAACwJ,EAAvC,EAA2C;AACzC8C,MAAAA,cAAc,CAACK,WAAf,GAA6B9J,EAAE,CAC5BG,UAD0B,CACf,SADe,EAE1BM,GAF0B,CAEtBtD,eAAe,CAACwJ,EAFM,CAA7B;AAGD;;AACD,QAAItJ,sBAAsB,IAAIA,sBAAsB,CAACsJ,EAArD,EAAyD;AACvD8C,MAAAA,cAAc,CAACM,cAAf,GAAgC/J,EAAE,CAC/BG,UAD6B,CAClB,SADkB,EAE7BM,GAF6B,CAEzBpD,sBAAsB,CAACsJ,EAFE,CAAhC;AAGD,KAlDoC,CAoDrC;;;AACA,QAAIqD,kBAAkB,IAAIA,kBAAkB,CAACrD,EAA7C,EAAiD;AAC/C8C,MAAAA,cAAc,CAACQ,UAAf,GAA4BjK,EAAE,CAC3BG,UADyB,CACd,QADc,EAEzBM,GAFyB,CAErBuJ,kBAAkB,CAACrD,EAFE,CAA5B;AAGD;;AACD,QAAIuD,qBAAqB,IAAIA,qBAAqB,CAACvD,EAAnD,EAAuD;AACrD8C,MAAAA,cAAc,CAACU,aAAf,GAA+BnK,EAAE,CAC9BG,UAD4B,CACjB,QADiB,EAE5BM,GAF4B,CAExByJ,qBAAqB,CAACvD,EAFE,CAA/B;AAGD,KA9DoC,CA+DrC;;;AAEA,QAAIpJ,cAAc,IAAIA,cAAc,CAACoJ,EAArC,EAAyC;AACvC8C,MAAAA,cAAc,CAACW,MAAf,GAAwBpK,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0BlD,cAAc,CAACoJ,EAAzC,CAAxB;AACD,KAnEoC,CAqErC;;;AACA,QAAI,CAACA,EAAL,EAAS;AACP8C,MAAAA,cAAc,CAACY,WAAf,GAA6B,IAAIvC,IAAJ,GAAWwC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAA7B,CADO,CAC8D;AACtE,KAxEoC,CA0ErC;;;AACA,QAAIC,KAAK,GAAG7D,EAAE,IAAI,IAAlB;;AACA,QAAI;AACF,UAAI6D,KAAJ,EAAW;AACT;AACA,cAAMC,QAAQ,GACZ5R,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACI,OAAN,CAAc8I,IAAd,OAAyB,EAA1C,GACIlJ,KAAK,CAACI,OAAN,CAAc8I,IAAd,EADJ,GAEIyI,KAHN;;AAIA,YAAIA,KAAK,KAAKC,QAAd,EAAwB;AACtB;AACA,gBAAMzK,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0BgK,QAA1B,EAAoCC,GAApC,CAAwCjB,cAAxC,CAAN;;AAEA,cAAItM,eAAe,IAAIA,eAAe,CAACwJ,EAAvC,EAA2C;AACzC,kBAAMI,UAAU,GAAG/G,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6BtD,eAAe,CAACwJ,EAA7C,CAAnB;AACA,kBAAMO,UAAU,GAAG,MAAMH,UAAU,CAAC3G,GAAX,EAAzB;;AACA,gBAAI8G,UAAU,CAACV,MAAf,EAAuB;AACrB,oBAAMO,UAAU,CAAC4D,MAAX,CAAkB;AACtBC,gBAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0BgK,QAA1B,CADe;AADK,eAAlB,CAAN;AAKD;AACF;;AAED,cAAIpN,sBAAsB,IAAIA,sBAAsB,CAACsJ,EAArD,EAAyD;AACvD,kBAAMoE,iBAAiB,GAAG/K,EAAE,CACzBG,UADuB,CACZ,SADY,EAEvBM,GAFuB,CAEnBpD,sBAAsB,CAACsJ,EAFJ,CAA1B;AAGA,kBAAMqE,iBAAiB,GAAG,MAAMD,iBAAiB,CAAC3K,GAAlB,EAAhC;;AACA,gBAAI4K,iBAAiB,CAACxE,MAAtB,EAA8B;AAC5B,oBAAMuE,iBAAiB,CAACJ,MAAlB,CAAyB;AAC7BC,gBAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0BgK,QAA1B,CADe;AADY,eAAzB,CAAN;AAKD;AACF,WA5BqB,CA6BtB;;;AACA,gBAAMzK,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,EAAiCS,MAAjC,EAAN,CA9BsB,CA+BtB;;AACAT,UAAAA,KAAK,GAAGC,QAAR;AACD,SAjCD,MAiCO;AACL;AACA,gBAAMS,mBAAmB,GAAGC,YAAY,CAAC1B,cAAD,CAAxC;AACA,gBAAMzJ,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,EAAiCG,MAAjC,CAAwCO,mBAAxC,CAAN;;AAEA,cAAI/N,eAAe,IAAIA,eAAe,CAACwJ,EAAvC,EAA2C;AACzC,kBAAMI,UAAU,GAAG/G,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6BtD,eAAe,CAACwJ,EAA7C,CAAnB;AACA,kBAAMO,UAAU,GAAG,MAAMH,UAAU,CAAC3G,GAAX,EAAzB;;AACA,gBAAI8G,UAAU,CAACV,MAAf,EAAuB;AACrB,oBAAMO,UAAU,CAAC4D,MAAX,CAAkB;AACtBC,gBAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,CADe;AADK,eAAlB,CAAN;AAKD;AACF;;AAED,cAAInN,sBAAsB,IAAIA,sBAAsB,CAACsJ,EAArD,EAAyD;AACvD,kBAAMoE,iBAAiB,GAAG/K,EAAE,CACzBG,UADuB,CACZ,SADY,EAEvBM,GAFuB,CAEnBpD,sBAAsB,CAACsJ,EAFJ,CAA1B;AAGA,kBAAMqE,iBAAiB,GAAG,MAAMD,iBAAiB,CAAC3K,GAAlB,EAAhC;;AACA,gBAAI4K,iBAAiB,CAACxE,MAAtB,EAA8B;AAC5B,oBAAMuE,iBAAiB,CAACJ,MAAlB,CAAyB;AAC7BC,gBAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,CADe;AADY,eAAzB,CAAN;AAKD;AACF;AACF;AACF,OAtED,MAsEO;AACL;AACAA,QAAAA,KAAK,GACH3R,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACI,OAAN,CAAc8I,IAAd,OAAyB,EAA1C,GACIlJ,KAAK,CAACI,OAAN,CAAc8I,IAAd,EADJ,GAEIqJ,gBAAgB,EAHtB;AAIA,cAAMpL,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,EAAiCE,GAAjC,CAAqCjB,cAArC,CAAN;;AAEA,YAAItM,eAAe,IAAIA,eAAe,CAACwJ,EAAvC,EAA2C;AACzC,gBAAMI,UAAU,GAAG/G,EAAE,CAACG,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6BtD,eAAe,CAACwJ,EAA7C,CAAnB;AACA,gBAAMO,UAAU,GAAG,MAAMH,UAAU,CAAC3G,GAAX,EAAzB;;AACA,cAAI8G,UAAU,CAACV,MAAf,EAAuB;AACrB,kBAAMO,UAAU,CAAC4D,MAAX,CAAkB;AACtBC,cAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,CADe;AADK,aAAlB,CAAN;AAKD;AACF;;AAED,YAAInN,sBAAsB,IAAIA,sBAAsB,CAACsJ,EAArD,EAAyD;AACvD,gBAAMoE,iBAAiB,GAAG/K,EAAE,CACzBG,UADuB,CACZ,SADY,EAEvBM,GAFuB,CAEnBpD,sBAAsB,CAACsJ,EAFJ,CAA1B;AAGA,gBAAMqE,iBAAiB,GAAG,MAAMD,iBAAiB,CAAC3K,GAAlB,EAAhC;;AACA,cAAI4K,iBAAiB,CAACxE,MAAtB,EAA8B;AAC5B,kBAAMuE,iBAAiB,CAACJ,MAAlB,CAAyB;AAC7BC,cAAAA,eAAe,EAAEzT,QAAQ,CAAC8I,SAAT,CAAmB4K,UAAnB,CAA8BC,UAA9B,CACf9K,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0B+J,KAA1B,CADe;AADY,aAAzB,CAAN;AAKD;AACF;AACF,OAxGC,CAyGF;;;AACA,YAAMnC,YAAY,CAACmC,KAAD,CAAlB;AACA5K,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EA3GE,CA6GF;;AACA,UAAIuJ,QAAJ,EAAc;AACZzQ,QAAAA,MAAM,CAACgK,IAAP,CAAa,mBAAkB6H,KAAM,EAArC;AACD,OAFD,MAEO;AACLa,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAlHC,CAoHF;;;AACA3G,MAAAA,mBAAmB;AACpB,KAtHD,CAsHE,OAAO5E,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD;AACF,GA3oB+B,CA6oBhC;;;AACA,QAAM;AAAA,OAACwL,aAAD;AAAA,OAAgBC;AAAhB,MAAoCrV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACsV,QAAD;AAAA,OAAWC;AAAX,MAA0BvV,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMwV,mBAAmB,GAAG,YAAY;AACtC,UAAM1L,EAAE,GAAG7I,QAAQ,CAAC8I,SAAT,EAAX;;AACA,QAAI;AACF,YAAMQ,GAAG,GAAG,MAAMT,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBM,GAAtB,CAA0BkG,EAA1B,EAA8BvG,GAA9B,EAAlB;;AACA,UAAIK,GAAG,CAAC+F,MAAR,EAAgB;AACd,cAAM9F,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA+K,QAAAA,WAAW,CAAC/K,IAAI,CAACtI,IAAL,IAAa,KAAd,CAAX;AACAmT,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OAJD,MAIO;AACL3L,QAAAA,OAAO,CAACE,KAAR,CAAc,gBAAd;AACD;AACF,KATD,CASE,OAAOA,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,GAdD;;AAeA,QAAM6L,oBAAoB,GAAG,MAAMJ,gBAAgB,CAAC,KAAD,CAAnD;;AAEA,QAAMK,sBAAsB,GAAG,MAAM;AACnClP,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAsB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAHD;;AAKA,QAAM6N,YAAY,GAAIrG,KAAD,IAAYyD,KAAD,IAAW;AACzC,UAAM1H,KAAK,GAAG0H,KAAK,CAAC3H,MAAN,GAAe2H,KAAK,CAAC3H,MAAN,CAAaC,KAA5B,GAAoC0H,KAAK,CAAC1H,KAAxD;AACAzI,IAAAA,QAAQ,CAAEgT,SAAD,oCAAqBA,SAArB;AAAgC,OAACtG,KAAD,GAASjE;AAAzC,MAAD,CAAR;AACD,GAHD;;AAKA,QAAMwK,mBAAmB,GACvB7Q,UAAU,IAAIA,UAAU,CAAC7B,MAAX,GAAoB,CAAlC,GACI6B,UAAU,CAAC8Q,MAAX,CAAkB,CAACC,MAAD,EAAS5J,OAAT,KAAqB;AACrC,UAAM6J,UAAU,GAAG,IAAIpE,IAAJ,CAASmE,MAAM,CAAChR,IAAhB,CAAnB;AACA,UAAM4M,WAAW,GAAG,IAAIC,IAAJ,CAASzF,OAAO,CAACpH,IAAjB,CAApB;AACA,WAAO4M,WAAW,GAAGqE,UAAd,GAA2B7J,OAA3B,GAAqC4J,MAA5C;AACD,GAJD,EAIG/Q,UAAU,CAAC,CAAD,CAJb,CADJ,GAMI,EAPN;;AASA,QAAMiR,qBAAqB,GAAG,MAAM;AAClCzP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAM0O,gBAAgB,GAAG,MAAM;AAC7B,UAAMgB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,QAAQD,IAAI,CAACE,MAAL,KAAgB,KAAnC,CAAlB;AACA,WAAQ,MAAKH,SAAU,EAAvB;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,YAAY;AAC9B,QAAI,CAAC3T,KAAK,CAACT,IAAX,EAAiB;AACfqU,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA;AACD,KAJ6B,CAM9B;;;AACA,UAAMC,OAAO,GAAGtB,gBAAgB,EAAhC;AAEA,UAAMuB,OAAO,GAAG;AACdvU,MAAAA,IAAI,EAAES,KAAK,CAACT,IADE;AAEdW,MAAAA,EAAE,EAAEF,KAAK,CAACE,EAFI;AAGdC,MAAAA,EAAE,EAAEH,KAAK,CAACG,EAHI;AAIdgN,MAAAA,EAAE,EAAE9K,UAAU,IAAIA,UAAU,CAAC7B,MAAX,GAAoB,CAAlC,GAAsC6B,UAAU,CAAC,CAAD,CAAV,CAAcE,SAApD,GAAgE,EAJtD;AAKdjC,MAAAA,MAAM,EAAEN,KAAK,CAACM,MALA;AAMdyT,MAAAA,QAAQ,EAAEF,OANI;AAMK;AACnB5R,MAAAA,YAAY,EAAEA,YAPA;AAQdG,MAAAA,IAAI,EAAEpC,KAAK,CAACoC,IAAN,IAAc,IAAI6M,IAAJ,GAAWwC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CARN;AASdzQ,MAAAA,GAAG,EAAEA,GATS;AAUdE,MAAAA,GAAG,EAAEA,GAVS;AAWdE,MAAAA,QAAQ,EAAEA,QAXI;AAYdE,MAAAA,KAAK,EAAEA;AAZO,KAAhB;AAeAwF,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC8M,OAArC;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAHR,OAF0B,CAA5B;AAQA,YAAMxJ,MAAM,GAAG,MAAM0J,QAAQ,CAACO,IAAT,EAArB;AACAxN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BsD,MAA7B;AACD,KAXD,CAWE,OAAOrD,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAvCD;;AAyCA,QAAMuN,cAAc,GAAG,MAAM;AAC3B,QAAIpO,KAAK,CAAC8C,IAAN,OAAiB,EAArB,EAAyB;AACvBjJ,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEPzI,QAAAA,EAAE,EAAE,CAAC,GAAGyI,IAAI,CAACzI,EAAT,EAAakG,KAAK,CAAC8C,IAAN,EAAb;AAFG,QAAD,CAAR;AAID;;AACD7C,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GATD;;AAWA,QAAMsO,cAAc,GAAG,MAAM;AAC3B,QAAIjO,KAAK,CAAC0C,IAAN,OAAiB,EAArB,EAAyB;AACvBjJ,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEPxI,QAAAA,EAAE,EAAE,CAAC,GAAGwI,IAAI,CAACxI,EAAT,EAAaqG,KAAK,CAAC0C,IAAN,EAAb;AAFG,QAAD,CAAR;AAID;;AACDzC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GATD;;AAWA,WAASmO,uBAAT,CACE/H,KADF,EAEEgI,YAFF,EAGEC,UAHF,EAIEC,cAJF,EAKEC,WALF,EAME;AACA;AACA,QACEH,YAAY,IACZA,YAAY,CAACzL,IAAb,OAAwB,EADxB,IAEAyL,YAAY,CAACzL,IAAb,OAAwB,KAH1B,EAIE;AACA,aAAOyL,YAAP;AACD,KARD,CAUA;;;AACA,QACEC,UAAU,IACVA,UAAU,CAACjI,KAAD,CADV,IAEAiI,UAAU,CAACjI,KAAD,CAAV,CAAkBzD,IAAlB,OAA6B,EAF7B,IAGA0L,UAAU,CAACjI,KAAD,CAAV,KAAsB,KAJxB,EAKE;AACA,aAAOiI,UAAU,CAACjI,KAAD,CAAjB;AACD;;AACD,QACEkI,cAAc,IACdA,cAAc,CAAClI,KAAD,CADd,IAEAkI,cAAc,CAAClI,KAAD,CAAd,CAAsBzD,IAAtB,OAAiC,EAFjC,IAGA2L,cAAc,CAAClI,KAAD,CAAd,KAA0B,KAJ5B,EAKE;AACA,aAAOkI,cAAc,CAAClI,KAAD,CAArB;AACD;;AACD,QACEmI,WAAW,IACXA,WAAW,CAACnI,KAAD,CADX,IAEAmI,WAAW,CAACnI,KAAD,CAAX,CAAmBzD,IAAnB,OAA8B,EAF9B,IAGA4L,WAAW,CAACnI,KAAD,CAAX,KAAuB,KAJzB,EAKE;AACA,aAAOmI,WAAW,CAACnI,KAAD,CAAlB;AACD;;AAED,WAAOgI,YAAP,CApCA,CAoCqB;AACtB;;AAED,WAASzM,mBAAT,CAA6B0M,UAA7B,EAAyCC,cAAzC,EAAyDC,WAAzD,EAAsE;AACpE,WAAO;AACL3T,MAAAA,GAAG,EAAE4T,oBAAoB,CAAC,KAAD,EAAQH,UAAR,EAAoBC,cAApB,EAAoCC,WAApC,CADpB;AAELzT,MAAAA,QAAQ,EAAE0T,oBAAoB,CAC5B,UAD4B,EAE5BH,UAF4B,EAG5BC,cAH4B,EAI5BC,WAJ4B,CAFzB;AAQLvT,MAAAA,KAAK,EAAEwT,oBAAoB,CACzB,OADyB,EAEzBH,UAFyB,EAGzBC,cAHyB,EAIzBC,WAJyB;AARtB,KAAP;AAeD;;AAED,WAASC,oBAAT,CACEpI,KADF,EAEEiI,UAFF,EAGEC,cAHF,EAIEC,WAJF,EAKE;AACA,QACEF,UAAU,IACVA,UAAU,CAACjI,KAAD,CADV,IAEAiI,UAAU,CAACjI,KAAD,CAAV,CAAkBzD,IAAlB,OAA6B,EAF7B,IAGA0L,UAAU,CAACjI,KAAD,CAAV,KAAsB,KAJxB,EAKE;AACA,aAAOiI,UAAU,CAACjI,KAAD,CAAjB;AACD;;AACD,QACEkI,cAAc,IACdA,cAAc,CAAClI,KAAD,CADd,IAEAkI,cAAc,CAAClI,KAAD,CAAd,CAAsBzD,IAAtB,OAAiC,EAFjC,IAGA2L,cAAc,CAAClI,KAAD,CAAd,KAA0B,KAJ5B,EAKE;AACA,aAAOkI,cAAc,CAAClI,KAAD,CAArB;AACD;;AACD,QACEmI,WAAW,IACXA,WAAW,CAACnI,KAAD,CADX,IAEAmI,WAAW,CAACnI,KAAD,CAAX,CAAmBzD,IAAnB,OAA8B,EAF9B,IAGA4L,WAAW,CAACnI,KAAD,CAAX,KAAuB,KAJzB,EAKE;AACA,aAAOmI,WAAW,CAACnI,KAAD,CAAlB;AACD;;AACD,WAAO,EAAP,CAzBA,CAyBW;AACZ;;AAED,QAAM;AAAA,OAACqI,gBAAD;AAAA,OAAmBxH;AAAnB,MAA0CnQ,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAAC4X,mBAAD;AAAA,OAAsBxH;AAAtB,MAAgDpQ,QAAQ,CAAC,KAAD,CAA9D;;AAEA,iBAAe6X,WAAf,GAA6B;AAAA;;AAC3B9E,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACrQ,KAAK,CAACT,IAAP,IAAe,qBAAC0C,YAAY,CAAC,CAAD,CAAb,4CAAC,gBAAiBE,WAAlB,CAAnB,EAAkD;AAChDsJ,MAAAA,UAAU,GADsC,CAClC;;AACd;AACD;;AACD/L,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF;AACA,YAAM4Q,MAAM,CAAC,KAAD,CAAZ;AACD,KAHD,CAGE,OAAOjG,GAAP,EAAY;AACZtD,MAAAA,OAAO,CAACE,KAAR,CAAcoD,GAAd;AACD,KALD,SAKU;AACR3K,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AAED,QAAMyV,SAAS,GAAI5V,IAAD,IAAU;AAC1B,WAAOA,IAAI,IAAIA,IAAI,CAAC6V,WAAL,OAAuB,gBAAtC;AACD,GAFD;;AAIA,QAAMC,wBAAwB,GAAIC,OAAD,IAAa;AAC5C,UAAMH,SAAS,GAAI5V,IAAD,IAAUA,IAAI,IAAIA,IAAI,CAAC6V,WAAL,OAAuB,gBAA3D;;AACA,QAAI5P,WAAJ,EAAiB;AACfjB,MAAAA,kBAAkB,CAAC;AAAEuJ,QAAAA,EAAE,EAAEwH,OAAO,CAACxH,EAAd;AAAkBvO,QAAAA,IAAI,EAAE+V,OAAO,CAAC/V;AAAhC,OAAD,CAAlB,CADe,CAEf;;AACAiO,MAAAA,mBAAmB,CAAC2H,SAAS,CAACG,OAAO,CAAC/V,IAAT,CAAV,CAAnB;AACD,KAJD,MAIO;AACLkF,MAAAA,yBAAyB,CAAC;AAAEqJ,QAAAA,EAAE,EAAEwH,OAAO,CAACxH,EAAd;AAAkBvO,QAAAA,IAAI,EAAE+V,OAAO,CAAC/V;AAAhC,OAAD,CAAzB,CADK,CAEL;;AACAkO,MAAAA,sBAAsB,CAAC0H,SAAS,CAACG,OAAO,CAAC/V,IAAT,CAAV,CAAtB;AACD;;AACD+O,IAAAA,YAAY,CAACgH,OAAO,CAACxH,EAAT,CAAZ;AACArK,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAbD;;AAeA,QAAM;AAAA,OAAC8R,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnY,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM;AAAA,OAACoY,YAAD;AAAA,OAAeC;AAAf,MAAkCrY,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACsY,cAAD;AAAA,OAAiBC;AAAjB,MAAsCvY,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM;AAAA,OAACwY,cAAD;AAAA,OAAiBC;AAAjB,MAAsCzY,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAM0Y,kBAAkB,GAAG,MAAM;AAC/B;AACA,UAAMxC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,QAAQD,IAAI,CAACE,MAAL,KAAgB,KAAnC,CAAlB,CAF+B,CAG/B;;AACA5T,IAAAA,MAAM,CAACgK,IAAP,CAAa,wBAAuByJ,SAAU,yBAA9C;AACD,GALD;;AAOA,QAAM;AAAA,OAACyC,iBAAD;AAAA,OAAoBC;AAApB,MAA4C5Y,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM;AAAA,OAAC8T,kBAAD;AAAA,OAAqBtD;AAArB,MAA8CxQ,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM;AAAA,OAACgU,qBAAD;AAAA,OAAwBtD;AAAxB,MAAoD1Q,QAAQ,CAAC,IAAD,CAAlE;AAEA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,qBAAD;AACE,IAAA,IAAI,EAAE2G,qBADR;AAEE,IAAA,WAAW,EAAE,MAAMC,wBAAwB,CAAC,KAAD,CAF7C;AAGE,IAAA,UAAU,EAAEoR,wBAHd;AAIE,IAAA,cAAc,EAAEvQ,cAJlB,CAIkC;AAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAElC,IAAb;AAAmB,IAAA,MAAM,EAAE4I,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAJF,EAKE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CARF,EAoBE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE1I,OAAb;AAAsB,IAAA,MAAM,EAAE4I,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa1I,GAAb,CAJF,EAKE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE0I,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CApBF,EA+BE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE5H,aAAb;AAA4B,IAAA,MAAM,EAAE8H,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJF,EAKE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEA,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CA/BF,EA0CE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE1I,aAAb;AAA4B,IAAA,MAAM,EAAE4I,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAA2C,IAAA,OAAO,EAAEU,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIGvK,YAAY,CAAC4K,GAAb,CAAiB,CAACC,IAAD,EAAO9D,KAAP,KAChB,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMqE,iBAAiB,CAACrE,KAAD,CAHlC;AAIE,IAAA,KAAK,EAAE;AAAEkN,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpJ,IAAI,CAAC3K,WAAL,IAAoB,aAA3B,CADF,EAEE;AACE,IAAA,KAAK,EAAE;AACLgU,MAAAA,UAAU,EAAE,gBADP;AAELC,MAAAA,WAAW,EAAE;AAFR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGtJ,IAAI,CAAC1K,IAAL,IAAa,MANhB,CAFF,CANF,CADF,CADD,CAJH,EA0BE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE0J,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1BF,CAJF,CA1CF,EA6EE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE1I,WAAb;AAA0B,IAAA,MAAM,EAAE4I,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAEe,YAHX;AAIE,IAAA,KAAK,EAAE;AAAEsJ,MAAAA,YAAY,EAAE;AAAhB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EASGhU,UAAU,CAACwK,GAAX,CAAe,CAACM,EAAD,EAAKnE,KAAL,KACd,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,KAAK,EAAEmE,EAAE,CAAC5K,SAHZ;AAIE,IAAA,QAAQ,EAAGgG,CAAD,IACR0E,qBAAqB,CAACjE,KAAD,EAAQ,WAAR,EAAqBT,CAAC,CAACE,MAAF,CAASC,KAA9B,CALzB;AAOE,IAAA,KAAK,EAAE;AAAE2N,MAAAA,YAAY,EAAE;AAAhB,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,KAAK,EAAElJ,EAAE,CAAC/K,IAHZ;AAIE,IAAA,QAAQ,EAAGmG,CAAD,IACR0E,qBAAqB,CAACjE,KAAD,EAAQ,MAAR,EAAgBT,CAAC,CAACE,MAAF,CAASC,KAAzB,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EAsBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAE,MAAMsE,eAAe,CAAChE,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAtBF,CADD,CATH,EAuCE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEgD,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvCF,CAJF,CA7EF,EA8HE,MAAC,eAAD;AACE,IAAA,IAAI,EAAExI,gBADR;AAEE,IAAA,WAAW,EAAE4I,uBAFf;AAGE,IAAA,cAAc,EAAEhI,cAHlB;AAIE,IAAA,cAAc,EAAEU,cAJlB;AAKE,IAAA,kBAAkB,EAAEuQ,wBALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9HF,EAqIE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE/R,eAAb;AAA8B,IAAA,MAAM,EAAE4I,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,KAAK,EAAElH,MAJT;AAKE,IAAA,QAAQ,EAAGuD,CAAD,IAAOtD,SAAS,CAACsD,CAAC,CAACE,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,WAAD;AACE,IAAA,OAAO,EAAElG,OAAO,CAAC8I,MAAR,CAAgBgL,MAAD,IACtBA,MAAM,CAAC/W,IAAP,CAAY6V,WAAZ,GAA0BmB,QAA1B,CAAmCvR,MAAM,CAACoQ,WAAP,EAAnC,CADO,CADX;AAIE,IAAA,cAAc,EAAE9H,gBAJlB;AAKE,IAAA,WAAW,EAAEA,gBALf;AAME,IAAA,cAAc,EAAE,MAAMA,gBAAgB,CAAC,IAAD,CANxC;AAOE,IAAA,WAAW,EAAEyI,kBAPf,CAOmC;AAPnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CArIF,EA6JE,MAAC,WAAD;AACE,IAAA,IAAI,EAAErS,eADR;AAEE,IAAA,WAAW,EAAE4I,sBAFf;AAGE,IAAA,iBAAiB,EAAE3H,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7JF,EAkKE,MAAC,qBAAD;AACE,IAAA,IAAI,EAAEX,qBADR;AAEE,IAAA,WAAW,EAAE,MAAMC,wBAAwB,CAAC,KAAD,CAF7C;AAGE,IAAA,UAAU,EAAEY,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlKF,EAwKE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEjB,eAAb;AAA8B,IAAA,MAAM,EAAEmP,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC7N,aAAD,GACC,MAAC,uBAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,QAAQ,EAAEkF,aAHZ;AAIE,IAAA,UAAU,EAAEhF,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAE6E,GAAG,CAACC,eAAJ,CAAoBhF,aAApB,CADP;AAEE,IAAA,GAAG,EAAC,UAFN;AAGE,IAAA,KAAK,EAAE;AAAEzE,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,CADF,CAJF,EAwBE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACyE,aAAD,GACC,4BACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEqF,YADX;AAEE,IAAA,KAAK,EAAE;AACLiM,MAAAA,YAAY,EAAE,KADT;AAEL/V,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAIL+V,MAAAA,QAAQ,EAAE,UAJL;AAKLC,MAAAA,IAAI,EAAE,KALD;AAMLC,MAAAA,SAAS,EAAE,kBANN;AAOLC,MAAAA,MAAM,EAAE;AAPH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAeE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE,MACPvR,eAAe,CAAEsD,IAAD,IACdA,IAAI,KAAK,aAAT,GAAyB,MAAzB,GAAkC,aADrB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,EAwBE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEoK,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,CADD,GA8BC,4BACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,OAAO,EAAE,MAAM5N,gBAAgB,CAAC,IAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEiG,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CA/BJ,CAxBF,CAxKF,EA8OE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAElI,aAAb;AAA4B,IAAA,MAAM,EAAE4I,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAA2C,IAAA,OAAO,EAAEU,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIGvK,YAAY,CAAC4K,GAAb,CAAiB,CAACC,IAAD,EAAO9D,KAAP,KAChB,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAMqE,iBAAiB,CAACrE,KAAD,CAHlC;AAIE,IAAA,KAAK,EAAE;AAAEkN,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOpJ,IAAI,CAAC3K,WAAL,IAAoB,aAA3B,CADF,EAEE;AACE,IAAA,KAAK,EAAE;AACLgU,MAAAA,UAAU,EAAE,gBADP;AAELC,MAAAA,WAAW,EAAE;AAFR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGtJ,IAAI,CAAC1K,IAAL,IAAa,MANhB,CAFF,CANF,CADF,CADD,CAJH,EA0BE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE0J,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA1BF,CAJF,CA9OF,EAmRE,MAAC,SAAD;AACE,IAAA,IAAI,EAAE2G,aADR;AAEE,IAAA,WAAW,EAAEK,oBAFf;AAGE,IAAA,QAAQ,EAAE9S,KAAK,CAACT,IAHlB;AAIE,IAAA,UAAU,EAAG,GAAES,KAAK,CAACQ,MAAO,IAAGR,KAAK,CAACS,KAAM,IAAGT,KAAK,CAACU,MAAO,EAJ7D;AAKE,IAAA,KAAK,EAAEV,KAAK,CAACK,KALf;AAME,IAAA,KAAK,EAAEqF,QANT;AAOE,IAAA,KAAK,EAAEI,gBAPT;AAQE,IAAA,KAAK,EAAEF,aART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnRF,EA6RGe,OAAO,IACN;AACE,IAAA,KAAK,EAAE;AACL8P,MAAAA,QAAQ,EAAE,OADL;AAELI,MAAAA,GAAG,EAAE,CAFA;AAGLH,MAAAA,IAAI,EAAE,CAHD;AAILjW,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,MAAM,EAAE,MALH;AAMLoW,MAAAA,eAAe,EAAE,0BANZ;AAOLC,MAAAA,cAAc,EAAE,WAPX;AAQLC,MAAAA,OAAO,EAAE,MARJ;AASLC,MAAAA,UAAU,EAAE,QATP;AAULC,MAAAA,cAAc,EAAE,QAVX;AAWLC,MAAAA,MAAM,EAAE,IAXH,CAWS;;AAXT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,SAApC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAfF,CA9RJ,EAmTE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,kDADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,2CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAElH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEnQ,KAAK,CAACT,IAFf;AAGE,IAAA,QAAQ,EAAEyT,YAAY,CAAC,MAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAWE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEyD,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEzW,KAAK,CAACE,EAAN,CAASqV,cAAT,KAA4B,EAFrC;AAGE,IAAA,QAAQ,EAAGhN,CAAD,IACRQ,cAAc,CAACwM,cAAD,EAAiBhN,CAAC,CAACE,MAAF,CAASC,KAA1B,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMgN,eAAe,CAAC,CAACD,YAAF,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAiBE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMtP,cAAc,CAAC,IAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAjBF,CADF,EA4BGsP,YAAY,IACX;AACE,IAAA,KAAK,EAAE;AACLgB,MAAAA,QAAQ,EAAE,UADL;AAELI,MAAAA,GAAG,EAAE,MAFA;AAGLH,MAAAA,IAAI,EAAE,CAHD;AAILY,MAAAA,KAAK,EAAE,CAJF;AAKLR,MAAAA,eAAe,EAAE,OALZ;AAMLS,MAAAA,MAAM,EAAE,gBANH;AAOLJ,MAAAA,MAAM,EAAE,IAPH;AAQLK,MAAAA,SAAS,EAAE,OARN;AASLC,MAAAA,SAAS,EAAE;AATN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGzX,KAAK,CAACE,EAAN,CAAS2M,GAAT,CAAa,CAAC6K,QAAD,EAAWC,GAAX,KACZ;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkB1B,MAAAA,MAAM,EAAE;AAA1B,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACbV,MAAAA,iBAAiB,CAACmC,GAAD,CAAjB;AACAjC,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGgC,QARH,CADD,CAbH,CA7BJ,CAFF,EA4DGxR,WAAW,IACV,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,QAAQ,EAAGmC,CAAD,IAAOlC,QAAQ,CAACkC,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ3B;AAKE,IAAA,MAAM,EAAE8L,cALV;AAME,IAAA,SAAS,EAAGjM,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACsP,GAAF,KAAU,OAAd,EAAuB;AACrBrD,QAAAA,cAAc;AACf;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7DJ,CADF,CAXF,CAFF,EA4FE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEzW,KAAK,CAACG,EAAN,CAASwV,cAAT,KAA4B,EAFrC;AAGE,IAAA,QAAQ,EAAGpN,CAAD,IACRc,cAAc,CAACsM,cAAD,EAAiBpN,CAAC,CAACE,MAAF,CAASC,KAA1B,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMoN,iBAAiB,CAAC,CAACD,cAAF,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAiBE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMtP,cAAc,CAAC,IAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAjBF,CADF,EA4BGsP,cAAc,IACb;AACE,IAAA,KAAK,EAAE;AACLY,MAAAA,QAAQ,EAAE,UADL;AAELI,MAAAA,GAAG,EAAE,MAFA;AAGLH,MAAAA,IAAI,EAAE,CAHD;AAILY,MAAAA,KAAK,EAAE,CAJF;AAKLR,MAAAA,eAAe,EAAE,OALZ;AAMLS,MAAAA,MAAM,EAAE,gBANH;AAOLJ,MAAAA,MAAM,EAAE,IAPH;AAQLK,MAAAA,SAAS,EAAE,OARN;AASLC,MAAAA,SAAS,EAAE;AATN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGzX,KAAK,CAACG,EAAN,CAAS0M,GAAT,CAAa,CAACiL,QAAD,EAAWH,GAAX,KACZ;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkB1B,MAAAA,MAAM,EAAE;AAA1B,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,iBAAiB,CAAC+B,GAAD,CAAjB;AACA7B,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGgC,QARH,CADD,CAbH,CA7BJ,CAFF,EA4DGxR,WAAW,IACV,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,QAAQ,EAAG+B,CAAD,IAAO9B,QAAQ,CAAC8B,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ3B;AAKE,IAAA,MAAM,EAAE+L,cALV;AAME,IAAA,SAAS,EAAGlM,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACsP,GAAF,KAAU,OAAd,EAAuB;AACrBpD,QAAAA,cAAc;AACf;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7DJ,CADF,CADF,EA8EE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD,CAAM,MAAN;AACE,IAAA,KAAK,EAAEzU,KAAK,CAACM,MAAN,IAAgB,EADzB;AAEE,IAAA,QAAQ,EAAE0S,YAAY,CAAC,QAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAME;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CAFF,CADF,CA9EF,CA5FF,EA2LE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,KAFd;AAGE,IAAA,KAAK,EAAE7R,GAHT;AAIE,IAAA,QAAQ,EAAGoH,CAAD,IAAOnH,MAAM,CAACmH,CAAC,CAACE,MAAF,CAASC,KAAV,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAYE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAErH,QAHT;AAIE,IAAA,QAAQ,EAAGkH,CAAD,IAAOjH,WAAW,CAACiH,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAZF,EAuBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAEnH,KAHT;AAIE,IAAA,QAAQ,EAAGgH,CAAD,IAAO/G,QAAQ,CAAC+G,CAAC,CAACE,MAAF,CAASC,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAvBF,CA3LF,EA+NE;AAAK,IAAA,KAAK,EAAE;AAAE2N,MAAAA,YAAY,EAAE,MAAhB;AAAwB0B,MAAAA,SAAS,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE9L,iBAFX;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAQG5J,UAAU,CAAC7B,MAAX,GAAoB,CAApB,IACC;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,KAAK,EAAE,CAAA0S,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAE3Q,SAArB,KAAkC,EAH3C;AAIE,IAAA,QAAQ,EAAGgG,CAAD,IACR0E,qBAAqB,CACnB5K,UAAU,CAAC2V,OAAX,CAAmB9E,mBAAnB,CADmB,EAEnB,WAFmB,EAGnB3K,CAAC,CAACE,MAAF,CAASC,KAHU,CALzB;AAWE,IAAA,KAAK,EAAE;AAAE2N,MAAAA,YAAY,EAAE;AAAhB,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAeE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAE,CAAAnD,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAE9Q,IAArB,KAA6B,EAHtC;AAIE,IAAA,QAAQ,EAAGmG,CAAD,IACR0E,qBAAqB,CACnB5K,UAAU,CAAC2V,OAAX,CAAmB9E,mBAAnB,CADmB,EAEnB,MAFmB,EAGnB3K,CAAC,CAACE,MAAF,CAASC,KAHU,CALzB;AAWE,IAAA,KAAK,EAAE;AAAE2N,MAAAA,YAAY,EAAE;AAAhB,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CATJ,CADF,CA/NF,EA2QE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAEjJ,gBAFX;AAGE,IAAA,SAAS,EAAC,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAQE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,KAAK,EAAE,0BAAAnL,YAAY,CAACiC,YAAD,CAAZ,gFAA4B/B,WAA5B,KAA2C,EAJpD;AAKE,IAAA,QAAQ,EAAGoG,CAAD,IACRmE,uBAAuB,CACrBxI,YADqB,EAErB,aAFqB,EAGrBqE,CAAC,CAACE,MAAF,CAASC,KAHY,CAN3B;AAYE,IAAA,KAAK,EAAE;AAAE2N,MAAAA,YAAY,EAAE;AAAhB,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAsBE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE,2BAAApU,YAAY,CAACiC,YAAD,CAAZ,kFAA4B9B,IAA5B,KAAoC,EAF7C;AAGE,IAAA,QAAQ,EAAGmG,CAAD,IACRmE,uBAAuB,CACrBxI,YADqB,EAErB,MAFqB,EAGrBqE,CAAC,CAACE,MAAF,CAASC,KAHY,CAJ3B;AAUE,IAAA,KAAK,EAAE;AAAEqP,MAAAA,SAAS,EAAE,QAAb;AAAuB1B,MAAAA,YAAY,EAAE;AAArC,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADF,CA3QF,EAiTE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACb5Q,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA0G,MAAAA,qBAAqB;AACtB,KALH;AAME,IAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAWGgF,kBAAkB,IACjB;AACE,IAAA,KAAK,EAAE;AACLoG,MAAAA,MAAM,EAAE,gBADH;AAELK,MAAAA,OAAO,EAAE,SAFJ;AAGLpB,MAAAA,YAAY,EAAE,KAHT;AAILH,MAAAA,YAAY,EAAE;AAJT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAC2C,GAD3C,EAEGlF,kBAAkB,CAAC5R,IAFtB,CARF,EAYE;AAAK,IAAA,KAAK,EAAE;AAAEwY,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMtU,mBAAmB,CAAC,IAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAIsB0N,kBAAkB,CAAC5R,IAJzC,CADF,EAOG+E,eAAe,IACd,4BACE;AAAG,IAAA,KAAK,EAAE;AAAEyT,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAC4C,GAD5C,EAEGzT,eAAe,CAAC/E,IAFnB,CADF,EAKGyV,gBAAgB,IACf,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEvT,YAFT;AAGE,IAAA,QAAQ,EAAG8G,CAAD,IACR7G,eAAe,CAAC6G,CAAC,CAACE,MAAF,CAASC,KAAV,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CANJ,CARJ,CAZF,CAZJ,CADF,EA2DE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAM;AACbjD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA0G,MAAAA,qBAAqB;AACtB,KALH;AAME,IAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAWGkF,qBAAqB,IACpB;AACE,IAAA,KAAK,EAAE;AACLkG,MAAAA,MAAM,EAAE,gBADH;AAELK,MAAAA,OAAO,EAAE,SAFJ;AAGLpB,MAAAA,YAAY,EAAE,KAHT;AAILH,MAAAA,YAAY,EAAE;AAJT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAC8C,GAD9C,EAEGhF,qBAAqB,CAAC9R,IAFzB,CARF,EAYE;AAAK,IAAA,KAAK,EAAE;AAAEwY,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE,MAAMtU,mBAAmB,CAAC,IAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAIsB4N,qBAAqB,CAAC9R,IAJ5C,CADF,EAOGiF,sBAAsB,IACrB,4BACE;AAAG,IAAA,KAAK,EAAE;AAAEuT,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAC+C,GAD/C,EAEGvT,sBAAsB,CAACjF,IAF1B,CADF,EAKG0V,mBAAmB,IAClB,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,EAKE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEtT,eAFT;AAGE,IAAA,QAAQ,EAAG4G,CAAD,IACR3G,kBAAkB,CAAC2G,CAAC,CAACE,MAAF,CAASC,KAAV,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CANJ,CARJ,CAZF,CAZJ,CA3DF,EAqHE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE6D,qBAFX;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAQG7H,cAAc,IACb,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,KAAK,EAAEA,cAAc,CAACnF,IAHxB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAE;AAAE2W,MAAAA,MAAM,EAAE,SAAV;AAAqB6B,MAAAA,SAAS,EAAE;AAAhC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CArHF,CADF,CAjTF,EA4bE;AAAK,IAAA,KAAK,EAAE;AAAE1B,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE/C,qBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,OAAO,EAAE/J,kBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,CADF,EAiBE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAC,2BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEjE,YAAY,GAAG,SAAH,GAAe,iBADtC;AAEE,IAAA,OAAO,EAAE,MAAMC,eAAe,CAAEoD,IAAD,IAAU,CAACA,IAAZ,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGrD,YAAY,GAAG,kBAAH,GAAwB,gBAJvC,CADF,EAOE,MAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,KAAK,EAAC,MAHR,CAIE;AAJF;AAKE,IAAA,OAAO,EAAE,CAACtF,KAAK,CAACY,OALlB;AAME,IAAA,QAAQ,EAAG2H,CAAD,IAAO;AACf;AACA,YAAM0P,QAAQ,GAAG1P,CAAC,CAAC2P,aAAF,CAAgBC,OAAjC;AACAlY,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEP/H,QAAAA,OAAO,EAAE,CAACqX;AAFH,QAAD,CAAR;AAID,KAbH;AAcE,IAAA,SAAS,EAAC,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAjBF,CADF,EA2CE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,GAAG,EAAEvR,cAJP;AAKE,IAAA,KAAK,EAAE;AAAEsQ,MAAAA,OAAO,EAAE;AAAX,KALT;AAME,IAAA,QAAQ,EAAEtN,mBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,CA5bF,EAifE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhH,MAAM,CAACmK,GAAP,CAAW,CAACuL,KAAD,EAAQpP,KAAR,KACV;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAC,iDAFZ;AAGE,IAAA,KAAK,EAAE;AACLvI,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGL+V,MAAAA,QAAQ,EAAE;AAHL,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,GAAG,EAAE2B,KAAK,CAACpO,GADb;AAEE,IAAA,GAAG,EAAG,SAAQhB,KAAK,GAAG,CAAE,EAF1B;AAGE,IAAA,KAAK,EAAE;AACLvI,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGL2X,MAAAA,SAAS,EAAE;AAHN,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAkBGD,KAAK,CAACrO,IAAN,IACC,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,KAAK,EAAE;AACL0M,MAAAA,QAAQ,EAAE,UADL;AAELI,MAAAA,GAAG,EAAE,CAFA;AAGLS,MAAAA,KAAK,EAAE,CAHF;AAILM,MAAAA,OAAO,EAAE;AAJJ,KAHT;AASE,IAAA,OAAO,EAAE,MAAMvM,WAAW,CAACrC,KAAD,CAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAnBJ,CADD,CADH,CAjfF,EA0hBE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAE;AAAEsP,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,OAAO,EAAEpD,WAFX;AAGE,IAAA,KAAK,EAAE;AAAEoD,MAAAA,WAAW,EAAE;AAAf,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,EAeE,MAAC,aAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,sBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAoBE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,OAAO,EAAE3E,WAFX;AAGE,IAAA,KAAK,EAAE;AAAE4E,MAAAA,UAAU,EAAE;AAAd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBF,CA1hBF,EAsjBE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,MADX;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAFT;AAOE,IAAA,OAAO,EAAE,MAAM3S,YAAY,CAAC,CAACD,SAAF,CAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAtjBF,EAmkBE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpI,GAAhB;AAAqB,IAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEoC,KAAK,CAACQ,MAHf;AAIE,IAAA,QAAQ,EAAEwS,YAAY,CAAC,QAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,OAUE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEhT,KAAK,CAACS,KAHf;AAIE,IAAA,QAAQ,EAAEuS,YAAY,CAAC,OAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,OAmBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEhT,KAAK,CAACU,MAHf;AAIE,IAAA,QAAQ,EAAEsS,YAAY,CAAC,QAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CAFF,CADF,EAgCE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpV,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEoC,KAAK,CAACK,KAHf;AAIE,IAAA,QAAQ,EAAE2S,YAAY,CAAC,OAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhCF,CADF,EA2CE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpV,GAAhB;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEqD,GAHT;AAIE,IAAA,QAAQ,EAAGsH,CAAD,IAAOrH,MAAM,CAACqH,CAAC,CAACE,MAAF,CAASC,KAAV,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE9K,GAAhB;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,KAAK,EAAEoC,KAAK,CAACI,OAAN,IAAiB,EAH1B;AAIE,IAAA,QAAQ,EAAE4S,YAAY,CAAC,SAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,CA3CF,EAgEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpV,GAAhB;AAAqB,IAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEoC,KAAK,CAACO,QAAN,IAAkB,EAH3B;AAIE,IAAA,QAAQ,EAAEyS,YAAY,CAAC,UAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpV,GAAhB;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,WAAW,EAAC,oBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEoC,KAAK,CAACW,YAHf;AAIE,IAAA,QAAQ,EAAG4H,CAAD,IAAO;AACf,YAAMG,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAzI,MAAAA,QAAQ,CAAE0I,IAAD,oCACJA,IADI;AAEPhI,QAAAA,YAAY,EAAE+H;AAFP,QAAD,CAAR;AAID,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CAhEF,CADF,CAnkBF,CAFF,CADF,CADF,CAJF,CAnTF,CADF;AAm+BD","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  Button,\n  Card,\n  Container,\n  Row,\n  Col,\n  Modal,\n  FormControl,\n  Collapse,\n  InputGroup,\n  ButtonGroup,\n  Spinner,\n} from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport dynamic from \"next/dynamic\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport firebase from \"../../../context/Firebase\";\nimport LoggedIn from \"../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ClientInfoModal from \"../ClientInfoModal\";\nimport ParentModal from \"./parentModal\";\nimport MachineSelectionModal from \"../item/[id]/MachineSelectionModal\";\nimport InfoModal from \"../InfoModal\";\n\n// Load BarcodeScannerComponent only on the client-side.\nconst BarcodeScannerComponent = dynamic(\n  () => import(\"react-qr-barcode-scanner\"),\n  { ssr: false }\n);\n\n// Simulate network delay.\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\n// Custom LoadingButton component.\nfunction LoadingButton({ type, name, route }) {\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n  const handleClick = () => setLoading(true);\n  return (\n    <Link href={`/${route}`}>\n      <a\n        className={`btn btn-${type}`}\n        disabled={isLoading}\n        onClick={!isLoading ? handleClick : null}\n      >\n        {isLoading ? \"Loading…\" : name}\n      </a>\n    </Link>\n  );\n}\n\nexport default function NewItem() {\n  const router = useRouter();\n  const { signOut } = useAuth();\n  // Initialize item state – for a new item, these start empty.\n  // We store PN and SN as arrays.\n  const [items, setItems] = useState({\n    name: \"\",\n    pn: [\"\"],\n    sn: [\"\"], // This will be overridden on submit.\n    localSN: \"\", // NEW FIELD: holds user input for a local serial number.\n    price: \"\",\n    status: \"\",\n    poNumber: \"\",\n    length: \"\",\n    width: \"\",\n    height: \"\",\n    arrival_date: \"\", // NEW FIELD: Arrival Date\n    visible: true,\n  });\n\n  const [editingPn, setEditingPn] = useState(true);\n  // const [newPn, setNewPn] = useState(\"\"); // for the input value when editing\n\n  const [editingSn, setEditingSn] = useState(true);\n  // const [newSn, setNewSn] = useState(\"\");\n\n  // DOM is the Date of Manufacture input (user provided).\n  const [DOM, setDOM] = useState(\"\");\n  // OEM, Modality, Model fields.\n  const [oem, setOem] = useState(\"\");\n  const [modality, setModality] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n\n  // Local location states.\n  const [localLocFrom, setLocalLocFrom] = useState(\"\");\n  const [localLocCurrent, setLocalLocCurrent] = useState(\"\");\n\n  // Other states.\n  const [pnOptions, setPnOptions] = useState([]);\n  const [snOptions, setSnOptions] = useState([]);\n  const [descriptions, setDescriptions] = useState([\n    { description: \"\", date: \"\" },\n  ]);\n  const [workOrders, setWorkOrders] = useState([{ workOrder: \"\", date: \"\" }]);\n  const [clients, setClients] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [show, setShow] = useState(false); // error modal for missing required fields\n  const [showErr, setShowErr] = useState(false);\n  const [Err, setErr] = useState(\n    \"Missing required field: Name and Description\"\n  );\n  const [showDescModal, setShowDescModal] = useState(false);\n  const [showWoModal, setShowWoModal] = useState(false);\n  const [showClientModal, setShowClientModal] = useState(false);\n  const [showMachineModal, setShowMachineModal] = useState(false);\n  const [showParentModal, setShowParentModal] = useState(false);\n  const [showCameraModal, setShowCameraModal] = useState(false);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [machineSelectionModal, setMachineSelectionModal] = useState(false);\n  const [selectedDesc, setSelectedDesc] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedMachine, setSelectedMachine] = useState(null);\n  const [selectedCurrentMachine, setSelectedCurrentMachine] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [TheMachine, setTheMachine] = useState(null);\n  const [machineOptions, setMachineOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\n  const [cameraFacing, setCameraFacing] = useState(\"environment\");\n  const [addToWebsite, setAddToWebsite] = useState(false);\n  const [machinePick, setMachinePick] = useState(false);\n  const [freqItem, setFreqItem] = useState(0);\n  const [usagePastYear, setUsagePastYear] = useState(0);\n  const [machineFrequency, setMachineFrequency] = useState(0);\n  // For extra (dimensions/price/DOM) section collapse.\n  const [showExtra, setShowExtra] = useState(false);\n\n  // For PN/SN \"add new\" functionality.\n  const [addingNewPn, setAddingNewPn] = useState(false);\n  const [newPn, setNewPn] = useState(\"\");\n  const [addingNewSn, setAddingNewSn] = useState(false);\n  const [newSn, setNewSn] = useState(\"\");\n\n  // For browsing photos.\n  const browseInputRef = useRef(null);\n\n  // Inside your NewItem component:\n  const [loading, setLoading] = useState(false);\n\n  if (!router.isReady) {\n    return null; // or a loading indicator\n  }\n\n  // -------------------- Since this is \"add\" mode, we do not fetch an existing document.\n  // However, we still fetch global PN and SN options and clients for selection.\n  useEffect(() => {\n    async function fetchClientsData() {\n      try {\n        const clientsData = await fetchClients();\n        console.log(\"Clients:\", clientsData);\n        setClients(clientsData);\n      } catch (error) {\n        console.error(\"Error fetching clients: \", error);\n      }\n    }\n    fetchClientsData();\n  }, []);\n\n  useEffect(() => {\n    async function fetchPnSn() {\n      const db = firebase.firestore();\n      const snapshot = await db.collection(\"Test\").get();\n      let pnSet = new Set();\n      let snSet = new Set();\n      snapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data.pn) pnSet.add(data.pn);\n        if (data.sn) snSet.add(data.sn);\n      });\n      setPnOptions([...pnSet]);\n      setSnOptions([...snSet]);\n    }\n    fetchPnSn();\n  }, []);\n\n  const [machineFieldsInitialized, setMachineFieldsInitialized] =\n    useState(false);\n\n  useEffect(() => {\n    if (\n      !machineFieldsInitialized &&\n      (TheMachine || selectedCurrentMachine || selectedMachine)\n    ) {\n      const updatedFields = updateMachineFields(\n        TheMachine,\n        selectedCurrentMachine,\n        selectedMachine\n      );\n\n      // Only set fields if they are empty or \"N/A\"\n      if (!oem || oem === \"N/A\") setOem(updatedFields.oem);\n      if (!modality || modality === \"N/A\") setModality(updatedFields.modality);\n      if (!model || model === \"N/A\") setModel(updatedFields.model);\n\n      setMachineFieldsInitialized(true);\n    }\n  }, [\n    TheMachine,\n    selectedCurrentMachine,\n    selectedMachine,\n    machineFieldsInitialized,\n  ]);\n\n  const [signal, setSignal] = useState(null);\n\n  useEffect(() => {\n    if (router.isReady) {\n      setSignal(router.query.signal || null);\n    }\n  }, [router.isReady, router.query.signal]);\n\n  // -------------------- Handlers for PN and SN dropdowns\n\n  // PN: when a user selects an existing PN value.\n  const handlePnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\n      updatedPn[0] = selected;\n      return { ...prev, pn: updatedPn };\n    });\n  };\n\n  const handlePnChange = (index, value) => {\n    setItems((prev) => {\n      const newPn = [...prev.pn];\n      newPn[index] = value;\n      return { ...prev, pn: newPn };\n    });\n  };\n\n  const addPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  // SN: when a user selects an existing SN value.\n  const handleSnSelect = (e) => {\n    const selected = e.target.value;\n    setItems((prev) => {\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\n      updatedSn[0] = selected;\n      return { ...prev, sn: updatedSn };\n    });\n  };\n\n  const handleSnChange = (index, value) => {\n    setItems((prev) => {\n      const newSn = [...prev.sn];\n      newSn[index] = value;\n      return { ...prev, sn: newSn };\n    });\n  };\n\n  const addSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  // -------------------- Photo Browse Handlers\n  const handleBrowsePhotos = () => {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  const handleFilesSelected = (e) => {\n    const files = e.target.files;\n    if (files.length) {\n      const newPhotos = [];\n      for (let i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i]),\n        });\n      }\n      setPhotos((prevPhotos) => [...prevPhotos, ...newPhotos]);\n    }\n    e.target.value = \"\";\n  };\n\n  // -------------------- Photo Capture Handlers remain as in your index.js\n  const handleCapture = (err, result) => {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  const capturePhoto = () => {\n    const video = document.querySelector(\"video\");\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob) => {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  const savePhoto = () => {\n    setPhotos((prevPhotos) => [\n      ...prevPhotos,\n      { file: capturedPhoto, url: URL.createObjectURL(capturedPhoto) },\n    ]);\n    setCapturedPhoto(null);\n    setShowCameraModal(false);\n  };\n\n  const removePhoto = (index) => {\n    setPhotos(photos.filter((_, i) => i !== index));\n  };\n\n  // -------------------- Modal Handlers\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleCloseErr = () => setShowErr(false);\n  const handleShowErr = () => setShowErr(true);\n  const handleCloseSaveModal = () => setShowSaveModal(false);\n  const handleShowSaveModal = () => setShowSaveModal(true);\n  const handleCloseDescModal = () => setShowDescModal(false);\n  const handleShowDescModal = () => setShowDescModal(true);\n  const handleCloseWoModal = () => setShowWoModal(false);\n  const handleShowWoModal = () => setShowWoModal(true);\n  const handleCloseClientModal = () => setShowClientModal(false);\n  const handleShowClientModal = () => setShowClientModal(true);\n  const handleCloseMachineModal = () => setShowMachineModal(false);\n  const handleShowMachineModal = () => {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n  const handleCloseParentModal = () => setShowParentModal(false);\n  const handleShowParentModal = () => setShowParentModal(true);\n\n  // -------------------- Work Orders / Descriptions Handlers (unchanged)\n  const addDescription = () => {\n    setDescriptions([...descriptions, { description: \"\", date: \"\" }]);\n  };\n\n  const removeDescription = (index) => {\n    setDescriptions(descriptions.filter((_, i) => i !== index));\n  };\n\n  const handleDescriptionChange = (index, field, value) => {\n    const newDescriptions = descriptions.map((desc, i) =>\n      i === index ? { ...desc, [field]: value } : desc\n    );\n    setDescriptions(newDescriptions);\n  };\n\n  const addWorkOrder = () => {\n    setWorkOrders([...workOrders, { workOrder: \"\", date: \"\" }]);\n  };\n\n  const removeWorkOrder = (index) => {\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\n  };\n\n  const handleWorkOrderChange = (index, field, value) => {\n    const newWorkOrders = workOrders.map((wo, i) =>\n      i === index ? { ...wo, [field]: value } : wo\n    );\n    setWorkOrders(newWorkOrders);\n  };\n\n  const listDescriptions = () => {\n    setShowDescModal(true);\n  };\n\n  const selectDescription = (index) => {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  // -------------------- Machine Selection (unchanged)\n  const handleClientInfo = async (clientId) => {\n    // Clear any previously selected machine/local loc for the branch\n    if (machinePick) {\n      setSelectedMachine(null);\n      setShowLocalLocFrom(false);\n    } else {\n      setSelectedCurrentMachine(null);\n      setShowLocalLocCurrent(false);\n    }\n\n    const db = firebase.firestore();\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\n    if (clientDoc.exists) {\n      const clientData = clientDoc.data();\n      if (machinePick) {\n        setSelectedClientFrom({ id: clientDoc.id, ...clientData });\n      } else {\n        setSelectedClientCurrent({ id: clientDoc.id, ...clientData });\n      }\n      // Fetch machines for this client:\n      const machinePromises = clientData.machines.map((machineRef) =>\n        machineRef.get()\n      );\n      const machineDocs = await Promise.all(machinePromises);\n      const machines = machineDocs.map((machineDoc) => ({\n        id: machineDoc.id,\n        ...machineDoc.data(),\n      }));\n      setMachineOptions(machines);\n      handleCloseClientModal();\n    }\n  };\n\n  const fetchMachine = async (machineId) => {\n    const db = firebase.firestore();\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\n    if (doc.exists) {\n      const machineData = doc.data();\n      setTheMachine(machineData);\n\n      // Ensure OEM, Modality, and Model update properly only if necessary\n      if (!oem || oem === \"N/A\")\n        setOem(machineData.oem || machineData.OEM || \"\");\n      if (!modality || modality === \"N/A\")\n        setModality(machineData.modality || machineData.Modality || \"\");\n      if (!model || model === \"N/A\")\n        setModel(machineData.model || machineData.Model || \"\");\n\n      // Set machine frequency count\n      const machinesSnapshot = await db\n        .collection(\"Machine\")\n        .where(\"Model\", \"==\", machineData.Model || machineData.model)\n        .get();\n      setMachineFrequency(machinesSnapshot.size);\n    } else {\n      console.error(\"Machine not found\");\n    }\n  };\n\n  // -------------------- Frequency/Usage (unchanged)\n  const calculateItemFrequencyAndUsage = async (pn) => {\n    const db = firebase.firestore();\n    const currentDate = new Date();\n    const oneYearAgo = new Date();\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n    const itemsSnapshot = await db\n      .collection(\"Test\")\n      .where(\"pn\", \"==\", pn)\n      .get();\n    setFreqItem(itemsSnapshot.size);\n    let usagePastYear = 0;\n    itemsSnapshot.forEach((doc) => {\n      const itemData = doc.data();\n      itemData.workOrders.forEach((workOrder) => {\n        const workOrderDate = new Date(workOrder.date);\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n          usagePastYear++;\n        }\n      });\n    });\n    setUsagePastYear(usagePastYear);\n  };\n\n  // -------------------- Photo Upload (unchanged)\n  const uploadPhotos = async (docID) => {\n    const storageRef = firebase.storage().ref();\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].file) {\n        const photoRef = storageRef.child(\n          `Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`\n        );\n        const metadata = { contentType: \"image/png\" };\n        await photoRef.put(photos[i].file, metadata);\n        const url = await photoRef.getDownloadURL();\n        photos[i].url = url;\n      }\n    }\n  };\n\n  // -------------------- Submission Handler\n  // For NewItem, only require Name and Description.\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!items.name || !descriptions[0]?.description) {\n      handleShow();\n    } else {\n      setLoading(true); // start loading before async work\n      try {\n        await toSend();\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false); // end loading after async work completes\n      }\n    }\n  }\n\n  async function toSend(redirect = true) {\n    const { id } = router.query; // Ensure id is defined (it may be undefined for a new item)\n    const db = firebase.firestore();\n\n    // Get the current authenticated user\n    const currentUser = firebase.auth().currentUser;\n    const userEmail = currentUser ? currentUser.email : \"unknown\";\n\n    // Always use the current state values for OEM, modality, and model.\n    const machineData = {\n      ...(TheMachine || {}),\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    const formattedItems = { ...items, descriptions, workOrders };\n    // Remove any unused fields.\n    formattedItems.status = items.status || \"\";\n    formattedItems.DOM = DOM; // Date of Manufacture\n    formattedItems.localLocFrom = localLocFrom || \"\";\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\n    formattedItems.date = items.date || \"\";\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n    formattedItems.poNumber = items.poNumber || \"\";\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\n    formattedItems.TheMachine = machineData || {};\n    formattedItems.addedToWebsite = addToWebsite;\n    formattedItems.visible = items.visible;\n\n    // Add the current user's email under the \"user\" field\n    formattedItems.user = userEmail;\n    // Clean pn and sn arrays to replace undefined values with an empty string.\n    formattedItems.pn = (items.pn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n    formattedItems.sn = (items.sn || []).map((value) =>\n      value === undefined ? \"\" : value\n    );\n\n    // Set machine references for each branch.\n    if (selectedMachine && selectedMachine.id) {\n      formattedItems.MachineFrom = db\n        .collection(\"Machine\")\n        .doc(selectedMachine.id);\n    }\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\n      formattedItems.MachineCurrent = db\n        .collection(\"Machine\")\n        .doc(selectedCurrentMachine.id);\n    }\n\n    // ***** NEW: Set client references for each branch *****\n    if (selectedClientFrom && selectedClientFrom.id) {\n      formattedItems.ClientFrom = db\n        .collection(\"Client\")\n        .doc(selectedClientFrom.id);\n    }\n    if (selectedClientCurrent && selectedClientCurrent.id) {\n      formattedItems.ClientCurrent = db\n        .collection(\"Client\")\n        .doc(selectedClientCurrent.id);\n    }\n    // ******************************************************\n\n    if (selectedParent && selectedParent.id) {\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n    }\n\n    // Only add dateCreated if this is a new document\n    if (!id) {\n      formattedItems.dateCreated = new Date().toISOString().split(\"T\")[0]; // \"YYYY-MM-DD\"\n    }\n\n    // --- LOCAL SN LOGIC ---\n    let docId = id || null;\n    try {\n      if (docId) {\n        // Check if a localSN is provided and if it differs from the current docId.\n        const newDocId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : docId;\n        if (docId !== newDocId) {\n          // Migrate: Create a new document with the newDocId.\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(newDocId)\n                ),\n              });\n            }\n          }\n          // Delete the old document.\n          await db.collection(\"Test\").doc(docId).delete();\n          // Set docId to the new document ID.\n          docId = newDocId;\n        } else {\n          // Deep-clean the formattedItems to remove any undefined nested values.\n          const cleanFormattedItems = shallowClean(formattedItems);\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n          if (selectedMachine && selectedMachine.id) {\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n            const machineDoc = await machineRef.get();\n            if (machineDoc.exists) {\n              await machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\n            const currentMachineRef = db\n              .collection(\"Machine\")\n              .doc(selectedCurrentMachine.id);\n            const currentMachineDoc = await currentMachineRef.get();\n            if (currentMachineDoc.exists) {\n              await currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                  db.collection(\"Test\").doc(docId)\n                ),\n              });\n            }\n          }\n        }\n      } else {\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n        docId =\n          items.localSN && items.localSN.trim() !== \"\"\n            ? items.localSN.trim()\n            : generateCustomID();\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\n\n        if (selectedMachine && selectedMachine.id) {\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n          const machineDoc = await machineRef.get();\n          if (machineDoc.exists) {\n            await machineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\n          const currentMachineRef = db\n            .collection(\"Machine\")\n            .doc(selectedCurrentMachine.id);\n          const currentMachineDoc = await currentMachineRef.get();\n          if (currentMachineDoc.exists) {\n            await currentMachineRef.update({\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\n                db.collection(\"Test\").doc(docId)\n              ),\n            });\n          }\n        }\n      }\n      // Upload any new photos to Firebase Storage.\n      await uploadPhotos(docId);\n      console.log(\"Item saved and associatedParts updated!\");\n\n      // Redirect to the new URL using the new document id.\n      if (redirect) {\n        router.push(`/NewSearch/item/${docId}`);\n      } else {\n        setRedirect(true);\n      }\n\n      // Optionally, show a save confirmation modal.\n      handleShowSaveModal();\n    } catch (error) {\n      console.error(\"Error saving data:\", error);\n    }\n  }\n\n  // -------------------- Info Modal Handlers (unchanged)\n  const [showInfoModal, setShowInfoModal] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const handleShowInfoModal = async () => {\n    const db = firebase.firestore();\n    try {\n      const doc = await db.collection(\"Test\").doc(id).get();\n      if (doc.exists) {\n        const data = doc.data();\n        setItemName(data.name || \"N/A\");\n        setShowInfoModal(true);\n      } else {\n        console.error(\"Item not found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching item info:\", error);\n    }\n  };\n  const handleCloseInfoModal = () => setShowInfoModal(false);\n\n  const handleCloseCameraModal = () => {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  const handleChange = (field) => (event) => {\n    const value = event.target ? event.target.value : event.value;\n    setItems((prevItems) => ({ ...prevItems, [field]: value }));\n  };\n\n  const mostRecentWorkOrder =\n    workOrders && workOrders.length > 0\n      ? workOrders.reduce((latest, current) => {\n          const latestDate = new Date(latest.date);\n          const currentDate = new Date(current.date);\n          return currentDate > latestDate ? current : latest;\n        }, workOrders[0])\n      : {};\n\n  const handleShowCameraModal = () => {\n    setShowCameraModal(true);\n  };\n\n  const generateCustomID = () => {\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    return `AIS${randomNum}`;\n  };\n\n  const handlePrint = async () => {\n    if (!items.name) {\n      alert(\"Missing name\");\n      return;\n    }\n\n    // In addItem mode, there is no existing id so generate one\n    const printId = generateCustomID();\n\n    const payload = {\n      name: items.name,\n      pn: items.pn,\n      sn: items.sn,\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n      status: items.status,\n      local_sn: printId, // Use the generated custom ID\n      descriptions: descriptions,\n      date: items.date || new Date().toISOString().split(\"T\")[0],\n      DOM: DOM,\n      oem: oem,\n      modality: modality,\n      model: model,\n    };\n\n    console.log(\"Payload for printing:\", payload);\n    try {\n      const response = await fetch(\n        \"https://cc7e-174-76-22-138.ngrok-free.app/print-label\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      const result = await response.json();\n      console.log(\"Print result:\", result);\n    } catch (error) {\n      console.error(\"Error printing label:\", error);\n    }\n  };\n\n  const handleAddNewPn = () => {\n    if (newPn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        pn: [...prev.pn, newPn.trim()],\n      }));\n    }\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  const handleAddNewSn = () => {\n    if (newSn.trim() !== \"\") {\n      setItems((prev) => ({\n        ...prev,\n        sn: [...prev.sn, newSn.trim()],\n      }));\n    }\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  };\n\n  function getPriorityMachineField(\n    field,\n    currentValue,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    // If the field is already filled in by the user, return it unchanged.\n    if (\n      currentValue &&\n      currentValue.trim() !== \"\" &&\n      currentValue.trim() !== \"N/A\"\n    ) {\n      return currentValue;\n    }\n\n    // Otherwise, prioritize the best available value.\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field].trim() !== \"\" &&\n      theMachine[field] !== \"N/A\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field].trim() !== \"\" &&\n      currentMachine[field] !== \"N/A\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field].trim() !== \"\" &&\n      fromMachine[field] !== \"N/A\"\n    ) {\n      return fromMachine[field];\n    }\n\n    return currentValue; // Default to keeping the current value\n  }\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getValidMachineField(\"oem\", theMachine, currentMachine, fromMachine),\n      modality: getValidMachineField(\n        \"modality\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n      model: getValidMachineField(\n        \"model\",\n        theMachine,\n        currentMachine,\n        fromMachine\n      ),\n    };\n  }\n\n  function getValidMachineField(\n    field,\n    theMachine,\n    currentMachine,\n    fromMachine\n  ) {\n    if (\n      theMachine &&\n      theMachine[field] &&\n      theMachine[field].trim() !== \"\" &&\n      theMachine[field] !== \"N/A\"\n    ) {\n      return theMachine[field];\n    }\n    if (\n      currentMachine &&\n      currentMachine[field] &&\n      currentMachine[field].trim() !== \"\" &&\n      currentMachine[field] !== \"N/A\"\n    ) {\n      return currentMachine[field];\n    }\n    if (\n      fromMachine &&\n      fromMachine[field] &&\n      fromMachine[field].trim() !== \"\" &&\n      fromMachine[field] !== \"N/A\"\n    ) {\n      return fromMachine[field];\n    }\n    return \"\"; // Keep it empty if no valid data exists\n  }\n\n  const [showLocalLocFrom, setShowLocalLocFrom] = useState(false);\n  const [showLocalLocCurrent, setShowLocalLocCurrent] = useState(false);\n\n  async function handleClone() {\n    event.preventDefault();\n    if (!items.name || !descriptions[0]?.description) {\n      handleShow(); // your existing error modal\n      return;\n    }\n    setLoading(true);\n    try {\n      // save but don’t redirect\n      await toSend(false);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const condition = (name) => {\n    return name && name.toLowerCase() === \"interior socal\";\n  };\n\n  const handleSetSelectedMachine = (machine) => {\n    const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    if (machinePick) {\n      setSelectedMachine({ id: machine.id, name: machine.name });\n      // For \"from\", show the local loc input if condition met.\n      setShowLocalLocFrom(condition(machine.name));\n    } else {\n      setSelectedCurrentMachine({ id: machine.id, name: machine.name });\n      // For \"current\", you might also want a local loc input:\n      setShowLocalLocCurrent(condition(machine.name));\n    }\n    fetchMachine(machine.id);\n    setShowMachineModal(false);\n  };\n\n  const [currentPnIndex, setCurrentPnIndex] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [currentSnIndex, setCurrentSnIndex] = useState(0);\n  const [showSnDropdown, setShowSnDropdown] = useState(false);\n\n  const handleAddNewClient = () => {\n    // Generate a random client number as part of the URL.\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\n    // When pushing, include a query parameter (from=item) and the current item id if available.\n    router.push(`/NewSearch/client/AIS${randomNum}/addClient?from=addItem`);\n  };\n\n  const [showMachineSelect, setShowMachineSelect] = useState(false);\n\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\n\n  return (\n    <LoggedIn>\n      {/* Error Modal */}\n      <MachineSelectionModal\n        show={machineSelectionModal}\n        handleClose={() => setMachineSelectionModal(false)}\n        setMachine={handleSetSelectedMachine}\n        machineOptions={machineOptions} // if your modal needs the list of machines\n      />\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Missing required field: Name and Description</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      {/* Other Modals: showErr, showSaveModal, Descriptions, Work Orders, etc. */}\n      <Modal show={showErr} onHide={handleCloseErr}>\n        <Modal.Header closeButton>\n          <Modal.Title>Error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{Err}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseErr}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showSaveModal} onHide={handleCloseSaveModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Save Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Data has been saved successfully.</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleCloseSaveModal}>\n            Ok\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showDescModal} onHide={handleCloseDescModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Descriptions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n            Add Description\n          </Button>\n          {descriptions.map((desc, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Button\n                variant=\"outline-secondary\"\n                className=\"w-100\"\n                onClick={() => selectDescription(index)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <span>{desc.description || \"Description\"}</span>\n                  <span\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      paddingLeft: \"10px\",\n                    }}\n                  >\n                    {desc.date || \"Date\"}\n                  </span>\n                </div>\n              </Button>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseDescModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n      <Modal show={showWoModal} onHide={handleCloseWoModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Work Orders</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button\n            variant=\"primary\"\n            className=\"mb-3\"\n            onClick={addWorkOrder}\n            style={{ marginBottom: \"1rem\" }}\n          >\n            Add Work Order\n          </Button>\n          {workOrders.map((wo, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Col>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Work Order\"\n                  value={wo.workOrder}\n                  onChange={(e) =>\n                    handleWorkOrderChange(index, \"workOrder\", e.target.value)\n                  }\n                  style={{ marginBottom: \"0.5rem\" }}\n                />\n              </Col>\n              <Col>\n                <Form.Control\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  value={wo.date}\n                  onChange={(e) =>\n                    handleWorkOrderChange(index, \"date\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col>\n                <Button variant=\"danger\" onClick={() => removeWorkOrder(index)}>\n                  Remove\n                </Button>\n              </Col>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseWoModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n      {/* Machine Selection Modal */}\n      <ClientInfoModal\n        show={showMachineModal}\n        handleClose={handleCloseMachineModal}\n        selectedClient={selectedClient}\n        machineOptions={machineOptions}\n        setSelectedMachine={handleSetSelectedMachine}\n      />\n      <Modal show={showClientModal} onHide={handleCloseClientModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Client</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <ClientTable\n            clients={clients.filter((client) =>\n              client.name.toLowerCase().includes(search.toLowerCase())\n            )}\n            onSelectClient={handleClientInfo}\n            onInfoClick={handleClientInfo}\n            clearSelection={() => handleClientInfo(null)}\n            onAddClient={handleAddNewClient} // new prop\n          />\n        </Modal.Body>\n      </Modal>\n\n      <ParentModal\n        show={showParentModal}\n        handleClose={handleCloseParentModal}\n        setSelectedParent={setSelectedParent}\n      />\n      <MachineSelectionModal\n        show={machineSelectionModal}\n        handleClose={() => setMachineSelectionModal(false)}\n        setMachine={setTheMachine}\n      />\n      {/* Camera Modal */}\n      <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Take a Photo</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"camera\">\n            {!capturedPhoto ? (\n              <BarcodeScannerComponent\n                width=\"100%\"\n                height={300}\n                onUpdate={handleCapture}\n                facingMode={cameraFacing}\n              />\n            ) : (\n              <div className=\"photo-preview\">\n                <img\n                  src={URL.createObjectURL(capturedPhoto)}\n                  alt=\"captured\"\n                  style={{ width: \"100%\" }}\n                />\n              </div>\n            )}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {!capturedPhoto ? (\n            <>\n              <Button\n                onClick={capturePhoto}\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"60px\",\n                  height: \"60px\",\n                  position: \"absolute\",\n                  left: \"50%\",\n                  transform: \"translateX(-50%)\",\n                  bottom: \"10px\",\n                }}\n              >\n                📷\n              </Button>\n              <Button\n                onClick={() =>\n                  setCameraFacing((prev) =>\n                    prev === \"environment\" ? \"user\" : \"environment\"\n                  )\n                }\n              >\n                Flip Camera\n              </Button>\n              <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                variant=\"secondary\"\n                onClick={() => setCapturedPhoto(null)}\n              >\n                Retake\n              </Button>\n              <Button variant=\"primary\" onClick={savePhoto}>\n                OK\n              </Button>\n            </>\n          )}\n        </Modal.Footer>\n      </Modal>\n      {/* Descriptions Modal */}\n      <Modal show={showDescModal} onHide={handleCloseDescModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Descriptions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\n            Add Description\n          </Button>\n          {descriptions.map((desc, index) => (\n            <Row key={index} className=\"mb-3\">\n              <Button\n                variant=\"outline-secondary\"\n                className=\"w-100\"\n                onClick={() => selectDescription(index)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <span>{desc.description || \"Description\"}</span>\n                  <span\n                    style={{\n                      borderLeft: \"1px solid #ccc\",\n                      paddingLeft: \"10px\",\n                    }}\n                  >\n                    {desc.date || \"Date\"}\n                  </span>\n                </div>\n              </Button>\n            </Row>\n          ))}\n          <Button variant=\"primary\" onClick={handleCloseDescModal}>\n            OK\n          </Button>\n        </Modal.Body>\n      </Modal>\n\n      {/* Info Modal */}\n      <InfoModal\n        show={showInfoModal}\n        handleClose={handleCloseInfoModal}\n        itemName={items.name}\n        dimensions={`${items.length},${items.width},${items.height}`}\n        price={items.price}\n        freqI={freqItem}\n        freqM={machineFrequency}\n        usage={usagePastYear}\n      />\n      {loading && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n            backdropFilter: \"blur(5px)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            zIndex: 9999, // Make sure it's above everything else\n          }}\n        >\n          <Spinner animation=\"border\" variant=\"primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n      {/* Main Form */}\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"600px\" }}>\n          <Card className=\"align-items-center justify-content-center\">\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Add New Item</h2>\n              <Form onSubmit={handleSubmit}>\n                {/* Row for Name and PN */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"name\">\n                      <Form.Label>Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        value={items.name}\n                        onChange={handleChange(\"name\")}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"pn\">\n                      <Form.Label>Product Number</Form.Label>\n                      <div style={{ position: \"relative\" }}>\n                        <InputGroup>\n                          {/* Editable input field displaying the current PN */}\n                          <Form.Control\n                            type=\"text\"\n                            value={items.pn[currentPnIndex] || \"\"}\n                            onChange={(e) =>\n                              handlePnChange(currentPnIndex, e.target.value)\n                            }\n                          />\n                          {/* Arrow button to toggle dropdown */}\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => setShowDropdown(!showDropdown)}\n                          >\n                            &#9662;\n                          </Button>\n                          {/* Plus button to add a new PN */}\n                          <InputGroup.Text>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setAddingNewPn(true)}\n                            >\n                              +\n                            </Button>\n                          </InputGroup.Text>\n                        </InputGroup>\n                        {/* Dropdown list showing only the current item's PN options */}\n                        {showDropdown && (\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              top: \"100%\",\n                              left: 0,\n                              right: 0,\n                              backgroundColor: \"white\",\n                              border: \"1px solid #ccc\",\n                              zIndex: 1000,\n                              maxHeight: \"150px\",\n                              overflowY: \"auto\",\n                            }}\n                          >\n                            {items.pn.map((pnOption, idx) => (\n                              <div\n                                key={idx}\n                                style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setCurrentPnIndex(idx);\n                                  setShowDropdown(false);\n                                }}\n                              >\n                                {pnOption}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      {/* Input for adding a new PN, if triggered */}\n                      {addingNewPn && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter new PN\"\n                          value={newPn}\n                          onChange={(e) => setNewPn(e.target.value)}\n                          onBlur={handleAddNewPn}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              handleAddNewPn();\n                            }\n                          }}\n                        />\n                      )}\n                    </Form.Group>\n                  </Col>\n                </Row>\n                {/* Row for SN */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"sn\">\n                      <Form.Label>Serial Number</Form.Label>\n                      <div style={{ position: \"relative\" }}>\n                        <InputGroup>\n                          {/* Inline editable input showing the currently selected SN */}\n                          <Form.Control\n                            type=\"text\"\n                            value={items.sn[currentSnIndex] || \"\"}\n                            onChange={(e) =>\n                              handleSnChange(currentSnIndex, e.target.value)\n                            }\n                          />\n                          {/* Arrow button to toggle SN dropdown */}\n                          <Button\n                            variant=\"outline-secondary\"\n                            onClick={() => setShowSnDropdown(!showSnDropdown)}\n                          >\n                            &#9662;\n                          </Button>\n                          {/* Plus button to add a new SN */}\n                          <InputGroup.Text>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setAddingNewSn(true)}\n                            >\n                              +\n                            </Button>\n                          </InputGroup.Text>\n                        </InputGroup>\n                        {/* Dropdown list for SN options */}\n                        {showSnDropdown && (\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              top: \"100%\",\n                              left: 0,\n                              right: 0,\n                              backgroundColor: \"white\",\n                              border: \"1px solid #ccc\",\n                              zIndex: 1000,\n                              maxHeight: \"150px\",\n                              overflowY: \"auto\",\n                            }}\n                          >\n                            {items.sn.map((snOption, idx) => (\n                              <div\n                                key={idx}\n                                style={{ padding: \"8px\", cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setCurrentSnIndex(idx);\n                                  setShowSnDropdown(false);\n                                }}\n                              >\n                                {snOption}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                      {/* Input for adding a completely new SN */}\n                      {addingNewSn && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter new SN\"\n                          value={newSn}\n                          onChange={(e) => setNewSn(e.target.value)}\n                          onBlur={handleAddNewSn}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              handleAddNewSn();\n                            }\n                          }}\n                        />\n                      )}\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"status\">\n                      <Form.Label>Status</Form.Label>\n                      <Form.Select\n                        value={items.status || \"\"}\n                        onChange={handleChange(\"status\")}\n                      >\n                        <option value=\"\">Select status</option>\n                        <option value=\"Good\">Good</option>\n                        <option value=\"Bad\">Bad</option>\n                        <option value=\"Unknown\">Unknown</option>\n                      </Form.Select>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                {/* Row for OEM, Modality, Model */}\n                <Row className=\"mb-3\">\n                  <Col>\n                    <Form.Group controlId=\"oem\">\n                      <Form.Label>OEM</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"OEM\"\n                        value={oem}\n                        onChange={(e) => setOem(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"modality\">\n                      <Form.Label>Modality</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Modality\"\n                        value={modality}\n                        onChange={(e) => setModality(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group controlId=\"model\">\n                      <Form.Label>Model</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Model\"\n                        value={model}\n                        onChange={(e) => setModel(e.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                {/* Work Orders and Descriptions Section */}\n                <div style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\n                  <div className=\"d-flex align-items-center\">\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={handleShowWoModal}\n                      className=\"me-2\"\n                    >\n                      Manage Work Orders\n                    </Button>\n                    {workOrders.length > 0 && (\n                      <div className=\"d-flex flex-column align-items-start\">\n                        <Form.Label>Work Order</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Most Recent Work Order\"\n                          value={mostRecentWorkOrder?.workOrder || \"\"}\n                          onChange={(e) =>\n                            handleWorkOrderChange(\n                              workOrders.indexOf(mostRecentWorkOrder),\n                              \"workOrder\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                        <Form.Label>Date</Form.Label>\n                        <Form.Control\n                          type=\"date\"\n                          placeholder=\"Work Order Date\"\n                          value={mostRecentWorkOrder?.date || \"\"}\n                          onChange={(e) =>\n                            handleWorkOrderChange(\n                              workOrders.indexOf(mostRecentWorkOrder),\n                              \"date\",\n                              e.target.value\n                            )\n                          }\n                          style={{ marginBottom: \"0.5rem\" }}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {/* Description Editing */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Form.Group controlId=\"desc\">\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={listDescriptions}\n                      className=\"mb-2 me-2\"\n                    >\n                      List Descriptions\n                    </Button>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Enter description\"\n                      value={descriptions[selectedDesc]?.description || \"\"}\n                      onChange={(e) =>\n                        handleDescriptionChange(\n                          selectedDesc,\n                          \"description\",\n                          e.target.value\n                        )\n                      }\n                      style={{ marginBottom: \"0.5rem\" }}\n                    />\n                    <Form.Control\n                      type=\"date\"\n                      value={descriptions[selectedDesc]?.date || \"\"}\n                      onChange={(e) =>\n                        handleDescriptionChange(\n                          selectedDesc,\n                          \"date\",\n                          e.target.value\n                        )\n                      }\n                      style={{ marginTop: \"0.5rem\", marginBottom: \"0.5rem\" }}\n                    />\n                  </Form.Group>\n                </div>\n                {/* Machine Selection Row with Local Loc Inputs */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Row className=\"mb-3\">\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          setMachinePick(true);\n                          handleShowClientModal();\n                        }}\n                        className=\"me-2\"\n                      >\n                        Select From\n                      </Button>\n                      {selectedClientFrom && (\n                        <div\n                          style={{\n                            border: \"1px solid #ccc\",\n                            padding: \"0.75rem\",\n                            borderRadius: \"4px\",\n                            marginBottom: \"1rem\",\n                          }}\n                        >\n                          <p>\n                            <strong>Selected Client (From):</strong>{\" \"}\n                            {selectedClientFrom.name}\n                          </p>\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowMachineModal(true)}\n                            >\n                              Select Machine for {selectedClientFrom.name}\n                            </Button>\n                            {selectedMachine && (\n                              <>\n                                <p style={{ marginTop: \"0.5rem\" }}>\n                                  <strong>Selected Machine (From):</strong>{\" \"}\n                                  {selectedMachine.name}\n                                </p>\n                                {showLocalLocFrom && (\n                                  <Form.Group\n                                    controlId=\"localLocFrom\"\n                                    className=\"mt-2\"\n                                  >\n                                    <Form.Label>Local Loc (From)</Form.Label>\n                                    <Form.Control\n                                      type=\"text\"\n                                      value={localLocFrom}\n                                      onChange={(e) =>\n                                        setLocalLocFrom(e.target.value)\n                                      }\n                                    />\n                                  </Form.Group>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          setMachinePick(false);\n                          handleShowClientModal();\n                        }}\n                        className=\"me-2\"\n                      >\n                        Select Current\n                      </Button>\n                      {selectedClientCurrent && (\n                        <div\n                          style={{\n                            border: \"1px solid #ccc\",\n                            padding: \"0.75rem\",\n                            borderRadius: \"4px\",\n                            marginBottom: \"1rem\",\n                          }}\n                        >\n                          <p>\n                            <strong>Selected Client (Current):</strong>{\" \"}\n                            {selectedClientCurrent.name}\n                          </p>\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={() => setShowMachineModal(true)}\n                            >\n                              Select Machine for {selectedClientCurrent.name}\n                            </Button>\n                            {selectedCurrentMachine && (\n                              <>\n                                <p style={{ marginTop: \"0.5rem\" }}>\n                                  <strong>Selected Machine (Current):</strong>{\" \"}\n                                  {selectedCurrentMachine.name}\n                                </p>\n                                {showLocalLocCurrent && (\n                                  <Form.Group\n                                    controlId=\"localLocCurrent\"\n                                    className=\"mt-2\"\n                                  >\n                                    <Form.Label>Local Loc (Current)</Form.Label>\n                                    <Form.Control\n                                      type=\"text\"\n                                      value={localLocCurrent}\n                                      onChange={(e) =>\n                                        setLocalLocCurrent(e.target.value)\n                                      }\n                                    />\n                                  </Form.Group>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col>\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={handleShowParentModal}\n                        className=\"me-2\"\n                      >\n                        Select Parent\n                      </Button>\n                      {selectedParent && (\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Selected Parent\"\n                          value={selectedParent.name}\n                          readOnly\n                          style={{ cursor: \"default\", marginTop: \"0.5rem\" }}\n                        />\n                      )}\n                    </Col>\n                  </Row>\n                </div>\n                {/* Photo Action Row */}\n                <div style={{ marginBottom: \"1rem\" }}>\n                  <Row className=\"mb-3\">\n                    <Col xs={6}>\n                      <ButtonGroup>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleShowCameraModal}\n                        >\n                          Take Photo\n                        </Button>\n                        <Button\n                          variant=\"outline-secondary\"\n                          onClick={handleBrowsePhotos}\n                        >\n                          Browse\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                    <Col xs={6} className=\"d-flex align-items-center\">\n                      <Button\n                        variant={addToWebsite ? \"primary\" : \"outline-primary\"}\n                        onClick={() => setAddToWebsite((prev) => !prev)}\n                      >\n                        {addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"}\n                      </Button>\n                      <Form.Check\n                        type=\"checkbox\"\n                        id=\"hide-checkbox\"\n                        label=\"Hide\"\n                        // box is checked when we want visible = false\n                        checked={!items.visible}\n                        onChange={(e) => {\n                          // grab checked immediately\n                          const isHidden = e.currentTarget.checked;\n                          setItems((prev) => ({\n                            ...prev,\n                            visible: !isHidden,\n                          }));\n                        }}\n                        className=\"ms-3\"\n                      />\n                    </Col>\n                  </Row>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    ref={browseInputRef}\n                    style={{ display: \"none\" }}\n                    onChange={handleFilesSelected}\n                  />\n                </div>\n                {/* Photo Gallery */}\n                <div className=\"mt-3 d-flex flex-wrap\">\n                  {photos.map((photo, index) => (\n                    <div\n                      key={index}\n                      className=\"d-flex flex-column align-items-center mb-2 me-2\"\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <img\n                        src={photo.url}\n                        alt={`Photo ${index + 1}`}\n                        style={{\n                          width: \"100%\",\n                          height: \"100%\",\n                          objectFit: \"cover\",\n                        }}\n                      />\n                      {photo.file && (\n                        <Button\n                          variant=\"danger\"\n                          size=\"sm\"\n                          style={{\n                            position: \"absolute\",\n                            top: 0,\n                            right: 0,\n                            padding: \"0 5px\",\n                          }}\n                          onClick={() => removePhoto(index)}\n                        >\n                          X\n                        </Button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n                {/* Extra Section: Dimensions, Price, and DOM */}\n\n                {/* Submit Row */}\n                <div className=\"mt-3 d-flex flex-wrap align-items-center\">\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    style={{ marginRight: \"1rem\" }}\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    variant=\"info\"\n                    onClick={handleClone}\n                    style={{ marginRight: \"1rem\" }}\n                  >\n                    Clone\n                  </Button>\n                  <LoadingButton\n                    type=\"secondary\"\n                    name=\"Back\"\n                    route=\"NewSearch/mainSearch\"\n                  />\n                  <Button\n                    variant=\"info\"\n                    onClick={handlePrint}\n                    style={{ marginLeft: \"auto\" }}\n                  >\n                    Print Label\n                  </Button>\n                </div>\n                <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\n                  <Button\n                    variant=\"link\"\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"black\",\n                      fontSize: \"24px\",\n                    }}\n                    onClick={() => setShowExtra(!showExtra)}\n                  >\n                    ▼\n                  </Button>\n                </div>\n                <Collapse in={showExtra}>\n                  <div id=\"extra-collapse\" className=\"mt-3\">\n                    <Row>\n                      <Form.Group as={Col} controlId=\"dimensions\">\n                        <Form.Label>Dimensions (L x W x H)</Form.Label>\n                        <Row>\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Length\"\n                              type=\"text\"\n                              value={items.length}\n                              onChange={handleChange(\"length\")}\n                            />\n                          </Col>\n                          x\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Width\"\n                              type=\"text\"\n                              value={items.width}\n                              onChange={handleChange(\"width\")}\n                            />\n                          </Col>\n                          x\n                          <Col>\n                            <Form.Control\n                              placeholder=\"Height\"\n                              type=\"text\"\n                              value={items.height}\n                              onChange={handleChange(\"height\")}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control\n                          placeholder=\"Price\"\n                          type=\"text\"\n                          value={items.price}\n                          onChange={handleChange(\"price\")}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row className=\"mt-3\">\n                      <Form.Group as={Col} controlId=\"DOM\">\n                        <Form.Label>DOM (Date of Manufacture)</Form.Label>\n                        <Form.Control\n                          placeholder=\"Enter DOM\"\n                          type=\"date\"\n                          value={DOM}\n                          onChange={(e) => setDOM(e.target.value)}\n                        />\n                      </Form.Group>\n                      {/* NEW: Local SN input */}\n                      <Form.Group as={Col} controlId=\"localSN\">\n                        <Form.Label>Local SN</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Enter Local SN\"\n                          value={items.localSN || \"\"}\n                          onChange={handleChange(\"localSN\")}\n                        />\n                      </Form.Group>\n                    </Row>\n                    <Row>\n                      <Form.Group as={Col} controlId=\"poNumber\">\n                        <Form.Label>PO Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"PO Number\"\n                          value={items.poNumber || \"\"}\n                          onChange={handleChange(\"poNumber\")}\n                        />\n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"arrivalDate\">\n                        <Form.Label>Arrival Date</Form.Label>\n                        <Form.Control\n                          placeholder=\"Enter Arrival Date\"\n                          type=\"date\"\n                          value={items.arrival_date}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            setItems((prev) => ({\n                              ...prev,\n                              arrival_date: value,\n                            }));\n                          }}\n                        />\n                      </Form.Group>\n                    </Row>\n                  </div>\n                </Collapse>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </Container>\n    </LoggedIn>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}