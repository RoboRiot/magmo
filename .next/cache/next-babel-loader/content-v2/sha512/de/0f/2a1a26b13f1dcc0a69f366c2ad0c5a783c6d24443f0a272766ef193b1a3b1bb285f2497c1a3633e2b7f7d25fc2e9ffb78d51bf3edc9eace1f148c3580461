{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nvar API_BASE_URL = 'https://keep.googleapis.com/v1';\n\nvar GoogleKeepApp = function GoogleKeepApp() {\n  var _useState = useState([]),\n      notes = _useState[0],\n      setNotes = _useState[1];\n\n  useEffect(function () {\n    fetchNotes();\n  }, []);\n\n  var fetchNotes = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"\".concat(API_BASE_URL, \"/notes\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              setNotes(data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching notes:', _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function fetchNotes() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createNote = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var newNote, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newNote = {\n                title: 'New Note',\n                content: 'This is a new note created via the API.'\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(\"\".concat(API_BASE_URL, \"/notes\"), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newNote)\n              });\n\n            case 4:\n              response = _context2.sent;\n\n              if (response.ok) {\n                fetchNotes();\n              } else {\n                console.error('Failed to create note:', response.status);\n              }\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('Error creating note:', _context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function createNote() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteNote = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(noteId) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"\".concat(API_BASE_URL, \"/notes/\").concat(noteId), {\n                method: 'DELETE'\n              });\n\n            case 3:\n              response = _context3.sent;\n\n              if (response.ok) {\n                fetchNotes();\n              } else {\n                console.error('Failed to delete note:', response.status);\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error deleting note:', _context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function deleteNote(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Google Keep Notes\"), __jsx(\"button\", {\n    onClick: createNote\n  }, \"Create Note\"), __jsx(\"ul\", null, notes.map(function (note) {\n    return __jsx(\"li\", {\n      key: note.id\n    }, __jsx(\"h3\", null, note.title), __jsx(\"p\", null, note.content), __jsx(\"button\", {\n      onClick: function onClick() {\n        return deleteNote(note.id);\n      }\n    }, \"Delete\"));\n  })));\n};\n\nexport default GoogleKeepApp;","map":null,"metadata":{},"sourceType":"module"}