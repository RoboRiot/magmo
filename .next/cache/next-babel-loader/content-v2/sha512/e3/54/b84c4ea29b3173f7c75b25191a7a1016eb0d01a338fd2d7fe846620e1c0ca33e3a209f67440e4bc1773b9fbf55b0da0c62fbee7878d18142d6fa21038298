{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nvar MachineCreationModal = function MachineCreationModal(_ref) {\n  var show = _ref.show,\n      handleClose = _ref.handleClose,\n      onCreateMachine = _ref.onCreateMachine;\n\n  var _useState = useState({\n    name: \"\",\n    OEM: \"\",\n    Modality: \"\",\n    Model: \"\",\n    local: \"\",\n    lastPM: \"\",\n    nextPM: \"\"\n  }),\n      newMachine = _useState[0],\n      setNewMachine = _useState[1];\n\n  var handleChange = function handleChange(field) {\n    return function (event) {\n      var value = event.target.value;\n      setNewMachine(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n      });\n    };\n  };\n\n  var handleCreate = function handleCreate() {\n    onCreateMachine(newMachine);\n    setNewMachine({\n      name: \"\",\n      OEM: \"\",\n      Modality: \"\",\n      Model: \"\",\n      local: \"\",\n      lastPM: \"\",\n      nextPM: \"\"\n    });\n  };\n\n  return __jsx(Modal, {\n    show: show,\n    onHide: handleClose\n  }, __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, null, \"Create New Machine\")), __jsx(Modal.Body, null, __jsx(Form, null, __jsx(Form.Group, {\n    controlId: \"machineName\"\n  }, __jsx(Form.Label, null, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter machine name\",\n    value: newMachine.name,\n    onChange: handleChange(\"name\")\n  })), __jsx(Form.Group, {\n    controlId: \"OEM\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter OEM\",\n    value: newMachine.OEM,\n    onChange: handleChange(\"OEM\")\n  })), __jsx(Form.Group, {\n    controlId: \"Modality\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter modality\",\n    value: newMachine.Modality,\n    onChange: handleChange(\"Modality\")\n  })), __jsx(Form.Group, {\n    controlId: \"Model\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter model\",\n    value: newMachine.Model,\n    onChange: handleChange(\"Model\")\n  })), __jsx(Form.Group, {\n    controlId: \"local\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Location\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter location\",\n    value: newMachine.local,\n    onChange: handleChange(\"local\")\n  })), __jsx(Form.Group, {\n    controlId: \"lastPM\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"Last PM\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Enter last PM date\",\n    value: newMachine.lastPM,\n    onChange: handleChange(\"lastPM\")\n  })), __jsx(Form.Group, {\n    controlId: \"nextPM\",\n    className: \"mt-3\"\n  }, __jsx(Form.Label, null, \"next PM\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Enter next PM date\",\n    value: newMachine.nextPM,\n    onChange: handleChange(\"nextPM\")\n  })))), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleClose\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCreate\n  }, \"Add Machine\")));\n};\n\nexport default MachineCreationModal;","map":null,"metadata":{},"sourceType":"module"}