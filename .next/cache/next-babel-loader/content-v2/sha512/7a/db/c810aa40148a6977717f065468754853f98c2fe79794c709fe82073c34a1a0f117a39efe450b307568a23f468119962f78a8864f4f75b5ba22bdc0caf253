{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Card, Row, Col, FormControl, Button, Spinner } from \"react-bootstrap\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../utils/fetchAssociations\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport styles from \"../../styles/MainSearch.module.css\"; // import styles from \"../../styles/ClientPage.module.css\";\n\nvar ClientPage = function ClientPage() {\n  var _useState = useState([]),\n      clients = _useState[0],\n      setClients = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      clientSearchTerm = _useState2[0],\n      setClientSearchTerm = _useState2[1];\n\n  var _useState3 = useState(true),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var router = useRouter(); // Fetch clients when the component mounts\n\n  useEffect(function () {\n    var fetchClientData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var clientsData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetchClients();\n\n              case 3:\n                clientsData = _context.sent;\n                setClients(clientsData);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Error fetching clients: \", _context.t0);\n\n              case 10:\n                _context.prev = 10;\n                setIsLoading(false);\n                return _context.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7, 10, 13]]);\n      }));\n\n      return function fetchClientData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchClientData();\n  }, []); // Handle search input changes\n\n  var handleSearchChange = function handleSearchChange(event) {\n    setClientSearchTerm(event.target.value);\n  }; // Handle client selection\n\n\n  var handleSelectClient = function handleSelectClient(clientId) {\n    console.log(\"Selected client ID:\", clientId); // Redirect to client-specific page\n\n    router.push(\"client/\".concat(clientId));\n  }; // Handle client info button click\n\n\n  var handleClientInfo = function handleClientInfo(clientId) {\n    router.push(\"client/\".concat(clientId, \"/addClient\"));\n  }; // Clear search input\n\n\n  var clearSelection = function clearSelection() {\n    setClientSearchTerm(\"\");\n  };\n\n  var addClient = function addClient() {\n    var randomNumber = Math.floor(10000 + Math.random() * 90000); // Navigate to the new route with the random number\n\n    router.push(\"client/AIS\".concat(randomNumber, \"/addClient\"));\n  };\n\n  return __jsx(Container, {\n    className: \"py-4\"\n  }, __jsx(Card, null, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Clients\"), isLoading ? __jsx(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      minHeight: \"300px\"\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"Loading...\"))) : __jsx(React.Fragment, null, __jsx(Row, {\n    className: \"mb-3\"\n  }, __jsx(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    value: clientSearchTerm,\n    onChange: handleSearchChange,\n    className: \"mb-3\"\n  }), __jsx(Row, {\n    className: \"mb-3\"\n  }, __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: clearSelection\n  }, \"Clear Search\")), __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"w-100\",\n    onClick: addClient\n  }, \"Add New Client\")), __jsx(Col, {\n    md: 4\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100\",\n    onClick: function onClick() {\n      return router.push(\"../Warehousedb/WarehouseSelect\");\n    }\n  }, \"back\"))))), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return (client.name || \"\").toLowerCase().includes(clientSearchTerm.toLowerCase());\n    }),\n    onSelectClient: handleSelectClient,\n    onInfoClick: handleClientInfo,\n    isClientSearch: true // clearSelection={clearSelection}\n\n  })))));\n};\n\nexport default ClientPage;","map":null,"metadata":{},"sourceType":"module"}