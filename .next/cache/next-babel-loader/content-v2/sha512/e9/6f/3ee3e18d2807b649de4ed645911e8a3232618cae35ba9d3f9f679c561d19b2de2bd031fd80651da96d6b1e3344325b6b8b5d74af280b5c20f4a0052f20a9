{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/OneDrive/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/mack2/OneDrive/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/OneDrive/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport firebase from \"../context/Firebase\";\nexport function fetchPartsWithMachineData() {\n  return _fetchPartsWithMachineData.apply(this, arguments);\n}\n\nfunction _fetchPartsWithMachineData() {\n  _fetchPartsWithMachineData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var db, partsSnapshot, parts;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            db = firebase.firestore();\n            _context2.next = 3;\n            return db.collection(\"Test\").get();\n\n          case 3:\n            partsSnapshot = _context2.sent;\n            _context2.next = 6;\n            return Promise.all(partsSnapshot.docs.map( /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(partDoc) {\n                var partData, machineDoc, clientDoc;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        partData = partDoc.data();\n                        partData.id = partDoc.id; // Add document ID here\n                        // console.log(partData);\n\n                        if (!(partData.Machine && partData.Machine instanceof firebase.firestore.DocumentReference)) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        console.log(partData.Machine);\n                        _context.next = 6;\n                        return partData.Machine.get();\n\n                      case 6:\n                        machineDoc = _context.sent;\n                        partData.machineData = machineDoc.exists ? machineDoc.data() : {};\n\n                        if (!partData.machineData.client) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        _context.next = 11;\n                        return partData.machineData.client.get();\n\n                      case 11:\n                        clientDoc = _context.sent;\n                        partData.machineData.Client = clientDoc.exists ? clientDoc.data().name : \"\";\n\n                      case 13:\n                        _context.next = 16;\n                        break;\n\n                      case 15:\n                        partData.machineData = {};\n\n                      case 16:\n                        return _context.abrupt(\"return\", partData);\n\n                      case 17:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x6) {\n                return _ref.apply(this, arguments);\n              };\n            }()));\n\n          case 6:\n            parts = _context2.sent;\n            return _context2.abrupt(\"return\", parts);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchPartsWithMachineData.apply(this, arguments);\n}\n\nexport function fetchClients(_x, _x2) {\n  return _fetchClients.apply(this, arguments);\n}\n\nfunction _fetchClients() {\n  _fetchClients = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(selectedOEM, selectedModality) {\n    var db, clientsSnapshot, clients, filteredClients, _iterator, _step, client, match, _iterator2, _step2, machineRef, machineDoc, machineData;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            db = firebase.firestore();\n            _context3.next = 3;\n            return db.collection(\"Client\").get();\n\n          case 3:\n            clientsSnapshot = _context3.sent;\n            clients = clientsSnapshot.docs.map(function (doc) {\n              return _objectSpread({\n                id: doc.id\n              }, doc.data());\n            }); // Filter clients based on OEM and Modality if selected\n\n            if (!(selectedOEM || selectedModality)) {\n              _context3.next = 51;\n              break;\n            }\n\n            filteredClients = [];\n            _iterator = _createForOfIteratorHelper(clients);\n            _context3.prev = 8;\n\n            _iterator.s();\n\n          case 10:\n            if ((_step = _iterator.n()).done) {\n              _context3.next = 42;\n              break;\n            }\n\n            client = _step.value;\n            match = true;\n\n            if (!(selectedOEM || selectedModality)) {\n              _context3.next = 39;\n              break;\n            }\n\n            _iterator2 = _createForOfIteratorHelper(client.machines);\n            _context3.prev = 15;\n\n            _iterator2.s();\n\n          case 17:\n            if ((_step2 = _iterator2.n()).done) {\n              _context3.next = 31;\n              break;\n            }\n\n            machineRef = _step2.value;\n            _context3.next = 21;\n            return machineRef.get();\n\n          case 21:\n            machineDoc = _context3.sent;\n            machineData = machineDoc.data();\n\n            if (!(selectedOEM && machineData.OEM === selectedOEM || selectedModality && machineData.Modality === selectedModality)) {\n              _context3.next = 28;\n              break;\n            }\n\n            match = true;\n            return _context3.abrupt(\"break\", 31);\n\n          case 28:\n            match = false;\n\n          case 29:\n            _context3.next = 17;\n            break;\n\n          case 31:\n            _context3.next = 36;\n            break;\n\n          case 33:\n            _context3.prev = 33;\n            _context3.t0 = _context3[\"catch\"](15);\n\n            _iterator2.e(_context3.t0);\n\n          case 36:\n            _context3.prev = 36;\n\n            _iterator2.f();\n\n            return _context3.finish(36);\n\n          case 39:\n            if (match) {\n              filteredClients.push(client);\n            }\n\n          case 40:\n            _context3.next = 10;\n            break;\n\n          case 42:\n            _context3.next = 47;\n            break;\n\n          case 44:\n            _context3.prev = 44;\n            _context3.t1 = _context3[\"catch\"](8);\n\n            _iterator.e(_context3.t1);\n\n          case 47:\n            _context3.prev = 47;\n\n            _iterator.f();\n\n            return _context3.finish(47);\n\n          case 50:\n            return _context3.abrupt(\"return\", filteredClients);\n\n          case 51:\n            return _context3.abrupt(\"return\", clients);\n\n          case 52:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[8, 44, 47, 50], [15, 33, 36, 39]]);\n  }));\n  return _fetchClients.apply(this, arguments);\n}\n\nexport function fetchModels(_x3, _x4, _x5) {\n  return _fetchModels.apply(this, arguments);\n}\n\nfunction _fetchModels() {\n  _fetchModels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(selectedOEM, selectedModality, selectedClient) {\n    var db, machinesSnapshot, models;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            db = firebase.firestore();\n            _context5.next = 3;\n            return db.collection(\"Machine\").get();\n\n          case 3:\n            machinesSnapshot = _context5.sent;\n            models = new Set();\n            _context5.next = 7;\n            return Promise.all(machinesSnapshot.docs.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(machineDoc) {\n                var machineData, isValid, clientDoc;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        machineData = machineDoc.data();\n                        isValid = true;\n                        if (selectedOEM && machineData.OEM !== selectedOEM) isValid = false;\n                        if (selectedModality && machineData.Modality !== selectedModality) isValid = false;\n\n                        if (!(selectedClient && machineData.client)) {\n                          _context4.next = 9;\n                          break;\n                        }\n\n                        _context4.next = 7;\n                        return machineData.client.get();\n\n                      case 7:\n                        clientDoc = _context4.sent;\n                        if (!clientDoc.exists || clientDoc.data().name !== selectedClient) isValid = false;\n\n                      case 9:\n                        if (isValid) {\n                          models.add(machineData.Model);\n                        }\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 7:\n            return _context5.abrupt(\"return\", Array.from(models));\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _fetchModels.apply(this, arguments);\n}\n\nexport function formatDate(timestamp) {\n  if (!timestamp) return \"\";\n  var date;\n\n  if (timestamp.toDate) {\n    date = timestamp.toDate();\n  } else if (typeof timestamp === \"string\" || typeof timestamp === \"number\") {\n    date = new Date(timestamp);\n  } else {\n    return \"\"; // handle unexpected formats\n  }\n\n  var day = String(date.getDate()).padStart(2, \"0\");\n  var month = String(date.getMonth() + 1).padStart(2, \"0\");\n  var year = date.getFullYear();\n  return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n}","map":{"version":3,"sources":["C:/Users/mack2/OneDrive/Desktop/code/utils/fetchAssociations.js"],"names":["React","firebase","fetchPartsWithMachineData","db","firestore","collection","get","partsSnapshot","Promise","all","docs","map","partDoc","partData","data","id","Machine","DocumentReference","console","log","machineDoc","machineData","exists","client","clientDoc","Client","name","parts","fetchClients","selectedOEM","selectedModality","clientsSnapshot","clients","doc","filteredClients","match","machines","machineRef","OEM","Modality","push","fetchModels","selectedClient","machinesSnapshot","models","Set","isValid","add","Model","Array","from","formatDate","timestamp","date","toDate","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react'\nimport firebase from \"../context/Firebase\";\n\nexport async function fetchPartsWithMachineData() {\n  const db = firebase.firestore();\n  const partsSnapshot = await db.collection(\"Test\").get();\n  const parts = await Promise.all(\n    partsSnapshot.docs.map(async (partDoc) => {\n      const partData = partDoc.data();\n      partData.id = partDoc.id; // Add document ID here\n      // console.log(partData);\n      if (\n        partData.Machine &&\n        partData.Machine instanceof firebase.firestore.DocumentReference\n      ) {\n        console.log(partData.Machine);\n        const machineDoc = await partData.Machine.get();\n        partData.machineData = machineDoc.exists ? machineDoc.data() : {};\n        if (partData.machineData.client) {\n          const clientDoc = await partData.machineData.client.get();\n          partData.machineData.Client = clientDoc.exists\n            ? clientDoc.data().name\n            : \"\";\n        }\n      } else {\n        partData.machineData = {};\n      }\n      return partData;\n    })\n  );\n  return parts;\n}\n\nexport async function fetchClients(selectedOEM, selectedModality) {\n  const db = firebase.firestore();\n  const clientsSnapshot = await db.collection(\"Client\").get();\n  const clients = clientsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n\n  // Filter clients based on OEM and Modality if selected\n  if (selectedOEM || selectedModality) {\n    const filteredClients = [];\n    for (const client of clients) {\n      let match = true;\n      if (selectedOEM || selectedModality) {\n        for (const machineRef of client.machines) {\n          const machineDoc = await machineRef.get();\n          const machineData = machineDoc.data();\n          if (\n            (selectedOEM && machineData.OEM === selectedOEM) ||\n            (selectedModality && machineData.Modality === selectedModality)\n          ) {\n            match = true;\n            break;\n          } else {\n            match = false;\n          }\n        }\n      }\n      if (match) {\n        filteredClients.push(client);\n      }\n    }\n    return filteredClients;\n  }\n\n  return clients;\n}\n\nexport async function fetchModels(\n  selectedOEM,\n  selectedModality,\n  selectedClient\n) {\n  const db = firebase.firestore();\n  const machinesSnapshot = await db.collection(\"Machine\").get();\n  const models = new Set();\n\n  await Promise.all(\n    machinesSnapshot.docs.map(async (machineDoc) => {\n      const machineData = machineDoc.data();\n      let isValid = true;\n\n      if (selectedOEM && machineData.OEM !== selectedOEM) isValid = false;\n      if (selectedModality && machineData.Modality !== selectedModality)\n        isValid = false;\n      if (selectedClient && machineData.client) {\n        const clientDoc = await machineData.client.get();\n        if (!clientDoc.exists || clientDoc.data().name !== selectedClient)\n          isValid = false;\n      }\n\n      if (isValid) {\n        models.add(machineData.Model);\n      }\n    })\n  );\n\n  return Array.from(models);\n}\n\nexport function formatDate(timestamp) {\n  if (!timestamp) return \"\";\n  let date;\n  if (timestamp.toDate) {\n    date = timestamp.toDate();\n  } else if (typeof timestamp === \"string\" || typeof timestamp === \"number\") {\n    date = new Date(timestamp);\n  } else {\n    return \"\"; // handle unexpected formats\n  }\n  const day = String(date.getDate()).padStart(2, \"0\");\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n}\n"]},"metadata":{},"sourceType":"module"}