{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, Container, Alert } from \"react-bootstrap\";\nimport styles from \"../styles/Home.module.css\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { useRouter } from \"next/router\";\nimport firebase, { auth } from \"../context/Firebase\";\nexport default function Home() {\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\"); // Prevent our main-useEffect from hijacking the test-login flow:\n\n  const {\n    0: isTestLogin,\n    1: setIsTestLogin\n  } = useState(false);\n  const {\n    authUser,\n    loading,\n    signInWithGoogle\n  } = useAuth();\n  const router = useRouter();\n  const {\n    0: hasMounted,\n    1: setHasMounted\n  } = useState(false); // Ensure we are on the client side\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []); // Handle redirect result from Google Auth\n  // Handle redirect result from Google Auth (runs everywhere)\n\n  useEffect(() => {\n    if (hasMounted && !loading) {\n      auth.getRedirectResult().then(result => {\n        console.log(\"=== REDIRECT RESULT ===\");\n        console.log(\"Result:\", result);\n\n        if (result.credential) {\n          const destination = router.query.redirect || \"/NewSearch/mainSearch\";\n          console.log(\"User authenticated, redirecting to:\", destination);\n          router.replace(destination);\n        } else {\n          console.log(\"No credential found in redirect result\");\n        }\n      }).catch(error => {\n        console.error(\"Redirect result error:\", error);\n        setError(\"Authentication failed. Please try again.\");\n      });\n    }\n  }, [hasMounted, loading, router]); // If auth status is known and the user is already logged in, redirect them.\n\n  useEffect(() => {\n    if (isTestLogin) return; // ← skip for test login\n\n    if (hasMounted && !loading && authUser) {\n      const destination = router.query.redirect || \"/NewSearch/mainSearch\"; // use replace to avoid stacking multiple entries\n\n      router.replace(destination);\n    }\n  }, [isTestLogin, hasMounted, authUser, loading, router]);\n  if (!hasMounted) return null; // Prevent rendering until mounted\n  // Handle Google Sign-In\n\n  const handleGoogleSignIn = async () => {\n    setError(\"\");\n\n    try {\n      await signInWithGoogle(); // Note: With redirect, the user will be redirected to Google and then back to this page\n      // The redirect result will be handled in the useEffect above\n    } catch (err) {\n      setError(\"Failed to log in with Google\");\n    }\n  };\n\n  const handleTestLogin = async () => {\n    setError(\"\");\n    setIsTestLogin(true);\n    const password = prompt(\"Enter password:\");\n    if (!password) return;\n\n    try {\n      await firebase.auth().signInWithEmailAndPassword(\"test@test.com\", password); // now go to your custom test-search page:\n\n      router.replace(\"/NewSearch/searchTest\");\n    } catch (err) {\n      setError(\"Test login failed: \" + err.message);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"magmo\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"MAGMO\"), error && __jsx(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, error), __jsx(Button, {\n    variant: \"light\",\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    onClick: handleGoogleSignIn,\n    style: {\n      border: \"1px solid #dadce0\",\n      borderRadius: \"0.375rem\",\n      color: \"#757575\",\n      padding: \"0.5rem 1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: \"https://www.svgrepo.com/show/355037/google.svg\",\n    alt: \"Google logo\",\n    width: \"20\",\n    height: \"20\",\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), \"Sign in with Google\"), __jsx(Button, {\n    variant: \"secondary\",\n    className: \"w-100 mt-3\",\n    onClick: handleTestLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Test Login\"))))));\n}","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/index.js"],"names":["Head","React","useState","useEffect","Button","Card","Container","Alert","styles","useAuth","useRouter","firebase","auth","Home","error","setError","isTestLogin","setIsTestLogin","authUser","loading","signInWithGoogle","router","hasMounted","setHasMounted","getRedirectResult","then","result","console","log","credential","destination","query","redirect","replace","catch","handleGoogleSignIn","err","handleTestLogin","password","prompt","signInWithEmailAndPassword","message","container","minHeight","maxWidth","border","borderRadius","color","padding"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card, Container, Alert } from \"react-bootstrap\";\nimport styles from \"../styles/Home.module.css\";\n\nimport { useAuth } from \"../context/AuthUserContext\";\nimport { useRouter } from \"next/router\";\nimport firebase, { auth } from \"../context/Firebase\";\n\nexport default function Home() {\n  const [error, setError] = useState(\"\");\n  // Prevent our main-useEffect from hijacking the test-login flow:\n  const [isTestLogin, setIsTestLogin] = useState(false);\n\n  const { authUser, loading, signInWithGoogle } = useAuth();\n  const router = useRouter();\n  const [hasMounted, setHasMounted] = useState(false);\n\n  // Ensure we are on the client side\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  // Handle redirect result from Google Auth\n  // Handle redirect result from Google Auth (runs everywhere)\n  useEffect(() => {\n    if (hasMounted && !loading) {\n      auth\n        .getRedirectResult()\n        .then((result) => {\n          console.log(\"=== REDIRECT RESULT ===\");\n          console.log(\"Result:\", result);\n          if (result.credential) {\n            const destination = router.query.redirect || \"/NewSearch/mainSearch\";\n            console.log(\"User authenticated, redirecting to:\", destination);\n            router.replace(destination);\n          } else {\n            console.log(\"No credential found in redirect result\");\n          }\n        })\n        .catch((error) => {\n          console.error(\"Redirect result error:\", error);\n          setError(\"Authentication failed. Please try again.\");\n        });\n    }\n  }, [hasMounted, loading, router]);\n\n\n  // If auth status is known and the user is already logged in, redirect them.\n  useEffect(() => {\n    if (isTestLogin) return; // ← skip for test login\n    if (hasMounted && !loading && authUser) {\n      const destination = router.query.redirect || \"/NewSearch/mainSearch\";\n  // use replace to avoid stacking multiple entries\n      router.replace(destination);\n    }\n  }, [isTestLogin, hasMounted, authUser, loading, router]);\n\n  if (!hasMounted) return null; // Prevent rendering until mounted\n\n  // Handle Google Sign-In\n  const handleGoogleSignIn = async () => {\n    setError(\"\");\n    try {\n      await signInWithGoogle();\n      // Note: With redirect, the user will be redirected to Google and then back to this page\n      // The redirect result will be handled in the useEffect above\n    } catch (err) {\n      setError(\"Failed to log in with Google\");\n    }\n  };\n\n  const handleTestLogin = async () => {\n    setError(\"\");\n    setIsTestLogin(true);\n    const password = prompt(\"Enter password:\");\n    if (!password) return;\n\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(\"test@test.com\", password);\n      // now go to your custom test-search page:\n      router.replace(\"/NewSearch/searchTest\");\n    } catch (err) {\n      setError(\"Test login failed: \" + err.message);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>magmo</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Head>\n\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">MAGMO</h2>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Button\n                variant=\"light\"\n                className=\"w-100 d-flex align-items-center justify-content-center\"\n                onClick={handleGoogleSignIn}\n                style={{\n                  border: \"1px solid #dadce0\",\n                  borderRadius: \"0.375rem\",\n                  color: \"#757575\",\n                  padding: \"0.5rem 1rem\",\n                }}\n              >\n                <img\n                  src=\"https://www.svgrepo.com/show/355037/google.svg\"\n                  alt=\"Google logo\"\n                  width=\"20\"\n                  height=\"20\"\n                  className=\"me-2\"\n                />\n                Sign in with Google\n              </Button>\n\n              <Button\n                variant=\"secondary\"\n                className=\"w-100 mt-3\"\n                onClick={handleTestLogin}\n              >\n                Test Login\n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}