{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"../../styles/Home.module.css\";\nimport { Form, Button, Card, Container, FormControl, NavDropdown } from \"react-bootstrap\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport LoggedIn from \"../LoggedIn\";\nimport Link from \"next/link\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n}\n\nfunction LoadingButton(type, name, route) {\n  var _useState = useState({\n    name: false\n  }),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading.name) {\n      simulateNetworkRequest().then(function () {\n        setLoading({\n          name: false\n        });\n      });\n    }\n  }, [isLoading.name]);\n\n  var handleClick = function handleClick() {\n    return setLoading({\n      name: true\n    });\n  };\n\n  return __jsx(Link, {\n    href: \"/\".concat(route)\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading.name,\n    onClick: !isLoading.name ? handleClick : null\n  }, isLoading.name ? \"Loadingâ€¦\" : name));\n}\n\nexport default function WarehouseSelect() {\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useState2 = useState(false),\n      show = _useState2[0],\n      setShow = _useState2[1]; //passsing variables to warehouse list\n  // const [select, setSelect] = useState(\"Name\");\n\n\n  var _useState3 = useState(false),\n      showList = _useState3[0],\n      setShowList = _useState3[1];\n\n  var _useState4 = useState(\"text\"),\n      showListSearch = _useState4[0],\n      setShowListSearch = _useState4[1];\n\n  var _useState5 = useState(),\n      search = _useState5[0],\n      setSearch = _useState5[1];\n\n  var _useState6 = useState(\"Name\"),\n      select = _useState6[0],\n      setSelect = _useState6[1];\n\n  var showDropdown = function showDropdown(e) {\n    setShow(!show);\n  };\n\n  var hideDropdown = function hideDropdown(e) {\n    setShow(false);\n  };\n\n  var searchChangeHandler = function searchChangeHandler(event) {\n    setSearch(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    console.log(search, showListSearch);\n    router.push(\"../NewSearch/mainSearch\" + \"?inputText=\".concat(search, \"&selectedType=\").concat(select));\n  };\n\n  var router = useRouter();\n  return __jsx(LoggedIn, null, __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\"\n  }, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Warehouse DB\"), __jsx(\"div\", {\n    className: \"d-grid gap-3\"\n  }, LoadingButton(\"primary\", \"Scan\", \"Warehousedb/WarehouseScan\"), LoadingButton(\"secondary\", \"Main List\", \"../NewSearch/mainSearch\"), LoadingButton(\"primary\", \"Client List\", \"../NewSearch/clientSearch\"), LoadingButton(\"secondary\", \"Inventory manager\", \"../NewSearch/inventory/inventoryManage\"), LoadingButton(\"primary\", \"Add New Item\", \"../NewSearch/AddItem/NewItem\"), LoadingButton(\"secondary\", \"Test Print\", \"../NewSearch/TestPrint\"), __jsx(Form, {\n    className: \"d-flex\"\n  }, __jsx(FormControl, {\n    type: showListSearch // type=\"search\"\n    ,\n    placeholder: \"Search\",\n    className: \"me-2\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: show,\n    onMouseEnter: showDropdown,\n    onMouseLeave: hideDropdown\n  }, __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Name\") & setShowListSearch(\"text\");\n    }\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Date\") & setShowListSearch(\"date\");\n    }\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Work Order\") & setShowListSearch(\"number\");\n    }\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Product Number\") & setShowListSearch(\"number\");\n    }\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: function onClick() {\n      return setSelect(\"Description\") & setShowListSearch(\"text\");\n    }\n  }, \"Description\")), __jsx(Button, {\n    variant: \"info\",\n    onClick: handleSubmit\n  }, \"Search\")), LoadingButton(\"secondary\", \"Back <-\", \"dashboard\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}