{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\mainSearch.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Card, Row, Col, InputGroup, Dropdown, FormControl, Button, NavDropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { fetchPartsWithMachineData, fetchClients, fetchModels, formatDate } from \"../../utils/fetchAssociations\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport LoggedIn from \"../LoggedIn\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport ModelTable from \"../../utils/ModelTable\";\nimport PartTable from \"../../utils/PartTable\";\nimport styles from \"../../styles/MainSearch.module.css\";\nimport firebase from \"../../context/Firebase\"; // Predefined warehouse client IDs and display names\n\nvar SOCAL_CLIENT_ID = \"AIS17182\";\nvar NORCAL_CLIENT_ID = \"AIS25097\";\nvar UNASSIGNED_CLIENT_ID = \"AIS00404\"; // Simulates a network request delay\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n} // Custom LoadingButton component\n\n\nfunction LoadingButton(_ref) {\n  _s();\n\n  var type = _ref.type,\n      name = _ref.name,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading) {\n      simulateNetworkRequest().then(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isLoading]);\n  return __jsx(Link, {\n    href: \"/\".concat(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading,\n    onClick: function onClick() {\n      return !isLoading && setLoading(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loadingâ€¦\" : name));\n} // ---- DATE HELPERS (top-level scope) ----\n// Convert anything date-ish into a timestamp (ms since epoch).\n\n\n_s(LoadingButton, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c = LoadingButton;\n\nfunction toTime(value) {\n  if (!value) return null; // Firestore Timestamp { seconds, nanoseconds }\n\n  if (typeof value === \"object\" && value !== null && value.seconds != null) {\n    try {\n      return value.seconds * 1000;\n    } catch (_unused) {\n      /* ignore */\n    }\n  } // Native Date\n\n\n  if (value instanceof Date) {\n    var _t = value.getTime();\n\n    return isNaN(_t) ? null : _t;\n  } // Strings\n\n\n  if (typeof value === \"string\") {\n    // ISO / yyyy-mm-dd\n    var iso = Date.parse(value);\n    if (!isNaN(iso)) return iso; // mm/dd/yyyy\n\n    var parts = value.split(\"/\");\n\n    if (parts.length === 3) {\n      var _parts = _slicedToArray(parts, 3),\n          mm = _parts[0],\n          dd = _parts[1],\n          yyyy = _parts[2];\n\n      var alt = Date.parse(\"\".concat(yyyy, \"-\").concat(mm, \"-\").concat(dd));\n      if (!isNaN(alt)) return alt;\n    }\n  } // Last resort\n\n\n  var t = Date.parse(value);\n  return isNaN(t) ? null : t;\n} // Canonicalize to 'yyyy-mm-dd' (matches <input type=\"date\">)\n\n\nfunction toYMD(value) {\n  var t = toTime(value);\n  if (t == null) return null;\n  var d = new Date(t);\n  var yyyy = d.getFullYear();\n  var mm = String(d.getMonth() + 1).padStart(2, \"0\");\n  var dd = String(d.getDate()).padStart(2, \"0\");\n  return \"\".concat(yyyy, \"-\").concat(mm, \"-\").concat(dd);\n}\n\nexport default function MainSearch() {\n  _s2();\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useState2 = useState([]),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState([]),\n      backupInfo = _useState3[0],\n      setBackupInfo = _useState3[1];\n\n  var _useState4 = useState([]),\n      augmentedInfo = _useState4[0],\n      setAugmentedInfo = _useState4[1]; // items with clientFromId/currentId added\n\n\n  var _useState5 = useState(true),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var _useState6 = useState([]),\n      ids = _useState6[0],\n      setID = _useState6[1];\n\n  var _useState7 = useState(false),\n      show = _useState7[0],\n      setShow = _useState7[1];\n\n  var _useState8 = useState(),\n      dItem = _useState8[0],\n      setDItem = _useState8[1];\n\n  var _useState9 = useState(\"Name\"),\n      select = _useState9[0],\n      setSelect = _useState9[1];\n\n  var _useState10 = useState(false),\n      showList = _useState10[0],\n      setShowList = _useState10[1];\n\n  var _useState11 = useState(\"text\"),\n      showListSearch = _useState11[0],\n      setShowListSearch = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useState13 = useState(null),\n      selectedOEM = _useState13[0],\n      setSelectedOEM = _useState13[1];\n\n  var _useState14 = useState(null),\n      selectedModality = _useState14[0],\n      setSelectedModality = _useState14[1]; // Replace the old single client state with two sets:\n\n\n  var _useState15 = useState(null),\n      selectedClientFrom = _useState15[0],\n      setSelectedClientFrom = _useState15[1];\n\n  var _useState16 = useState(\"Select Option\"),\n      clientFromButtonText = _useState16[0],\n      setClientFromButtonText = _useState16[1];\n\n  var _useState17 = useState(null),\n      selectedClientCurrent = _useState17[0],\n      setSelectedClientCurrent = _useState17[1];\n\n  var _useState18 = useState(\"Select Option\"),\n      clientCurrentButtonText = _useState18[0],\n      setClientCurrentButtonText = _useState18[1];\n\n  var _useState19 = useState([]),\n      clients = _useState19[0],\n      setClients = _useState19[1];\n\n  var _useState20 = useState(false),\n      showClientModal = _useState20[0],\n      setShowClientModal = _useState20[1]; // This state tells the modal which client box is being updated: \"from\" or \"current\"\n\n\n  var _useState21 = useState(null),\n      clientSelectionType = _useState21[0],\n      setClientSelectionType = _useState21[1];\n\n  var router = useRouter();\n  var labelBase = [\"name\", \"date\", \"w/o\", \"p/n\", \"s/n\"];\n  var labelBaseNames = [\"name\", \"date\", \"wo\", \"pn\", \"sn\"];\n  var sortCheckBase = [false, false, false, false, false, false];\n\n  function withSortIcon(baseLabels, activeIndex, isDesc) {\n    return baseLabels.map(function (text, i) {\n      if (i !== activeIndex) return text; // untouched\n\n      var arrow = isDesc ? \" â–¼\" : \" â–²\";\n      return \"\".concat(text).concat(arrow);\n    });\n  }\n\n  var _useState22 = useState(labelBase),\n      labels = _useState22[0],\n      setLabels = _useState22[1];\n\n  var _useState23 = useState(sortCheckBase),\n      sortCheck = _useState23[0],\n      setSortCheck = _useState23[1];\n\n  var _useState24 = useState(null),\n      hoverIndex = _useState24[0],\n      setHoverIndex = _useState24[1];\n\n  var _useState25 = useState(null),\n      selectedModel = _useState25[0],\n      setSelectedModel = _useState25[1];\n\n  var _useState26 = useState(null),\n      gPos = _useState26[0],\n      setGPos = _useState26[1];\n\n  var _useState27 = useState(null),\n      gIde = _useState27[0],\n      setGIde = _useState27[1];\n\n  var _useState28 = useState(false),\n      isDeleting = _useState28[0],\n      setIsDeleting = _useState28[1]; // Fetch data on component mount and route change\n\n\n  useEffect(function () {\n    fetchData();\n  }, [router.route]);\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var load, data, db, machineIds, curMachineIds, _iterator2, _step2, _item$Machine2, _item$CurrentMachine2, item, uniq, mIds, cIds, fetchMachineClients, _yield$Promise$all, _yield$Promise$all2, fromMap, curMap, augmented;\n\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              setIsLoading(true);\n              _context9.prev = 1;\n\n              if (router.query.inputText && router.query.selectedType) {\n                setSelect(router.query.selectedType);\n                setSearch(router.query.inputText);\n              } // light retry for transient Firestore hiccups\n\n\n              load = /*#__PURE__*/function () {\n                var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  var attempt,\n                      _args7 = arguments;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          attempt = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : 1;\n                          _context7.prev = 1;\n                          _context7.next = 4;\n                          return fetchPartsWithMachineData();\n\n                        case 4:\n                          return _context7.abrupt(\"return\", _context7.sent);\n\n                        case 7:\n                          _context7.prev = 7;\n                          _context7.t0 = _context7[\"catch\"](1);\n\n                          if (!(attempt >= 3)) {\n                            _context7.next = 11;\n                            break;\n                          }\n\n                          throw _context7.t0;\n\n                        case 11:\n                          _context7.next = 13;\n                          return new Promise(function (r) {\n                            return setTimeout(r, 250 * Math.pow(2, attempt - 1));\n                          });\n\n                        case 13:\n                          return _context7.abrupt(\"return\", load(attempt + 1));\n\n                        case 14:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7, null, [[1, 7]]);\n                }));\n\n                return function load() {\n                  return _ref8.apply(this, arguments);\n                };\n              }();\n\n              _context9.next = 6;\n              return load();\n\n            case 6:\n              data = _context9.sent;\n              setBackupInfo(data);\n              setLabels(labelBase); // <-- add this line after setBackupInfo(data)\n\n              setID(data.map(function (item) {\n                return item.id;\n              })); // --- Pre-augment: resolve client ids of Machine / CurrentMachine once ---\n\n              db = firebase.firestore();\n              machineIds = [];\n              curMachineIds = [];\n              _iterator2 = _createForOfIteratorHelper(data);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  item = _step2.value;\n                  if (item !== null && item !== void 0 && (_item$Machine2 = item.Machine) !== null && _item$Machine2 !== void 0 && _item$Machine2.id) machineIds.push(item.Machine.id);\n                  if (item !== null && item !== void 0 && (_item$CurrentMachine2 = item.CurrentMachine) !== null && _item$CurrentMachine2 !== void 0 && _item$CurrentMachine2.id) curMachineIds.push(item.CurrentMachine.id);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              uniq = function uniq(arr) {\n                return _toConsumableArray(new Set(arr));\n              };\n\n              mIds = uniq(machineIds);\n              cIds = uniq(curMachineIds);\n\n              fetchMachineClients = /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(ids) {\n                  var out, chunks, i, _i, _chunks, chunk, snap;\n\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          if (ids.length) {\n                            _context8.next = 2;\n                            break;\n                          }\n\n                          return _context8.abrupt(\"return\", {});\n\n                        case 2:\n                          out = {}; // Firestore \"in\" supports up to 10 document IDs per query\n\n                          chunks = [];\n\n                          for (i = 0; i < ids.length; i += 10) {\n                            chunks.push(ids.slice(i, i + 10));\n                          }\n\n                          _i = 0, _chunks = chunks;\n\n                        case 6:\n                          if (!(_i < _chunks.length)) {\n                            _context8.next = 15;\n                            break;\n                          }\n\n                          chunk = _chunks[_i];\n                          _context8.next = 10;\n                          return db.collection(\"Machine\").where(firebase.firestore.FieldPath.documentId(), \"in\", chunk).get();\n\n                        case 10:\n                          snap = _context8.sent;\n                          snap.forEach(function (doc) {\n                            var _md$client;\n\n                            var md = doc.data() || {};\n                            out[doc.id] = ((_md$client = md.client) === null || _md$client === void 0 ? void 0 : _md$client.id) || null;\n                          });\n\n                        case 12:\n                          _i++;\n                          _context8.next = 6;\n                          break;\n\n                        case 15:\n                          return _context8.abrupt(\"return\", out);\n\n                        case 16:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function fetchMachineClients(_x4) {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              _context9.next = 21;\n              return Promise.all([fetchMachineClients(mIds), fetchMachineClients(cIds)]);\n\n            case 21:\n              _yield$Promise$all = _context9.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              fromMap = _yield$Promise$all2[0];\n              curMap = _yield$Promise$all2[1];\n              augmented = data.map(function (item) {\n                var _item$Machine, _fromMap$item$Machine, _item$CurrentMachine, _curMap$item$CurrentM;\n\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  // keep existing fields; add fast client id fields for sync filtering\n                  clientFromId: item !== null && item !== void 0 && (_item$Machine = item.Machine) !== null && _item$Machine !== void 0 && _item$Machine.id ? (_fromMap$item$Machine = fromMap[item.Machine.id]) !== null && _fromMap$item$Machine !== void 0 ? _fromMap$item$Machine : null : null,\n                  clientCurrentId: item !== null && item !== void 0 && (_item$CurrentMachine = item.CurrentMachine) !== null && _item$CurrentMachine !== void 0 && _item$CurrentMachine.id ? (_curMap$item$CurrentM = curMap[item.CurrentMachine.id]) !== null && _curMap$item$CurrentM !== void 0 ? _curMap$item$CurrentM : null : null\n                });\n              });\n              setAugmentedInfo(augmented); // default view = everything not explicitly hidden\n\n              setInfo(augmented.filter(function (it) {\n                return it.visible !== false;\n              }));\n              _context9.next = 35;\n              break;\n\n            case 30:\n              _context9.prev = 30;\n              _context9.t0 = _context9[\"catch\"](1);\n              console.error(\"Error fetching data:\", _context9.t0);\n              setInfo([]);\n              setAugmentedInfo([]);\n\n            case 35:\n              _context9.prev = 35;\n              setIsLoading(false);\n              return _context9.finish(35);\n\n            case 38:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 30, 35, 38]]);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  var searchChangeHandler = function searchChangeHandler(event) {\n    return setSearch(event.target.value);\n  }; // Asynchronous filter function that loops through backupInfo and,\n  // for each item, fetches its Machine and CurrentMachine documents,\n  // then compares the client id (from machineData.client.id) to the selected client.\n\n\n  useEffect(function () {\n    function filterParts() {\n      var base = augmentedInfo; // already has clientFromId/clientCurrentId\n\n      var noFilters = !selectedOEM && !selectedModality && !selectedModel && !selectedClientFrom && !selectedClientCurrent && !search;\n\n      if (noFilters) {\n        setInfo(base.filter(function (it) {\n          return it.visible !== false;\n        }));\n        return;\n      }\n\n      var filtered = base.filter(function (item) {\n        // only hide when explicitly false\n        if (item.visible === false) return false; // OEM/modality/model via machineData (you already put this in items)\n\n        if (item.machineData) {\n          if (selectedOEM && item.machineData.OEM !== selectedOEM) return false;\n          if (selectedModality && item.machineData.Modality !== selectedModality) return false;\n          if (selectedModel && item.machineData.Model !== selectedModel) return false;\n        } // Client filters (now instant)\n\n\n        if (selectedClientFrom && item.clientFromId !== selectedClientFrom) return false;\n        if (selectedClientCurrent && item.clientCurrentId !== selectedClientCurrent) return false; // Search\n\n        if (search) {\n          var s = String(search).toLowerCase();\n\n          if (select === \"Name\") {\n            return (item.name || \"\").toLowerCase().includes(s);\n          }\n\n          if (select === \"Date\") {\n            // If user hasn't picked a date yet, don't hide anything\n            if (!search) return true;\n            var wantedDay = search; // already 'yyyy-mm-dd' from <input type=\"date\">\n            // 1) Match item.date, regardless of its format or type\n\n            var itemYMD = toYMD(item.date);\n            if (itemYMD && itemYMD === wantedDay) return true; // 2) Also check any description dates (if you store dates there)\n\n            if (Array.isArray(item.descriptions)) {\n              var hitDesc = item.descriptions.some(function (d) {\n                return toYMD(d === null || d === void 0 ? void 0 : d.date) === wantedDay;\n              });\n              if (hitDesc) return true;\n            } // 3) And work order dates (if present)\n\n\n            if (Array.isArray(item.workOrders)) {\n              var hitWO = item.workOrders.some(function (w) {\n                return toYMD(w === null || w === void 0 ? void 0 : w.date) === wantedDay;\n              });\n              if (hitWO) return true;\n            }\n\n            return false;\n          }\n\n          if (select === \"Work Order\") {\n            return Array.isArray(item.workOrders) && item.workOrders.some(function (wo) {\n              return String(wo.workOrder || \"\").toLowerCase().includes(s);\n            });\n          }\n\n          if (select === \"Product Number\") {\n            return String(item.pn || \"\").toLowerCase().includes(s);\n          }\n\n          if (select === \"Description\") {\n            return String(item.desc || \"\").toLowerCase().includes(s);\n          }\n\n          if (select === \"SKU\") {\n            return String(item.id || \"\").toLowerCase().includes(s);\n          }\n        }\n\n        return true;\n      });\n      setInfo(filtered);\n    }\n\n    filterParts();\n  }, [selectedOEM, selectedModality, selectedClientFrom, selectedClientCurrent, selectedModel, search, select, augmentedInfo]);\n\n  function sortCheckAll(pos) {\n    // Determine next direction: toggle the clicked column only\n    var nextSortCheck = sortCheck.map(function (v, i) {\n      return i === pos ? !v : v;\n    });\n    var isDesc = nextSortCheck[pos]; // true means descending\n\n    var sortedInfo = _toConsumableArray(info).sort(function (a, b) {\n      var key = labelBaseNames[pos];\n\n      if (pos === 1) {\n        // DATE column\n        var ta = toTime(a[key]);\n        var tb = toTime(b[key]); // Put missing dates at the end for ascending, at the start for descending\n\n        if (ta === null && tb === null) return 0;\n        if (ta === null) return isDesc ? -1 : 1;\n        if (tb === null) return isDesc ? 1 : -1;\n        return isDesc ? tb - ta : ta - tb;\n      } // NAME or SKU (string-y columns): indexes 0 or 5 in your original logic\n\n\n      if (pos === 0 || pos === 5) {\n        var _a$key, _b$key;\n\n        var av = ((_a$key = a[key]) !== null && _a$key !== void 0 ? _a$key : \"\").toString();\n        var bv = ((_b$key = b[key]) !== null && _b$key !== void 0 ? _b$key : \"\").toString();\n        return isDesc ? bv.localeCompare(av) : av.localeCompare(bv);\n      } // Numeric-ish columns (wo, pn, sn) â€” fall back to string compare if NaN\n\n\n      var an = Number(a[key]);\n      var bn = Number(b[key]);\n\n      if (!isNaN(an) && !isNaN(bn)) {\n        return isDesc ? bn - an : an - bn;\n      } else {\n        var _a$key2, _b$key2;\n\n        var _av = ((_a$key2 = a[key]) !== null && _a$key2 !== void 0 ? _a$key2 : \"\").toString();\n\n        var _bv = ((_b$key2 = b[key]) !== null && _b$key2 !== void 0 ? _b$key2 : \"\").toString();\n\n        return isDesc ? _bv.localeCompare(_av) : _av.localeCompare(_bv);\n      }\n    });\n\n    setInfo(sortedInfo);\n    setSortCheck(nextSortCheck); // Update header labels to show the little arrow on the active column\n\n    setLabels(withSortIcon(labelBase, pos, isDesc));\n  }\n\n  var rowSelect = function rowSelect(item) {\n    if (item && item.id) {\n      console.log(\"Selected item:\", item);\n      router.push(\"./item/\" + item.id);\n    } else {\n      console.error(\"Unable to determine the selected itemâ€™s ID: \", item);\n    }\n  };\n\n  var _useState29 = useState([]),\n      selectedItems = _useState29[0],\n      setSelectedItems = _useState29[1];\n\n  var _useState30 = useState(false),\n      showDeleteModal = _useState30[0],\n      setShowDeleteModal = _useState30[1];\n\n  var handleSelectItem = function handleSelectItem(id) {\n    setSelectedItems(function (prev) {\n      return prev.includes(id) ? prev.filter(function (x) {\n        return x !== id;\n      }) : [].concat(_toConsumableArray(prev), [id]);\n    });\n  }; // setSelectedItems((prev) => {\n  //   const newSelection = prev.includes(id)\n  //     ? prev.filter((itemId) => itemId !== id)\n  //     : [...prev, id];\n  //   console.log(\"Selected items:\", newSelection);\n  //   return newSelection; // <- important\n  // });\n\n\n  var handleShowDeleteModal = function handleShowDeleteModal() {\n    return setShowDeleteModal(true);\n  };\n\n  var handleCloseDeleteModal = function handleCloseDeleteModal() {\n    return setShowDeleteModal(false);\n  };\n\n  var handleDeleteSelected = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, _iterator, _step, itemId;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsDeleting(true);\n              db = firebase.firestore();\n              _context.prev = 2;\n              // Loop over each selected item one at a time\n              _iterator = _createForOfIteratorHelper(selectedItems);\n              _context.prev = 4;\n\n              _iterator.s();\n\n            case 6:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 35;\n                break;\n              }\n\n              itemId = _step.value;\n              console.log(itemId);\n              _context.prev = 9;\n              _context.next = 12;\n              return db.collection(\"Test\").doc(itemId)[\"delete\"]();\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](9);\n              console.error(\"Error deleting document \".concat(itemId, \" from Test:\"), _context.t0);\n\n            case 17:\n              _context.prev = 17;\n              _context.next = 20;\n              return db.collection(\"Parts\").doc(itemId)[\"delete\"]();\n\n            case 20:\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](17);\n              console.error(\"Error deleting document \".concat(itemId, \" from Parts:\"), _context.t1);\n\n            case 25:\n              _context.prev = 25;\n              _context.next = 28;\n              return deleteFromStorage(itemId);\n\n            case 28:\n              _context.next = 33;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t2 = _context[\"catch\"](25);\n              console.error(\"Error deleting storage for \".concat(itemId, \":\"), _context.t2);\n\n            case 33:\n              _context.next = 6;\n              break;\n\n            case 35:\n              _context.next = 40;\n              break;\n\n            case 37:\n              _context.prev = 37;\n              _context.t3 = _context[\"catch\"](4);\n\n              _iterator.e(_context.t3);\n\n            case 40:\n              _context.prev = 40;\n\n              _iterator.f();\n\n              return _context.finish(40);\n\n            case 43:\n              // Update local state by filtering out the deleted items\n              setInfo(info.filter(function (item) {\n                return !selectedItems.includes(item.id);\n              }));\n              setSelectedItems([]);\n              _context.next = 50;\n              break;\n\n            case 47:\n              _context.prev = 47;\n              _context.t4 = _context[\"catch\"](2);\n              console.error(\"Error deleting items:\", _context.t4);\n\n            case 50:\n              _context.prev = 50;\n              setIsDeleting(false);\n              handleCloseDeleteModal(); // Optionally, reload the page\n              // router.reload();\n\n              return _context.finish(50);\n\n            case 54:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 47, 50, 54], [4, 37, 40, 43], [9, 14], [17, 22], [25, 30]]);\n    }));\n\n    return function handleDeleteSelected() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var checkDelete = function checkDelete(event, pos, idsToDelete, name) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    console.log(\"Selected IDs to delete:\", idsToDelete);\n    setSelectedItems(idsToDelete);\n    setDItem(name);\n    setShowDeleteModal(true);\n  }; // const handleDelete = async () => {\n  //   let itemId = gIde;\n  //   try {\n  //     setIsDeleting(true);\n  //     const db = firebase.firestore();\n  //     await db.collection(\"Test\").doc(itemId).delete();\n  //     await deleteFromPartsCollection(itemId);\n  //     await deleteFromStorage(itemId);\n  //     setInfo(info.filter((_, i) => gPos !== i));\n  //     console.log(`Deleted item: ${itemId}`);\n  //   } catch (error) {\n  //     console.error(\"Error deleting item:\", error);\n  //   } finally {\n  //     setIsDeleting(false);\n  //   }\n  //   handleClose();\n  // };\n\n\n  var hoverStyle = function hoverStyle(index) {\n    return {\n      backgroundColor: hoverIndex === index ? \"#ddd\" : \"transparent\",\n      textAlign: \"center\",\n      cursor: \"default\"\n    };\n  };\n\n  var _useState31 = useState(\"Select Option\"),\n      dropdown1Text = _useState31[0],\n      setDropdown1Text = _useState31[1];\n\n  var _useState32 = useState(\"Select Option\"),\n      dropdown2Text = _useState32[0],\n      setDropdown2Text = _useState32[1];\n\n  var handleSelect1 = function handleSelect1(eventKey, event) {\n    if (eventKey === \"unassigned\") {\n      setDropdown1Text(\"Select Option\");\n      setSelectedOEM(null);\n    } else {\n      setDropdown1Text(event.target.textContent);\n      setSelectedOEM(event.target.textContent);\n    }\n  };\n\n  var handleSelect2 = function handleSelect2(eventKey, event) {\n    if (eventKey === \"unassigned\") {\n      setDropdown2Text(\"Select Option\");\n      setSelectedModality(null);\n    } else {\n      setDropdown2Text(event.target.textContent);\n      setSelectedModality(event.target.textContent);\n    }\n  }; // --------------------\n  // CLIENT SELECTION HANDLING\n  // --------------------\n  // This function fetches clients and opens the client modal.\n\n\n  var handleClientClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var clientsData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetchClients(selectedOEM, selectedModality);\n\n            case 2:\n              clientsData = _context2.sent;\n              setClients(clientsData);\n              setClientSearchTerm(\"\");\n              setShowClientModal(true);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleClientClick() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // When a client is selected in the modal, we now assume the parameter is a client ID.\n  // If the passed value is null, we clear the selection.\n\n\n  var handleClientSelect = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(clientId) {\n      var clientSnap, clientData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(\"User selected client id:\", clientId);\n\n              if (clientId) {\n                _context3.next = 5;\n                break;\n              }\n\n              if (clientSelectionType === \"from\") {\n                setClientFromButtonText(\"Select Option\");\n                setSelectedClientFrom(null);\n              } else if (clientSelectionType === \"current\") {\n                setClientCurrentButtonText(\"Select Option\");\n                setSelectedClientCurrent(null);\n              }\n\n              setShowClientModal(false);\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              _context3.prev = 5;\n              _context3.next = 8;\n              return firebase.firestore().collection(\"Client\").doc(clientId).get();\n\n            case 8:\n              clientSnap = _context3.sent;\n\n              if (clientSnap.exists) {\n                clientData = clientSnap.data();\n\n                if (clientSelectionType === \"from\") {\n                  setClientFromButtonText(clientData.name);\n                  setSelectedClientFrom(clientId);\n                } else if (clientSelectionType === \"current\") {\n                  setClientCurrentButtonText(clientData.name);\n                  setSelectedClientCurrent(clientId);\n                }\n              } else {\n                console.error(\"No client document found for id:\", clientId);\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.error(\"Error fetching client data:\", _context3.t0);\n\n            case 15:\n              setShowClientModal(false);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 12]]);\n    }));\n\n    return function handleClientSelect(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleClientInfo = function handleClientInfo(clientId, clientName) {\n    console.log(\"Client ID: \".concat(clientId, \", Client Name: \").concat(clientName));\n    router.push(\"client/\" + clientId);\n  };\n\n  var handleClearClientSelection = function handleClearClientSelection() {\n    if (clientSelectionType === \"from\") {\n      setClientFromButtonText(\"Select Option\");\n      setSelectedClientFrom(null);\n    } else if (clientSelectionType === \"current\") {\n      setClientCurrentButtonText(\"Select Option\");\n      setSelectedClientCurrent(null);\n    }\n\n    setShowClientModal(false);\n  }; // --------------------\n  // MODEL SELECTION HANDLING\n  // --------------------\n\n\n  var _useState33 = useState([]),\n      models = _useState33[0],\n      setModels = _useState33[1];\n\n  var _useState34 = useState(false),\n      showModelModal = _useState34[0],\n      setShowModelModal = _useState34[1];\n\n  var _useState35 = useState(\"Select Option\"),\n      modelButtonText = _useState35[0],\n      setModelButtonText = _useState35[1];\n\n  var handleModelClick = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var modelsData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchModels(selectedOEM, selectedModality, selectedClientFrom);\n\n            case 2:\n              modelsData = _context4.sent;\n              setModels(modelsData);\n              setModelSearchTerm(\"\");\n              setShowModelModal(true);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleModelClick() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleModelSelect = function handleModelSelect(modelName) {\n    setModelButtonText(modelName || \"Select Option\");\n    setSelectedModel(modelName || null);\n    setShowModelModal(false);\n  };\n\n  var handleClearModelSelection = function handleClearModelSelection() {\n    setModelButtonText(\"Select Option\");\n    setSelectedModel(null);\n    setShowModelModal(false);\n  }; // --------------------\n  // WAREHOUSE BUTTONS (for Client Current)\n  // --------------------\n\n\n  var handleSoCalWarehouseClick = function handleSoCalWarehouseClick() {\n    setClientCurrentButtonText(\"SoCal Warehouse\");\n    setSelectedClientCurrent(SOCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", SOCAL_CLIENT_ID);\n  };\n\n  var handleNorCalWarehouseClick = function handleNorCalWarehouseClick() {\n    setClientCurrentButtonText(\"NorCal Warehouse\");\n    setSelectedClientCurrent(NORCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", NORCAL_CLIENT_ID);\n  };\n\n  var handleWarehouseUnassignedClick = function handleWarehouseUnassignedClick() {\n    setClientCurrentButtonText(\"Unassigned\");\n    setSelectedClientCurrent(UNASSIGNED_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", UNASSIGNED_CLIENT_ID);\n  };\n\n  var _useState36 = useState(\"\"),\n      clientSearchTerm = _useState36[0],\n      setClientSearchTerm = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      modelSearchTerm = _useState37[0],\n      setModelSearchTerm = _useState37[1];\n\n  var deleteFromStorage = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(itemId) {\n      var storageRef, folderRef, listResult, deletePromises;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              folderRef = storageRef.child(\"Parts/\".concat(itemId, \"/\"));\n              _context5.prev = 2;\n              _context5.next = 5;\n              return folderRef.listAll();\n\n            case 5:\n              listResult = _context5.sent;\n              deletePromises = listResult.items.map(function (item) {\n                return item[\"delete\"]();\n              });\n              _context5.next = 9;\n              return Promise.all(deletePromises);\n\n            case 9:\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error(\"Error deleting from storage:\", _context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 11]]);\n    }));\n\n    return function deleteFromStorage(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var deleteFromPartsCollection = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(itemId) {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              db = firebase.firestore();\n              _context6.prev = 1;\n              _context6.next = 4;\n              return db.collection(\"Parts\").doc(itemId)[\"delete\"]();\n\n            case 4:\n              console.log(\"Deleted item from Parts collection: \".concat(itemId));\n              _context6.next = 10;\n              break;\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](1);\n              console.error(\"Error deleting from Parts collection:\", _context6.t0);\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 7]]);\n    }));\n\n    return function deleteFromPartsCollection(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }(); //   // Safely convert any date-ish value into a comparable timestamp (ms since epoch).\n  // function toTime(value) {\n  //   if (!value) return null;\n  //   // Firestore Timestamp: { seconds, nanoseconds }\n  //   if (typeof value === \"object\" && value.seconds) {\n  //     try {\n  //       return value.seconds * 1000;\n  //     } catch { /* fallthrough */ }\n  //   }\n  //   // If already a Date\n  //   if (value instanceof Date) return isNaN(value.getTime()) ? null : value.getTime();\n  //   // If string: try ISO first\n  //   if (typeof value === \"string\") {\n  //     // yyyy-mm-dd (from your form inputs)\n  //     const iso = Date.parse(value);\n  //     if (!isNaN(iso)) return iso;\n  //     // mm/dd/yyyy fallback (older items)\n  //     const parts = value.split(\"/\");\n  //     if (parts.length === 3) {\n  //       const [mm, dd, yyyy] = parts;\n  //       const alt = Date.parse(`${yyyy}-${mm}-${dd}`);\n  //       if (!isNaN(alt)) return alt;\n  //     }\n  //   }\n  //   // Canonicalize any date-ish value to 'yyyy-mm-dd' so it matches <input type=\"date\"> values\n  //   function toYMD(value) {\n  //     const t = toTime(value);\n  //     if (t == null) return null;\n  //     const d = new Date(t);\n  //     const yyyy = d.getFullYear();\n  //     const mm = String(d.getMonth() + 1).padStart(2, \"0\");\n  //     const dd = String(d.getDate()).padStart(2, \"0\");\n  //     return `${yyyy}-${mm}-${dd}`;\n  //   }\n  //   // Last resort\n  //   const t = Date.parse(value);\n  //   return isNaN(t) ? null : t;\n  // }\n\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 5\n    }\n  }, isDeleting && __jsx(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    className: \"spinner-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), __jsx(Modal, {\n    show: showDeleteModal,\n    onHide: handleCloseDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 11\n    }\n  }, \"Confirm Deletion\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 9\n    }\n  }, \"Are you sure you want to delete \", selectedItems.length, \" item\", selectedItems.length > 1 ? \"s\" : \"\", \"?\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"danger\",\n    onClick: handleDeleteSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 11\n    }\n  }, \"Yes, delete\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), __jsx(Modal, {\n    show: showClientModal,\n    onHide: function onHide() {\n      return setShowClientModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 11\n    }\n  }, \"Select \", clientSelectionType === \"from\" ? \"Client From\" : \"Client Current\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: clientSearchTerm,\n    onChange: function onChange(e) {\n      return setClientSearchTerm(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 11\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return client.name.toLowerCase().includes(clientSearchTerm.toLowerCase());\n    }),\n    onSelectClient: handleClientSelect,\n    onInfoClick: handleClientInfo,\n    isClientSearch: false,\n    clearSelection: function clearSelection() {\n      return handleClientSelect(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 11\n    }\n  }))), __jsx(Modal, {\n    show: showModelModal,\n    onHide: function onHide() {\n      return setShowModelModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 11\n    }\n  }, \"Select Model\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: modelSearchTerm,\n    onChange: function onChange(e) {\n      return setModelSearchTerm(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 11\n    }\n  }), __jsx(ModelTable, {\n    models: models.filter(function (model) {\n      return typeof model === \"string\" ? model.toLowerCase().includes(modelSearchTerm.toLowerCase()) : false;\n    }),\n    onSelectModel: handleModelSelect,\n    clearSelection: function clearSelection() {\n      return handleModelSelect(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 11\n    }\n  }))), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 15\n    }\n  }, \"Magmo\"), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 19\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Dropdown, {\n    onSelect: handleSelect1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 23\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-1\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 25\n    }\n  }, dropdown1Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 27\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"GE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 27\n    }\n  }, \"GE\"), __jsx(Dropdown.Item, {\n    eventKey: \"Toshiba\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 27\n    }\n  }, \"Toshiba\"), __jsx(Dropdown.Item, {\n    eventKey: \"Siemens\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 27\n    }\n  }, \"Siemens\"), __jsx(Dropdown.Item, {\n    eventKey: \"Philips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 27\n    }\n  }, \"Philips\")))), __jsx(InputGroup, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Dropdown, {\n    onSelect: handleSelect2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 23\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-2\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 25\n    }\n  }, dropdown2Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 27\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"CT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 27\n    }\n  }, \"CT\"), __jsx(Dropdown.Item, {\n    eventKey: \"MRI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 27\n    }\n  }, \"MRI\"))))), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 19\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 23\n    }\n  }, \"Client From\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: function onClick() {\n      setClientSelectionType(\"from\");\n      handleClientClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 23\n    }\n  }, clientFromButtonText)), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 23\n    }\n  }, \"Client Current\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: function onClick() {\n      setClientSelectionType(\"current\");\n      handleClientClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 23\n    }\n  }, clientCurrentButtonText)), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: handleModelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 23\n    }\n  }, modelButtonText)), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 21\n    }\n  }), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 23\n    }\n  }, \"Warehouse\"), __jsx(\"div\", {\n    className: styles.buttonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleSoCalWarehouseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 25\n    }\n  }, \"SoCal Warehouse\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleNorCalWarehouseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 25\n    }\n  }, \"NorCal Warehouse\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleWarehouseUnassignedClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 25\n    }\n  }, \"Unassigned\"))))), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.tableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 19\n    }\n  }, isLoading ? __jsx(\"div\", {\n    className: \"d-flex justify-content-center align-items-center p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 23\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 27\n    }\n  }, \"M\"))) : __jsx(PartTable, {\n    info: info,\n    labels: labels,\n    ids: ids,\n    hoverStyle: hoverStyle,\n    sortCheckAll: sortCheckAll,\n    checkDelete: checkDelete,\n    isDeleting: isDeleting,\n    rowSelect: rowSelect,\n    setHoverIndex: setHoverIndex,\n    hoverIndex: hoverIndex,\n    selectedItems: selectedItems,\n    setSelectedItems: setSelectedItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 23\n    }\n  }), __jsx(\"div\", {\n    className: styles.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 21\n    }\n  }, __jsx(Form, {\n    className: \"d-flex pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 23\n    }\n  }, __jsx(FormControl, {\n    type: showListSearch,\n    placeholder: \"Search\",\n    className: \"me-2 flex-grow-1\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler,\n    style: {\n      flex: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 25\n    }\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: showList,\n    onMouseEnter: function onMouseEnter() {\n      return setShowList(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowList(false);\n    },\n    style: {\n      marginTop: \"-5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 25\n    }\n  }, __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Name\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Date\");\n      setShowListSearch(\"date\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 27\n    }\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Work Order\");\n      setShowListSearch(\"number\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 27\n    }\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Product Number\");\n      setShowListSearch(\"number\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 27\n    }\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Description\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"SKU\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 27\n    }\n  }, \"SKU\"))), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 23\n    }\n  }, __jsx(LoadingButton, {\n    type: \"secondary\",\n    name: \"Add New Item\",\n    route: \"NewSearch/AddItem/NewItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 25\n    }\n  }), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Back\",\n    route: \"Warehousedb/WarehouseSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 25\n    }\n  })))))))))));\n}\n\n_s2(MainSearch, \"iYVWSRaTNBKZ5HVQ2BBbjG3R/Ok=\", false, function () {\n  return [useAuth, useRouter];\n});\n\n_c2 = MainSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingButton\");\n$RefreshReg$(_c2, \"MainSearch\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/mainSearch.js"],"names":["React","useEffect","useState","Container","Card","Row","Col","InputGroup","Dropdown","FormControl","Button","NavDropdown","Form","Modal","Spinner","Link","useRouter","fetchPartsWithMachineData","fetchClients","fetchModels","formatDate","useAuth","LoggedIn","ClientTable","ModelTable","PartTable","styles","firebase","SOCAL_CLIENT_ID","NORCAL_CLIENT_ID","UNASSIGNED_CLIENT_ID","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","toTime","value","seconds","Date","t","getTime","isNaN","iso","parse","parts","split","length","mm","dd","yyyy","alt","toYMD","d","getFullYear","String","getMonth","padStart","getDate","MainSearch","signOut","info","setInfo","backupInfo","setBackupInfo","augmentedInfo","setAugmentedInfo","setIsLoading","ids","setID","show","setShow","dItem","setDItem","select","setSelect","showList","setShowList","showListSearch","setShowListSearch","search","setSearch","selectedOEM","setSelectedOEM","selectedModality","setSelectedModality","selectedClientFrom","setSelectedClientFrom","clientFromButtonText","setClientFromButtonText","selectedClientCurrent","setSelectedClientCurrent","clientCurrentButtonText","setClientCurrentButtonText","clients","setClients","showClientModal","setShowClientModal","clientSelectionType","setClientSelectionType","router","labelBase","labelBaseNames","sortCheckBase","withSortIcon","baseLabels","activeIndex","isDesc","map","text","i","arrow","labels","setLabels","sortCheck","setSortCheck","hoverIndex","setHoverIndex","selectedModel","setSelectedModel","gPos","setGPos","gIde","setGIde","isDeleting","setIsDeleting","fetchData","query","inputText","selectedType","load","attempt","r","Math","pow","data","item","id","db","firestore","machineIds","curMachineIds","Machine","push","CurrentMachine","uniq","arr","Set","mIds","cIds","fetchMachineClients","out","chunks","slice","chunk","collection","where","FieldPath","documentId","get","snap","forEach","doc","md","client","all","fromMap","curMap","augmented","clientFromId","clientCurrentId","filter","it","visible","console","error","searchChangeHandler","event","target","filterParts","base","noFilters","filtered","machineData","OEM","Modality","Model","s","toLowerCase","includes","wantedDay","itemYMD","date","Array","isArray","descriptions","hitDesc","some","workOrders","hitWO","w","wo","workOrder","pn","desc","sortCheckAll","pos","nextSortCheck","v","sortedInfo","sort","a","b","key","ta","tb","av","toString","bv","localeCompare","an","Number","bn","rowSelect","log","selectedItems","setSelectedItems","showDeleteModal","setShowDeleteModal","handleSelectItem","prev","x","handleShowDeleteModal","handleCloseDeleteModal","handleDeleteSelected","itemId","deleteFromStorage","handleClose","handleShow","checkDelete","idsToDelete","preventDefault","stopPropagation","hoverStyle","index","backgroundColor","textAlign","cursor","dropdown1Text","setDropdown1Text","dropdown2Text","setDropdown2Text","handleSelect1","eventKey","textContent","handleSelect2","handleClientClick","clientsData","setClientSearchTerm","handleClientSelect","clientId","clientSnap","exists","clientData","handleClientInfo","clientName","handleClearClientSelection","models","setModels","showModelModal","setShowModelModal","modelButtonText","setModelButtonText","handleModelClick","modelsData","setModelSearchTerm","handleModelSelect","modelName","handleClearModelSelection","handleSoCalWarehouseClick","handleNorCalWarehouseClick","handleWarehouseUnassignedClick","clientSearchTerm","modelSearchTerm","storageRef","storage","ref","folderRef","child","listAll","listResult","deletePromises","items","deleteFromPartsCollection","e","model","minHeight","maxWidth","divider","buttonGroup","flexButton","tableContainer","searchContainer","flex","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Dropdown,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n  Modal,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport {\r\n  fetchPartsWithMachineData,\r\n  fetchClients,\r\n  fetchModels,\r\n  formatDate,\r\n} from \"../../utils/fetchAssociations\";\r\nimport { useAuth } from \"../../context/AuthUserContext\";\r\nimport LoggedIn from \"../LoggedIn\";\r\nimport ClientTable from \"../../utils/ClientTable\";\r\nimport ModelTable from \"../../utils/ModelTable\";\r\nimport PartTable from \"../../utils/PartTable\";\r\nimport styles from \"../../styles/MainSearch.module.css\";\r\nimport firebase from \"../../context/Firebase\";\r\n\r\n// Predefined warehouse client IDs and display names\r\nconst SOCAL_CLIENT_ID = \"AIS17182\";\r\nconst NORCAL_CLIENT_ID = \"AIS25097\";\r\nconst UNASSIGNED_CLIENT_ID = \"AIS00404\";\r\n\r\n\r\n// Simulates a network request delay\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\n// Custom LoadingButton component\r\nfunction LoadingButton({ type, name, route }) {\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      simulateNetworkRequest().then(() => setLoading(false));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <Link href={`/${route}`}>\r\n      <a\r\n        className={`btn btn-${type}`}\r\n        disabled={isLoading}\r\n        onClick={() => !isLoading && setLoading(true)}\r\n      >\r\n        {isLoading ? \"Loadingâ€¦\" : name}\r\n      </a>\r\n    </Link>\r\n  );\r\n}\r\n\r\n// ---- DATE HELPERS (top-level scope) ----\r\n\r\n// Convert anything date-ish into a timestamp (ms since epoch).\r\nfunction toTime(value) {\r\n  if (!value) return null;\r\n\r\n  // Firestore Timestamp { seconds, nanoseconds }\r\n  if (typeof value === \"object\" && value !== null && value.seconds != null) {\r\n    try { return value.seconds * 1000; } catch { /* ignore */ }\r\n  }\r\n\r\n  // Native Date\r\n  if (value instanceof Date) {\r\n    const t = value.getTime();\r\n    return isNaN(t) ? null : t;\r\n  }\r\n\r\n  // Strings\r\n  if (typeof value === \"string\") {\r\n    // ISO / yyyy-mm-dd\r\n    const iso = Date.parse(value);\r\n    if (!isNaN(iso)) return iso;\r\n\r\n    // mm/dd/yyyy\r\n    const parts = value.split(\"/\");\r\n    if (parts.length === 3) {\r\n      const [mm, dd, yyyy] = parts;\r\n      const alt = Date.parse(`${yyyy}-${mm}-${dd}`);\r\n      if (!isNaN(alt)) return alt;\r\n    }\r\n  }\r\n\r\n  // Last resort\r\n  const t = Date.parse(value);\r\n  return isNaN(t) ? null : t;\r\n}\r\n\r\n// Canonicalize to 'yyyy-mm-dd' (matches <input type=\"date\">)\r\nfunction toYMD(value) {\r\n  const t = toTime(value);\r\n  if (t == null) return null;\r\n  const d = new Date(t);\r\n  const yyyy = d.getFullYear();\r\n  const mm = String(d.getMonth() + 1).padStart(2, \"0\");\r\n  const dd = String(d.getDate()).padStart(2, \"0\");\r\n  return `${yyyy}-${mm}-${dd}`;\r\n}\r\n\r\n\r\nexport default function MainSearch() {\r\n  const { signOut } = useAuth();\r\n  const [info, setInfo] = useState([]);\r\n  const [backupInfo, setBackupInfo] = useState([]);\r\n  const [augmentedInfo, setAugmentedInfo] = useState([]); // items with clientFromId/currentId added\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [ids, setID] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [dItem, setDItem] = useState();\r\n  const [select, setSelect] = useState(\"Name\");\r\n  const [showList, setShowList] = useState(false);\r\n  const [showListSearch, setShowListSearch] = useState(\"text\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedOEM, setSelectedOEM] = useState(null);\r\n  const [selectedModality, setSelectedModality] = useState(null);\r\n  // Replace the old single client state with two sets:\r\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\r\n  const [clientFromButtonText, setClientFromButtonText] = useState(\"Select Option\");\r\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\r\n  const [clientCurrentButtonText, setClientCurrentButtonText] = useState(\"Select Option\");\r\n\r\n  const [clients, setClients] = useState([]);\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  // This state tells the modal which client box is being updated: \"from\" or \"current\"\r\n  const [clientSelectionType, setClientSelectionType] = useState(null);\r\n\r\n  const router = useRouter();\r\n  const labelBase = [\"name\", \"date\", \"w/o\", \"p/n\", \"s/n\"];\r\n  const labelBaseNames = [\"name\", \"date\", \"wo\", \"pn\", \"sn\"];\r\n  const sortCheckBase = [false, false, false, false, false, false];\r\n\r\n  function withSortIcon(baseLabels, activeIndex, isDesc) {\r\n    return baseLabels.map((text, i) => {\r\n      if (i !== activeIndex) return text; // untouched\r\n      const arrow = isDesc ? \" â–¼\" : \" â–²\";\r\n      return `${text}${arrow}`;\r\n    });\r\n  }\r\n\r\n\r\n  const [labels, setLabels] = useState(labelBase);\r\n  const [sortCheck, setSortCheck] = useState(sortCheckBase);\r\n  const [hoverIndex, setHoverIndex] = useState(null);\r\n  const [selectedModel, setSelectedModel] = useState(null);\r\n  const [gPos, setGPos] = useState(null);\r\n  const [gIde, setGIde] = useState(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n\r\n  // Fetch data on component mount and route change\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [router.route]);\r\n\r\n  async function fetchData() {\r\n    setIsLoading(true);\r\n    try {\r\n      if (router.query.inputText && router.query.selectedType) {\r\n        setSelect(router.query.selectedType);\r\n        setSearch(router.query.inputText);\r\n      }\r\n      // light retry for transient Firestore hiccups\r\n      const load = async (attempt = 1) => {\r\n        try {\r\n          return await fetchPartsWithMachineData();\r\n        } catch (e) {\r\n          if (attempt >= 3) throw e;\r\n          await new Promise(r => setTimeout(r, 250 * Math.pow(2, attempt - 1)));\r\n          return load(attempt + 1);\r\n        }\r\n      };\r\n      const data = await load();\r\n      setBackupInfo(data);\r\n      setLabels(labelBase); // <-- add this line after setBackupInfo(data)\r\n      setID(data.map((item) => item.id));\r\n\r\n      // --- Pre-augment: resolve client ids of Machine / CurrentMachine once ---\r\n      const db = firebase.firestore();\r\n      const machineIds = [];\r\n      const curMachineIds = [];\r\n      for (const item of data) {\r\n        if (item?.Machine?.id) machineIds.push(item.Machine.id);\r\n        if (item?.CurrentMachine?.id) curMachineIds.push(item.CurrentMachine.id);\r\n      }\r\n      const uniq = (arr) => [...new Set(arr)];\r\n      const mIds = uniq(machineIds);\r\n      const cIds = uniq(curMachineIds);\r\n\r\n      const fetchMachineClients = async (ids) => {\r\n        if (!ids.length) return {};\r\n        const out = {};\r\n        // Firestore \"in\" supports up to 10 document IDs per query\r\n        const chunks = [];\r\n        for (let i = 0; i < ids.length; i += 10) chunks.push(ids.slice(i, i + 10));\r\n        for (const chunk of chunks) {\r\n          const snap = await db\r\n            .collection(\"Machine\")\r\n            .where(firebase.firestore.FieldPath.documentId(), \"in\", chunk)\r\n            .get();\r\n          snap.forEach((doc) => {\r\n            const md = doc.data() || {};\r\n            out[doc.id] = md.client?.id || null;\r\n          });\r\n        }\r\n        return out;\r\n      };\r\n\r\n      const [fromMap, curMap] = await Promise.all([\r\n        fetchMachineClients(mIds),\r\n        fetchMachineClients(cIds),\r\n      ]);\r\n\r\n      const augmented = data.map((item) => ({\r\n        ...item,\r\n        // keep existing fields; add fast client id fields for sync filtering\r\n        clientFromId: item?.Machine?.id ? fromMap[item.Machine.id] ?? null : null,\r\n        clientCurrentId: item?.CurrentMachine?.id ? curMap[item.CurrentMachine.id] ?? null : null,\r\n      }));\r\n\r\n      setAugmentedInfo(augmented);\r\n      // default view = everything not explicitly hidden\r\n      setInfo(augmented.filter((it) => it.visible !== false));\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n      setInfo([]);\r\n      setAugmentedInfo([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const searchChangeHandler = (event) => setSearch(event.target.value);\r\n\r\n  // Asynchronous filter function that loops through backupInfo and,\r\n  // for each item, fetches its Machine and CurrentMachine documents,\r\n  // then compares the client id (from machineData.client.id) to the selected client.\r\n  useEffect(() => {\r\n    function filterParts() {\r\n      const base = augmentedInfo; // already has clientFromId/clientCurrentId\r\n      const noFilters =\r\n        !selectedOEM &&\r\n        !selectedModality &&\r\n        !selectedModel &&\r\n        !selectedClientFrom &&\r\n        !selectedClientCurrent &&\r\n        !search;\r\n      if (noFilters) {\r\n        setInfo(base.filter((it) => it.visible !== false));\r\n        return;\r\n      }\r\n\r\n      const filtered = base.filter((item) => {\r\n        // only hide when explicitly false\r\n        if (item.visible === false) return false;\r\n\r\n        // OEM/modality/model via machineData (you already put this in items)\r\n        if (item.machineData) {\r\n          if (selectedOEM && item.machineData.OEM !== selectedOEM) return false;\r\n          if (selectedModality && item.machineData.Modality !== selectedModality) return false;\r\n          if (selectedModel && item.machineData.Model !== selectedModel) return false;\r\n        }\r\n\r\n        // Client filters (now instant)\r\n        if (selectedClientFrom && item.clientFromId !== selectedClientFrom) return false;\r\n        if (selectedClientCurrent && item.clientCurrentId !== selectedClientCurrent) return false;\r\n\r\n        // Search\r\n        if (search) {\r\n          const s = String(search).toLowerCase();\r\n          if (select === \"Name\") {\r\n            return (item.name || \"\").toLowerCase().includes(s);\r\n          }\r\n          if (select === \"Date\") {\r\n            // If user hasn't picked a date yet, don't hide anything\r\n            if (!search) return true;\r\n\r\n            const wantedDay = search; // already 'yyyy-mm-dd' from <input type=\"date\">\r\n\r\n            // 1) Match item.date, regardless of its format or type\r\n            const itemYMD = toYMD(item.date);\r\n            if (itemYMD && itemYMD === wantedDay) return true;\r\n\r\n            // 2) Also check any description dates (if you store dates there)\r\n            if (Array.isArray(item.descriptions)) {\r\n              const hitDesc = item.descriptions.some((d) => toYMD(d?.date) === wantedDay);\r\n              if (hitDesc) return true;\r\n            }\r\n\r\n            // 3) And work order dates (if present)\r\n            if (Array.isArray(item.workOrders)) {\r\n              const hitWO = item.workOrders.some((w) => toYMD(w?.date) === wantedDay);\r\n              if (hitWO) return true;\r\n            }\r\n\r\n            return false;\r\n          }\r\n\r\n          if (select === \"Work Order\") {\r\n            return Array.isArray(item.workOrders) &&\r\n              item.workOrders.some((wo) => String(wo.workOrder || \"\").toLowerCase().includes(s));\r\n          }\r\n          if (select === \"Product Number\") {\r\n            return String(item.pn || \"\").toLowerCase().includes(s);\r\n          }\r\n          if (select === \"Description\") {\r\n            return String(item.desc || \"\").toLowerCase().includes(s);\r\n          }\r\n          if (select === \"SKU\") {\r\n            return String(item.id || \"\").toLowerCase().includes(s);\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n      setInfo(filtered);\r\n    }\r\n    filterParts();\r\n  }, [selectedOEM, selectedModality, selectedClientFrom, selectedClientCurrent, selectedModel, search, select, augmentedInfo]);\r\n\r\n  function sortCheckAll(pos) {\r\n    // Determine next direction: toggle the clicked column only\r\n    const nextSortCheck = sortCheck.map((v, i) => (i === pos ? !v : v));\r\n    const isDesc = nextSortCheck[pos]; // true means descending\r\n\r\n    const sortedInfo = [...info].sort((a, b) => {\r\n      const key = labelBaseNames[pos];\r\n\r\n      if (pos === 1) {\r\n        // DATE column\r\n        const ta = toTime(a[key]);\r\n        const tb = toTime(b[key]);\r\n\r\n        // Put missing dates at the end for ascending, at the start for descending\r\n        if (ta === null && tb === null) return 0;\r\n        if (ta === null) return isDesc ? -1 : 1;\r\n        if (tb === null) return isDesc ? 1 : -1;\r\n\r\n        return isDesc ? (tb - ta) : (ta - tb);\r\n      }\r\n\r\n      // NAME or SKU (string-y columns): indexes 0 or 5 in your original logic\r\n      if (pos === 0 || pos === 5) {\r\n        const av = (a[key] ?? \"\").toString();\r\n        const bv = (b[key] ?? \"\").toString();\r\n        return isDesc ? bv.localeCompare(av) : av.localeCompare(bv);\r\n      }\r\n\r\n      // Numeric-ish columns (wo, pn, sn) â€” fall back to string compare if NaN\r\n      const an = Number(a[key]);\r\n      const bn = Number(b[key]);\r\n\r\n      if (!isNaN(an) && !isNaN(bn)) {\r\n        return isDesc ? (bn - an) : (an - bn);\r\n      } else {\r\n        const av = (a[key] ?? \"\").toString();\r\n        const bv = (b[key] ?? \"\").toString();\r\n        return isDesc ? bv.localeCompare(av) : av.localeCompare(bv);\r\n      }\r\n    });\r\n\r\n    setInfo(sortedInfo);\r\n    setSortCheck(nextSortCheck);\r\n\r\n    // Update header labels to show the little arrow on the active column\r\n    setLabels(withSortIcon(labelBase, pos, isDesc));\r\n  }\r\n\r\n\r\n  const rowSelect = (item) => {\r\n    if (item && item.id) {\r\n      console.log(\"Selected item:\", item);\r\n      router.push(\"./item/\" + item.id);\r\n    } else {\r\n      console.error(\"Unable to determine the selected itemâ€™s ID: \", item);\r\n    }\r\n  };\r\n\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const handleSelectItem = (id) => {\r\n    setSelectedItems(prev =>\r\n      prev.includes(id) ? prev.filter(x => x !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n\r\n  // setSelectedItems((prev) => {\r\n  //   const newSelection = prev.includes(id)\r\n  //     ? prev.filter((itemId) => itemId !== id)\r\n  //     : [...prev, id];\r\n  //   console.log(\"Selected items:\", newSelection);\r\n  //   return newSelection; // <- important\r\n  // });\r\n\r\n  const handleShowDeleteModal = () => setShowDeleteModal(true);\r\n  const handleCloseDeleteModal = () => setShowDeleteModal(false);\r\n\r\n  const handleDeleteSelected = async () => {\r\n    setIsDeleting(true);\r\n    const db = firebase.firestore();\r\n    try {\r\n      // Loop over each selected item one at a time\r\n      for (const itemId of selectedItems) {\r\n        console.log(itemId)\r\n        try {\r\n          // Delete from \"Test\" collection\r\n          await db.collection(\"Test\").doc(itemId).delete();\r\n        } catch (err) {\r\n          console.error(`Error deleting document ${itemId} from Test:`, err);\r\n        }\r\n        try {\r\n          // Delete from \"Parts\" collection\r\n          await db.collection(\"Parts\").doc(itemId).delete();\r\n        } catch (err) {\r\n          console.error(`Error deleting document ${itemId} from Parts:`, err);\r\n        }\r\n        try {\r\n          // Delete associated photos from storage\r\n          await deleteFromStorage(itemId);\r\n        } catch (err) {\r\n          console.error(`Error deleting storage for ${itemId}:`, err);\r\n        }\r\n      }\r\n      // Update local state by filtering out the deleted items\r\n      setInfo(info.filter((item) => !selectedItems.includes(item.id)));\r\n      setSelectedItems([]);\r\n    } catch (error) {\r\n      console.error(\"Error deleting items:\", error);\r\n    } finally {\r\n      setIsDeleting(false);\r\n      handleCloseDeleteModal();\r\n      // Optionally, reload the page\r\n      // router.reload();\r\n    }\r\n  };\r\n\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const checkDelete = (event, pos, idsToDelete, name) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    console.log(\"Selected IDs to delete:\", idsToDelete);\r\n    setSelectedItems(idsToDelete);\r\n    setDItem(name);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  // const handleDelete = async () => {\r\n  //   let itemId = gIde;\r\n  //   try {\r\n  //     setIsDeleting(true);\r\n  //     const db = firebase.firestore();\r\n  //     await db.collection(\"Test\").doc(itemId).delete();\r\n  //     await deleteFromPartsCollection(itemId);\r\n  //     await deleteFromStorage(itemId);\r\n  //     setInfo(info.filter((_, i) => gPos !== i));\r\n  //     console.log(`Deleted item: ${itemId}`);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error deleting item:\", error);\r\n  //   } finally {\r\n  //     setIsDeleting(false);\r\n  //   }\r\n  //   handleClose();\r\n  // };\r\n\r\n  const hoverStyle = (index) => ({\r\n    backgroundColor: hoverIndex === index ? \"#ddd\" : \"transparent\",\r\n    textAlign: \"center\",\r\n    cursor: \"default\",\r\n  });\r\n\r\n  const [dropdown1Text, setDropdown1Text] = useState(\"Select Option\");\r\n  const [dropdown2Text, setDropdown2Text] = useState(\"Select Option\");\r\n\r\n  const handleSelect1 = (eventKey, event) => {\r\n    if (eventKey === \"unassigned\") {\r\n      setDropdown1Text(\"Select Option\");\r\n      setSelectedOEM(null);\r\n    } else {\r\n      setDropdown1Text(event.target.textContent);\r\n      setSelectedOEM(event.target.textContent);\r\n    }\r\n  };\r\n\r\n  const handleSelect2 = (eventKey, event) => {\r\n    if (eventKey === \"unassigned\") {\r\n      setDropdown2Text(\"Select Option\");\r\n      setSelectedModality(null);\r\n    } else {\r\n      setDropdown2Text(event.target.textContent);\r\n      setSelectedModality(event.target.textContent);\r\n    }\r\n  };\r\n\r\n  // --------------------\r\n  // CLIENT SELECTION HANDLING\r\n  // --------------------\r\n  // This function fetches clients and opens the client modal.\r\n  const handleClientClick = async () => {\r\n    const clientsData = await fetchClients(selectedOEM, selectedModality);\r\n    setClients(clientsData);\r\n    setClientSearchTerm(\"\");\r\n    setShowClientModal(true);\r\n  };\r\n\r\n  // When a client is selected in the modal, we now assume the parameter is a client ID.\r\n  // If the passed value is null, we clear the selection.\r\n  const handleClientSelect = async (clientId) => {\r\n    console.log(\"User selected client id:\", clientId);\r\n    if (!clientId) {\r\n      if (clientSelectionType === \"from\") {\r\n        setClientFromButtonText(\"Select Option\");\r\n        setSelectedClientFrom(null);\r\n      } else if (clientSelectionType === \"current\") {\r\n        setClientCurrentButtonText(\"Select Option\");\r\n        setSelectedClientCurrent(null);\r\n      }\r\n      setShowClientModal(false);\r\n      return;\r\n    }\r\n    try {\r\n      const clientSnap = await firebase.firestore().collection(\"Client\").doc(clientId).get();\r\n      if (clientSnap.exists) {\r\n        const clientData = clientSnap.data();\r\n        if (clientSelectionType === \"from\") {\r\n          setClientFromButtonText(clientData.name);\r\n          setSelectedClientFrom(clientId);\r\n        } else if (clientSelectionType === \"current\") {\r\n          setClientCurrentButtonText(clientData.name);\r\n          setSelectedClientCurrent(clientId);\r\n        }\r\n      } else {\r\n        console.error(\"No client document found for id:\", clientId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching client data:\", error);\r\n    }\r\n    setShowClientModal(false);\r\n  };\r\n\r\n  const handleClientInfo = (clientId, clientName) => {\r\n    console.log(`Client ID: ${clientId}, Client Name: ${clientName}`);\r\n    router.push(\"client/\" + clientId);\r\n  };\r\n\r\n  const handleClearClientSelection = () => {\r\n    if (clientSelectionType === \"from\") {\r\n      setClientFromButtonText(\"Select Option\");\r\n      setSelectedClientFrom(null);\r\n    } else if (clientSelectionType === \"current\") {\r\n      setClientCurrentButtonText(\"Select Option\");\r\n      setSelectedClientCurrent(null);\r\n    }\r\n    setShowClientModal(false);\r\n  };\r\n\r\n  // --------------------\r\n  // MODEL SELECTION HANDLING\r\n  // --------------------\r\n  const [models, setModels] = useState([]);\r\n  const [showModelModal, setShowModelModal] = useState(false);\r\n  const [modelButtonText, setModelButtonText] = useState(\"Select Option\");\r\n\r\n  const handleModelClick = async () => {\r\n    const modelsData = await fetchModels(\r\n      selectedOEM,\r\n      selectedModality,\r\n      selectedClientFrom\r\n    );\r\n    setModels(modelsData);\r\n    setModelSearchTerm(\"\");\r\n    setShowModelModal(true);\r\n  };\r\n\r\n  const handleModelSelect = (modelName) => {\r\n    setModelButtonText(modelName || \"Select Option\");\r\n    setSelectedModel(modelName || null);\r\n    setShowModelModal(false);\r\n  };\r\n\r\n  const handleClearModelSelection = () => {\r\n    setModelButtonText(\"Select Option\");\r\n    setSelectedModel(null);\r\n    setShowModelModal(false);\r\n  };\r\n\r\n  // --------------------\r\n  // WAREHOUSE BUTTONS (for Client Current)\r\n  // --------------------\r\n  const handleSoCalWarehouseClick = () => {\r\n    setClientCurrentButtonText(\"SoCal Warehouse\");\r\n    setSelectedClientCurrent(SOCAL_CLIENT_ID);\r\n    console.log(\"Warehouse button clicked: setting Client Current to\", SOCAL_CLIENT_ID);\r\n  };\r\n\r\n  const handleNorCalWarehouseClick = () => {\r\n    setClientCurrentButtonText(\"NorCal Warehouse\");\r\n    setSelectedClientCurrent(NORCAL_CLIENT_ID);\r\n    console.log(\"Warehouse button clicked: setting Client Current to\", NORCAL_CLIENT_ID);\r\n  };\r\n\r\n  const handleWarehouseUnassignedClick = () => {\r\n    setClientCurrentButtonText(\"Unassigned\");\r\n    setSelectedClientCurrent(UNASSIGNED_CLIENT_ID);\r\n    console.log(\"Warehouse button clicked: setting Client Current to\", UNASSIGNED_CLIENT_ID);\r\n  };\r\n\r\n  const [clientSearchTerm, setClientSearchTerm] = useState(\"\");\r\n  const [modelSearchTerm, setModelSearchTerm] = useState(\"\");\r\n\r\n  const deleteFromStorage = async (itemId) => {\r\n    const storageRef = firebase.storage().ref();\r\n    const folderRef = storageRef.child(`Parts/${itemId}/`);\r\n    try {\r\n      const listResult = await folderRef.listAll();\r\n      const deletePromises = listResult.items.map((item) => item.delete());\r\n      await Promise.all(deletePromises);\r\n    } catch (error) {\r\n      console.error(\"Error deleting from storage:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteFromPartsCollection = async (itemId) => {\r\n    const db = firebase.firestore();\r\n    try {\r\n      await db.collection(\"Parts\").doc(itemId).delete();\r\n      console.log(`Deleted item from Parts collection: ${itemId}`);\r\n    } catch (error) {\r\n      console.error(\"Error deleting from Parts collection:\", error);\r\n    }\r\n  };\r\n\r\n  //   // Safely convert any date-ish value into a comparable timestamp (ms since epoch).\r\n  // function toTime(value) {\r\n  //   if (!value) return null;\r\n\r\n  //   // Firestore Timestamp: { seconds, nanoseconds }\r\n  //   if (typeof value === \"object\" && value.seconds) {\r\n  //     try {\r\n  //       return value.seconds * 1000;\r\n  //     } catch { /* fallthrough */ }\r\n  //   }\r\n\r\n  //   // If already a Date\r\n  //   if (value instanceof Date) return isNaN(value.getTime()) ? null : value.getTime();\r\n\r\n  //   // If string: try ISO first\r\n  //   if (typeof value === \"string\") {\r\n  //     // yyyy-mm-dd (from your form inputs)\r\n  //     const iso = Date.parse(value);\r\n  //     if (!isNaN(iso)) return iso;\r\n\r\n  //     // mm/dd/yyyy fallback (older items)\r\n  //     const parts = value.split(\"/\");\r\n  //     if (parts.length === 3) {\r\n  //       const [mm, dd, yyyy] = parts;\r\n  //       const alt = Date.parse(`${yyyy}-${mm}-${dd}`);\r\n  //       if (!isNaN(alt)) return alt;\r\n  //     }\r\n  //   }\r\n\r\n  //   // Canonicalize any date-ish value to 'yyyy-mm-dd' so it matches <input type=\"date\"> values\r\n  //   function toYMD(value) {\r\n  //     const t = toTime(value);\r\n  //     if (t == null) return null;\r\n  //     const d = new Date(t);\r\n  //     const yyyy = d.getFullYear();\r\n  //     const mm = String(d.getMonth() + 1).padStart(2, \"0\");\r\n  //     const dd = String(d.getDate()).padStart(2, \"0\");\r\n  //     return `${yyyy}-${mm}-${dd}`;\r\n  //   }\r\n\r\n\r\n  //   // Last resort\r\n  //   const t = Date.parse(value);\r\n  //   return isNaN(t) ? null : t;\r\n  // }\r\n\r\n\r\n  return (\r\n    <LoggedIn>\r\n      {isDeleting && (\r\n        <div className=\"loading-overlay\">\r\n          <Spinner animation=\"border\" role=\"status\" className=\"spinner-center\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      )}\r\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete {selectedItems.length} item\r\n          {selectedItems.length > 1 ? \"s\" : \"\"}?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleDeleteSelected}>\r\n            Yes, delete\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showClientModal} onHide={() => setShowClientModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Select {clientSelectionType === \"from\" ? \"Client From\" : \"Client Current\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Search by name\"\r\n            className=\"mb-3\"\r\n            value={clientSearchTerm}\r\n            onChange={(e) => setClientSearchTerm(e.target.value)}\r\n          />\r\n          <ClientTable\r\n            clients={clients.filter((client) =>\r\n              client.name.toLowerCase().includes(clientSearchTerm.toLowerCase())\r\n            )}\r\n            onSelectClient={handleClientSelect}\r\n            onInfoClick={handleClientInfo}\r\n            isClientSearch={false}\r\n            clearSelection={() => handleClientSelect(null)}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal show={showModelModal} onHide={() => setShowModelModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Select Model</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Search by name\"\r\n            className=\"mb-3\"\r\n            value={modelSearchTerm}\r\n            onChange={(e) => setModelSearchTerm(e.target.value)}\r\n          />\r\n          <ModelTable\r\n            models={models.filter((model) =>\r\n              typeof model === \"string\"\r\n                ? model.toLowerCase().includes(modelSearchTerm.toLowerCase())\r\n                : false\r\n            )}\r\n            onSelectModel={handleModelSelect}\r\n            clearSelection={() => handleModelSelect(null)}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Container\r\n        className=\"d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Magmo</h2>\r\n              <Row>\r\n                <Col md={4}>\r\n                  {/* Dropdowns */}\r\n                  <div>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text>OEM</InputGroup.Text>\r\n                      <Dropdown onSelect={handleSelect1}>\r\n                        <Dropdown.Toggle\r\n                          variant=\"outline-secondary\"\r\n                          id=\"dropdown-button-1\"\r\n                          className=\"w-100\"\r\n                        >\r\n                          {dropdown1Text}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                          <Dropdown.Item eventKey=\"unassigned\">\r\n                            Select Option\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"GE\">GE</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"Toshiba\">\r\n                            Toshiba\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"Siemens\">\r\n                            Siemens\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"Philips\">\r\n                            Philips\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-5\">\r\n                      <InputGroup.Text>Modality</InputGroup.Text>\r\n                      <Dropdown onSelect={handleSelect2}>\r\n                        <Dropdown.Toggle\r\n                          variant=\"outline-secondary\"\r\n                          id=\"dropdown-button-2\"\r\n                          className=\"w-100\"\r\n                        >\r\n                          {dropdown2Text}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                          <Dropdown.Item eventKey=\"unassigned\">\r\n                            Select Option\r\n                          </Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"CT\">CT</Dropdown.Item>\r\n                          <Dropdown.Item eventKey=\"MRI\">MRI</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </InputGroup>\r\n                  </div>\r\n\r\n                  <div className={styles.divider}></div>\r\n\r\n                  {/* Client selection boxes */}\r\n                  <div>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text>Client From</InputGroup.Text>\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        className=\"w-100\"\r\n                        onClick={() => {\r\n                          setClientSelectionType(\"from\");\r\n                          handleClientClick();\r\n                        }}\r\n                      >\r\n                        {clientFromButtonText}\r\n                      </Button>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text>Client Current</InputGroup.Text>\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        className=\"w-100\"\r\n                        onClick={() => {\r\n                          setClientSelectionType(\"current\");\r\n                          handleClientClick();\r\n                        }}\r\n                      >\r\n                        {clientCurrentButtonText}\r\n                      </Button>\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text>Model</InputGroup.Text>\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        className=\"w-100\"\r\n                        onClick={handleModelClick}\r\n                      >\r\n                        {modelButtonText}\r\n                      </Button>\r\n                    </InputGroup>\r\n\r\n                    <div className={styles.divider}></div>\r\n\r\n                    {/* Warehouse buttons for Client Current */}\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Text>Warehouse</InputGroup.Text>\r\n                      <div className={styles.buttonGroup}>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          className={styles.flexButton}\r\n                          onClick={handleSoCalWarehouseClick}\r\n                        >\r\n                          SoCal Warehouse\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          className={styles.flexButton}\r\n                          onClick={handleNorCalWarehouseClick}\r\n                        >\r\n                          NorCal Warehouse\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          className={styles.flexButton}\r\n                          onClick={handleWarehouseUnassignedClick}\r\n                        >\r\n                          Unassigned\r\n                        </Button>\r\n                      </div>\r\n                    </InputGroup>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                  <div className={styles.tableContainer}>\r\n                    {isLoading ? (\r\n                      <div className=\"d-flex justify-content-center align-items-center p-5\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                          <span className=\"sr-only\">M</span>\r\n                        </Spinner>\r\n                      </div>\r\n                    ) : (\r\n                      <PartTable\r\n                        info={info}\r\n                        labels={labels}\r\n                        ids={ids}\r\n                        hoverStyle={hoverStyle}\r\n                        sortCheckAll={sortCheckAll}\r\n                        checkDelete={checkDelete}\r\n                        isDeleting={isDeleting}\r\n                        rowSelect={rowSelect}\r\n                        setHoverIndex={setHoverIndex}\r\n                        hoverIndex={hoverIndex}\r\n                        selectedItems={selectedItems}\r\n                        setSelectedItems={setSelectedItems}\r\n                      />\r\n                    )}\r\n\r\n                    <div className={styles.searchContainer}>\r\n                      <Form className=\"d-flex pb-2\">\r\n                        <FormControl\r\n                          type={showListSearch}\r\n                          placeholder=\"Search\"\r\n                          className=\"me-2 flex-grow-1\"\r\n                          aria-label=\"Search\"\r\n                          value={search}\r\n                          onChange={searchChangeHandler}\r\n                          style={{ flex: \"1\" }}\r\n                        />\r\n                        <NavDropdown\r\n                          title={select}\r\n                          id=\"collasible-nav-dropdown\"\r\n                          show={showList}\r\n                          onMouseEnter={() => setShowList(true)}\r\n                          onMouseLeave={() => setShowList(false)}\r\n                          style={{ marginTop: \"-5px\" }}\r\n                        >\r\n                          <NavDropdown.Item onClick={() => { setSelect(\"Name\"); setShowListSearch(\"text\"); }}>\r\n                            Name\r\n                          </NavDropdown.Item>\r\n                          <NavDropdown.Item onClick={() => { setSelect(\"Date\"); setShowListSearch(\"date\"); }}>\r\n                            Date\r\n                          </NavDropdown.Item>\r\n                          <NavDropdown.Item onClick={() => { setSelect(\"Work Order\"); setShowListSearch(\"number\"); }}>\r\n                            Work Order\r\n                          </NavDropdown.Item>\r\n                          <NavDropdown.Item onClick={() => { setSelect(\"Product Number\"); setShowListSearch(\"number\"); }}>\r\n                            Product Number\r\n                          </NavDropdown.Item>\r\n                          <NavDropdown.Item onClick={() => { setSelect(\"Description\"); setShowListSearch(\"text\"); }}>\r\n                            Description\r\n                          </NavDropdown.Item>\r\n                          <NavDropdown.Item\r\n                            onClick={() => {\r\n                              setSelect(\"SKU\");\r\n                              setShowListSearch(\"text\");\r\n                            }}\r\n                          >\r\n                            SKU\r\n                          </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                      </Form>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <LoadingButton type=\"secondary\" name=\"Add New Item\" route=\"NewSearch/AddItem/NewItem\" />\r\n                        <LoadingButton type=\"primary\" name=\"Back\" route=\"Warehousedb/WarehouseSelect\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </LoggedIn>\r\n  );\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}