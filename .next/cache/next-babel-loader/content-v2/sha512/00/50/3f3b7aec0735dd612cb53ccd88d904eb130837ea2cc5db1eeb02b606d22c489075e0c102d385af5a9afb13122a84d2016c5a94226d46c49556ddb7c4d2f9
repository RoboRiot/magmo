{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\AddItem\\\\parentModal.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Container, Card, Row, Col, InputGroup, Dropdown, FormControl, Button, NavDropdown, Form, Table } from \"react-bootstrap\";\nimport { fetchPartsWithMachineData, fetchClients, fetchModels, formatDate } from \"../../../utils/fetchAssociations\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport LoggedIn from \"../../LoggedIn\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ModelTable from \"../../../utils/ModelTable\";\nimport PartTable from \"../../../utils/PartTable\";\nimport styles from \"../../../styles/MainSearch.module.css\";\nimport firebase from \"../../../context/Firebase\";\nconst CLIENT_WAREHOUSE = \"igor-house\";\nconst CLIENT_UNASSIGNED = \"unassigned\";\n\nconst ParentModal = ({\n  show,\n  handleClose,\n  setSelectedParent,\n  parts\n}) => {\n  const {\n    0: info,\n    1: setInfo\n  } = useState([]);\n  const {\n    0: backupInfo,\n    1: setBackupInfo\n  } = useState([]);\n  const {\n    0: ids,\n    1: setID\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: select,\n    1: setSelect\n  } = useState(\"Name\");\n  const {\n    0: showList,\n    1: setShowList\n  } = useState(false);\n  const {\n    0: showListSearch,\n    1: setShowListSearch\n  } = useState(\"text\");\n  const {\n    0: selectedOEM,\n    1: setSelectedOEM\n  } = useState(null);\n  const {\n    0: selectedModality,\n    1: setSelectedModality\n  } = useState(null);\n  const {\n    0: selectedClient,\n    1: setSelectedClient\n  } = useState(null);\n  const {\n    0: clients,\n    1: setClients\n  } = useState([]);\n  const {\n    0: showClientModal,\n    1: setShowClientModal\n  } = useState(false);\n  const {\n    0: clientButtonText,\n    1: setClientButtonText\n  } = useState(\"Select Option\");\n  const {\n    0: hoverIndex,\n    1: setHoverIndex\n  } = useState(null);\n  const {\n    0: selectedModel,\n    1: setSelectedModel\n  } = useState(null);\n  const {\n    0: models,\n    1: setModels\n  } = useState([]);\n  const {\n    0: showModelModal,\n    1: setShowModelModal\n  } = useState(false);\n  const {\n    0: modelButtonText,\n    1: setModelButtonText\n  } = useState(\"Select Option\");\n  const {\n    0: clientSearchTerm,\n    1: setClientSearchTerm\n  } = useState(\"\");\n  const {\n    0: modelSearchTerm,\n    1: setModelSearchTerm\n  } = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPartsWithMachineData();\n      setInfo(data);\n      setBackupInfo(data);\n      setID(data.map(item => item.id)); // Ensure IDs are correctly set here\n    }\n\n    fetchData();\n  }, []);\n\n  const handleCloseClientModal = () => setShowClientModal(false);\n\n  const handleShowClientModal = () => setShowClientModal(true);\n\n  const handleCloseModelModal = () => setShowModelModal(false);\n\n  const handleShowModelModal = () => setShowModelModal(true); // Handle search input changes\n\n\n  const searchChangeHandler = event => setSearch(event.target.value); // Filter items based on search criteria\n\n\n  function searchFilter() {\n    const temp = backupInfo.filter(item => {\n      if (item.machineData) {\n        if (selectedOEM && item.machineData.OEM !== selectedOEM) return false;\n        if (selectedModality && item.machineData.Modality !== selectedModality) return false;\n        if (selectedClient && item.machineData.Client !== selectedClient) return false;\n        if (selectedModel && item.machineData.Model !== selectedModel) return false;\n      }\n\n      if (select === \"Name\" && item.name.toLowerCase().includes(search.toLowerCase())) return true;\n\n      if (select === \"Date\") {\n        const [month, day, year] = item.date.split(\"/\");\n        const reformattedDate = `${year}-${month}-${day}`;\n        return reformattedDate === search;\n      }\n\n      if (select === \"Work Order\" && Number(item.wo) === Number(search)) return true;\n      if (select === \"Product Number\" && Number(item.pn) === Number(search)) return true;\n      if (select === \"Description\" && item.desc.toLowerCase().includes(search.toLowerCase())) return true;\n      return false;\n    });\n    setInfo(temp);\n  } // Sort items based on column\n\n\n  function sortCheckAll(pos) {\n    const sortedInfo = [...info].sort((a, b) => {\n      if (pos === 0 || pos === 5) {\n        return b[select].localeCompare(a[select]);\n      }\n\n      if (pos === 1) {\n        return Date.parse(b[select]) - Date.parse(a[select]);\n      }\n\n      return Number(b[select]) - Number(a[select]);\n    });\n    setInfo(sortedInfo);\n  } // Row selection handler\n\n\n  const rowSelect = (id, name, pn) => {\n    setSelectedParent({\n      id,\n      name,\n      pn\n    });\n    handleClose();\n  }; // Dropdown handlers\n\n\n  const {\n    0: dropdown1Text,\n    1: setDropdown1Text\n  } = useState(\"Select Option\");\n  const {\n    0: dropdown2Text,\n    1: setDropdown2Text\n  } = useState(\"Select Option\");\n\n  const handleSelect1 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown1Text(\"Select Option\");\n      setSelectedOEM(null);\n    } else {\n      setDropdown1Text(event.target.textContent);\n      setSelectedOEM(event.target.textContent);\n    }\n  };\n\n  const handleSelect2 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown2Text(\"Select Option\");\n      setSelectedModality(null);\n    } else {\n      setDropdown2Text(event.target.textContent);\n      setSelectedModality(event.target.textContent);\n    }\n  };\n\n  useEffect(() => {\n    searchFilter();\n  }, [selectedOEM, selectedModality, selectedClient, selectedModel, search]); // Fetch clients and show modal\n\n  const handleClientClick = async () => {\n    console.log(\"clicked\");\n    const clientsData = await fetchClients(selectedOEM, selectedModality);\n    setClients(clientsData);\n    setClientSearchTerm(\"\"); // Reset search term\n\n    setShowClientModal(true);\n  }; // Client selection handler\n\n\n  const handleClientSelect = clientName => {\n    setClientButtonText(clientName || \"Select Option\");\n    setSelectedClient(clientName || null);\n    setShowClientModal(false);\n  }; // Client info handler\n\n\n  const handleClientInfo = (clientId, clientName) => {\n    console.log(`Client ID: ${clientId}, Client Name: ${clientName}`);\n  }; // Clear client selection handler\n\n\n  const handleClearClientSelection = () => {\n    setClientButtonText(\"Select Option\");\n    setSelectedClient(null);\n    setShowClientModal(false);\n    searchFilter();\n  }; // Fetch models and show modal\n\n\n  const handleModelClick = async () => {\n    const modelsData = await fetchModels(selectedOEM, selectedModality, selectedClient);\n    setModels(modelsData);\n    setModelSearchTerm(\"\"); // Reset search term\n\n    setShowModelModal(true);\n  }; // Model selection handler\n\n\n  const handleModelSelect = modelName => {\n    setModelButtonText(modelName || \"Select Option\");\n    setSelectedModel(modelName || null);\n    setShowModelModal(false);\n  }; // Clear model selection handler\n\n\n  const handleClearModelSelection = () => {\n    setModelButtonText(\"Select Option\");\n    setSelectedModel(null);\n    setShowModelModal(false);\n    searchFilter();\n  };\n\n  const handleWarehouseClick = () => {\n    setClientButtonText(CLIENT_WAREHOUSE);\n    setSelectedClient(CLIENT_WAREHOUSE);\n    searchFilter();\n  };\n\n  const handleUnassignedClick = () => {\n    setClientButtonText(CLIENT_UNASSIGNED);\n    setSelectedClient(CLIENT_UNASSIGNED);\n    searchFilter();\n  };\n\n  return __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, \"Select Parent\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"80vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"OEM\"), __jsx(Dropdown, {\n    onSelect: handleSelect1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-1\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 27\n    }\n  }, dropdown1Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 27\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"GE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, \"GE\"), __jsx(Dropdown.Item, {\n    eventKey: \"Toshiba\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, \"Toshiba\"), __jsx(Dropdown.Item, {\n    eventKey: \"Siemens\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, \"Siemens\"), __jsx(Dropdown.Item, {\n    eventKey: \"Philips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, \"Philips\")))), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"Modality\"), __jsx(Dropdown, {\n    onSelect: handleSelect2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-2\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 27\n    }\n  }, dropdown2Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 27\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"CT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"CT\"), __jsx(Dropdown.Item, {\n    eventKey: \"MRI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, \"MRI\")))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 27\n    }\n  }, \"Client\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: handleClientClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 27\n    }\n  }, clientButtonText)), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 27\n    }\n  }, \"Client-2\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 27\n    }\n  }, \"Select Option\")), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 27\n    }\n  }, \"Model\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: handleModelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 27\n    }\n  }, modelButtonText)), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 27\n    }\n  }, \"Warehouse\"), __jsx(\"div\", {\n    className: styles.buttonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleWarehouseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  }, \"Warehouse\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleUnassignedClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"Unassigned\")))))), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: styles.tableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 23\n    }\n  }, __jsx(\"thead\", {\n    className: styles.stickyHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 27\n    }\n  }, __jsx(\"th\", {\n    onClick: () => sortCheckAll(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    onClick: () => sortCheckAll(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, \"Date\"), __jsx(\"th\", {\n    onClick: () => sortCheckAll(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, \"Work Order\"), __jsx(\"th\", {\n    onClick: () => sortCheckAll(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 29\n    }\n  }, \"Product Number\"), __jsx(\"th\", {\n    onClick: () => sortCheckAll(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, \"Serial Number\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 29\n    }\n  }, \"Select\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, info.map((item, index) => __jsx(\"tr\", {\n    className: \"clickable-row\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 31\n    }\n  }, item.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 31\n    }\n  }, formatDate(item.date)), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 31\n    }\n  }, item.workOrders && item.workOrders.length > 0 ? item.workOrders[item.workOrders.length - 1].workOrder : \"N/A\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 31\n    }\n  }, item.pn), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 31\n    }\n  }, item.sn), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 31\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: () => rowSelect(ids[index], item.name, item.pn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, \"Select\")))))), __jsx(\"div\", {\n    className: styles.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 23\n    }\n  }, __jsx(Form, {\n    className: \"d-flex pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 25\n    }\n  }, __jsx(FormControl, {\n    type: showListSearch,\n    placeholder: \"Search\",\n    className: \"me-2 flex-grow-1\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler,\n    style: {\n      flex: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 27\n    }\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: showList,\n    onMouseEnter: () => setShowList(true),\n    onMouseLeave: () => setShowList(false),\n    style: {\n      marginTop: \"-5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 27\n    }\n  }, __jsx(NavDropdown.Item, {\n    onClick: () => setSelect(\"Name\") & setShowListSearch(\"text\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    onClick: () => setSelect(\"Date\") & setShowListSearch(\"date\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    onClick: () => setSelect(\"Work Order\") & setShowListSearch(\"number\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    onClick: () => setSelect(\"Product Number\") & setShowListSearch(\"number\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 29\n    }\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    onClick: () => setSelect(\"Description\") & setShowListSearch(\"text\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  }, \"Description\")))))))))))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }\n  }, \"Close\")), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: clientSearchTerm,\n    onChange: e => setClientSearchTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(client => client.name.toLowerCase().includes(clientSearchTerm.toLowerCase())),\n    disableInfo: true,\n    onSelectClient: handleClientSelect,\n    onInfoClick: handleClientInfo,\n    clearSelection: () => handleClientSelect(null) // Clear selection handler\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }))), __jsx(Modal, {\n    show: showModelModal,\n    onHide: handleCloseModelModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, \"Select Model\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: modelSearchTerm,\n    onChange: e => setModelSearchTerm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 11\n    }\n  }), __jsx(ModelTable, {\n    models: models.filter(model => typeof model === \"string\" ? model.toLowerCase().includes(modelSearchTerm.toLowerCase()) : false),\n    onSelectModel: handleModelSelect,\n    clearSelection: () => handleModelSelect(null) // Clear selection handler\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ParentModal;","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/AddItem/parentModal.js"],"names":["React","useEffect","useState","Modal","Container","Card","Row","Col","InputGroup","Dropdown","FormControl","Button","NavDropdown","Form","Table","fetchPartsWithMachineData","fetchClients","fetchModels","formatDate","useAuth","LoggedIn","ClientTable","ModelTable","PartTable","styles","firebase","CLIENT_WAREHOUSE","CLIENT_UNASSIGNED","ParentModal","show","handleClose","setSelectedParent","parts","info","setInfo","backupInfo","setBackupInfo","ids","setID","search","setSearch","select","setSelect","showList","setShowList","showListSearch","setShowListSearch","selectedOEM","setSelectedOEM","selectedModality","setSelectedModality","selectedClient","setSelectedClient","clients","setClients","showClientModal","setShowClientModal","clientButtonText","setClientButtonText","hoverIndex","setHoverIndex","selectedModel","setSelectedModel","models","setModels","showModelModal","setShowModelModal","modelButtonText","setModelButtonText","clientSearchTerm","setClientSearchTerm","modelSearchTerm","setModelSearchTerm","fetchData","data","map","item","id","handleCloseClientModal","handleShowClientModal","handleCloseModelModal","handleShowModelModal","searchChangeHandler","event","target","value","searchFilter","temp","filter","machineData","OEM","Modality","Client","Model","name","toLowerCase","includes","month","day","year","date","split","reformattedDate","Number","wo","pn","desc","sortCheckAll","pos","sortedInfo","sort","a","b","localeCompare","Date","parse","rowSelect","dropdown1Text","setDropdown1Text","dropdown2Text","setDropdown2Text","handleSelect1","eventKey","textContent","handleSelect2","handleClientClick","console","log","clientsData","handleClientSelect","clientName","handleClientInfo","clientId","handleClearClientSelection","handleModelClick","modelsData","handleModelSelect","modelName","handleClearModelSelection","handleWarehouseClick","handleUnassignedClick","minHeight","maxWidth","divider","buttonGroup","flexButton","tableContainer","stickyHeader","index","workOrders","length","workOrder","sn","searchContainer","flex","marginTop","e","client","model"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,UANF,EAOEC,QAPF,EAQEC,WARF,EASEC,MATF,EAUEC,WAVF,EAWEC,IAXF,EAYEC,KAZF,QAaO,iBAbP;AAcA,SACEC,yBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,kCALP;AAMA,SAASC,OAAT,QAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,gBAAgB,GAAG,YAAzB;AACA,MAAMC,iBAAiB,GAAG,YAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,iBAArB;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AACvE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBhC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACiC,UAAD;AAAA,OAAaC;AAAb,MAA8BlC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACmC,GAAD;AAAA,OAAMC;AAAN,MAAepC,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM;AAAA,OAACqC,MAAD;AAAA,OAASC;AAAT,MAAsBtC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACuC,MAAD;AAAA,OAASC;AAAT,MAAsBxC,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM;AAAA,OAACyC,QAAD;AAAA,OAAWC;AAAX,MAA0B1C,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAAC2C,cAAD;AAAA,OAAiBC;AAAjB,MAAsC5C,QAAQ,CAAC,MAAD,CAApD;AACA,QAAM;AAAA,OAAC6C,WAAD;AAAA,OAAcC;AAAd,MAAgC9C,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAA,OAAC+C,gBAAD;AAAA,OAAmBC;AAAnB,MAA0ChD,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM;AAAA,OAACiD,cAAD;AAAA,OAAiBC;AAAjB,MAAsClD,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM;AAAA,OAACmD,OAAD;AAAA,OAAUC;AAAV,MAAwBpD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACqD,eAAD;AAAA,OAAkBC;AAAlB,MAAwCtD,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACuD,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CxD,QAAQ,CAAC,eAAD,CAAxD;AACA,QAAM;AAAA,OAACyD,UAAD;AAAA,OAAaC;AAAb,MAA8B1D,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAA,OAAC2D,aAAD;AAAA,OAAgBC;AAAhB,MAAoC5D,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAA,OAAC6D,MAAD;AAAA,OAASC;AAAT,MAAsB9D,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAC+D,cAAD;AAAA,OAAiBC;AAAjB,MAAsChE,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACiE,eAAD;AAAA,OAAkBC;AAAlB,MAAwClE,QAAQ,CAAC,eAAD,CAAtD;AACA,QAAM;AAAA,OAACmE,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CpE,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAAA,OAACqE,eAAD;AAAA,OAAkBC;AAAlB,MAAwCtE,QAAQ,CAAC,EAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewE,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAM3D,yBAAyB,EAA5C;AACAmB,MAAAA,OAAO,CAACwC,IAAD,CAAP;AACAtC,MAAAA,aAAa,CAACsC,IAAD,CAAb;AACApC,MAAAA,KAAK,CAACoC,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,EAAxB,CAAD,CAAL,CAJyB,CAIW;AACrC;;AACDJ,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMK,sBAAsB,GAAG,MAAMtB,kBAAkB,CAAC,KAAD,CAAvD;;AACA,QAAMuB,qBAAqB,GAAG,MAAMvB,kBAAkB,CAAC,IAAD,CAAtD;;AAEA,QAAMwB,qBAAqB,GAAG,MAAMd,iBAAiB,CAAC,KAAD,CAArD;;AACA,QAAMe,oBAAoB,GAAG,MAAMf,iBAAiB,CAAC,IAAD,CAApD,CApCuE,CAsCvE;;;AACA,QAAMgB,mBAAmB,GAAIC,KAAD,IAAW3C,SAAS,CAAC2C,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhD,CAvCuE,CAyCvE;;;AACA,WAASC,YAAT,GAAwB;AACtB,UAAMC,IAAI,GAAGpD,UAAU,CAACqD,MAAX,CAAmBZ,IAAD,IAAU;AACvC,UAAIA,IAAI,CAACa,WAAT,EAAsB;AACpB,YAAI1C,WAAW,IAAI6B,IAAI,CAACa,WAAL,CAAiBC,GAAjB,KAAyB3C,WAA5C,EAAyD,OAAO,KAAP;AACzD,YAAIE,gBAAgB,IAAI2B,IAAI,CAACa,WAAL,CAAiBE,QAAjB,KAA8B1C,gBAAtD,EACE,OAAO,KAAP;AACF,YAAIE,cAAc,IAAIyB,IAAI,CAACa,WAAL,CAAiBG,MAAjB,KAA4BzC,cAAlD,EACE,OAAO,KAAP;AACF,YAAIU,aAAa,IAAIe,IAAI,CAACa,WAAL,CAAiBI,KAAjB,KAA2BhC,aAAhD,EACE,OAAO,KAAP;AACH;;AAED,UACEpB,MAAM,KAAK,MAAX,IACAmC,IAAI,CAACkB,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCzD,MAAM,CAACwD,WAAP,EAAjC,CAFF,EAIE,OAAO,IAAP;;AACF,UAAItD,MAAM,KAAK,MAAf,EAAuB;AACrB,cAAM,CAACwD,KAAD,EAAQC,GAAR,EAAaC,IAAb,IAAqBvB,IAAI,CAACwB,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAA3B;AACA,cAAMC,eAAe,GAAI,GAAEH,IAAK,IAAGF,KAAM,IAAGC,GAAI,EAAhD;AACA,eAAOI,eAAe,KAAK/D,MAA3B;AACD;;AACD,UAAIE,MAAM,KAAK,YAAX,IAA2B8D,MAAM,CAAC3B,IAAI,CAAC4B,EAAN,CAAN,KAAoBD,MAAM,CAAChE,MAAD,CAAzD,EACE,OAAO,IAAP;AACF,UAAIE,MAAM,KAAK,gBAAX,IAA+B8D,MAAM,CAAC3B,IAAI,CAAC6B,EAAN,CAAN,KAAoBF,MAAM,CAAChE,MAAD,CAA7D,EACE,OAAO,IAAP;AACF,UACEE,MAAM,KAAK,aAAX,IACAmC,IAAI,CAAC8B,IAAL,CAAUX,WAAV,GAAwBC,QAAxB,CAAiCzD,MAAM,CAACwD,WAAP,EAAjC,CAFF,EAIE,OAAO,IAAP;AACF,aAAO,KAAP;AACD,KA/BY,CAAb;AAgCA7D,IAAAA,OAAO,CAACqD,IAAD,CAAP;AACD,GA5EsE,CA8EvE;;;AACA,WAASoB,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,UAAMC,UAAU,GAAG,CAAC,GAAG5E,IAAJ,EAAU6E,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1C,UAAIJ,GAAG,KAAK,CAAR,IAAaA,GAAG,KAAK,CAAzB,EAA4B;AAC1B,eAAOI,CAAC,CAACvE,MAAD,CAAD,CAAUwE,aAAV,CAAwBF,CAAC,CAACtE,MAAD,CAAzB,CAAP;AACD;;AACD,UAAImE,GAAG,KAAK,CAAZ,EAAe;AACb,eAAOM,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACvE,MAAD,CAAZ,IAAwByE,IAAI,CAACC,KAAL,CAAWJ,CAAC,CAACtE,MAAD,CAAZ,CAA/B;AACD;;AACD,aAAO8D,MAAM,CAACS,CAAC,CAACvE,MAAD,CAAF,CAAN,GAAoB8D,MAAM,CAACQ,CAAC,CAACtE,MAAD,CAAF,CAAjC;AACD,KARkB,CAAnB;AASAP,IAAAA,OAAO,CAAC2E,UAAD,CAAP;AACD,GA1FsE,CA4FvE;;;AACA,QAAMO,SAAS,GAAG,CAACvC,EAAD,EAAKiB,IAAL,EAAWW,EAAX,KAAkB;AAClC1E,IAAAA,iBAAiB,CAAC;AAAE8C,MAAAA,EAAF;AAAMiB,MAAAA,IAAN;AAAYW,MAAAA;AAAZ,KAAD,CAAjB;AACA3E,IAAAA,WAAW;AACZ,GAHD,CA7FuE,CAkGvE;;;AACA,QAAM;AAAA,OAACuF,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpH,QAAQ,CAAC,eAAD,CAAlD;AACA,QAAM;AAAA,OAACqH,aAAD;AAAA,OAAgBC;AAAhB,MAAoCtH,QAAQ,CAAC,eAAD,CAAlD;;AAEA,QAAMuH,aAAa,GAAG,CAACC,QAAD,EAAWvC,KAAX,KAAqB;AACzC,QAAIuC,QAAQ,KAAK,YAAjB,EAA+B;AAC7BJ,MAAAA,gBAAgB,CAAC,eAAD,CAAhB;AACAtE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAHD,MAGO;AACLsE,MAAAA,gBAAgB,CAACnC,KAAK,CAACC,MAAN,CAAauC,WAAd,CAAhB;AACA3E,MAAAA,cAAc,CAACmC,KAAK,CAACC,MAAN,CAAauC,WAAd,CAAd;AACD;AACF,GARD;;AAUA,QAAMC,aAAa,GAAG,CAACF,QAAD,EAAWvC,KAAX,KAAqB;AACzC,QAAIuC,QAAQ,KAAK,YAAjB,EAA+B;AAC7BF,MAAAA,gBAAgB,CAAC,eAAD,CAAhB;AACAtE,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KAHD,MAGO;AACLsE,MAAAA,gBAAgB,CAACrC,KAAK,CAACC,MAAN,CAAauC,WAAd,CAAhB;AACAzE,MAAAA,mBAAmB,CAACiC,KAAK,CAACC,MAAN,CAAauC,WAAd,CAAnB;AACD;AACF,GARD;;AAUA1H,EAAAA,SAAS,CAAC,MAAM;AACdqF,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACvC,WAAD,EAAcE,gBAAd,EAAgCE,cAAhC,EAAgDU,aAAhD,EAA+DtB,MAA/D,CAFM,CAAT,CA1HuE,CA8HvE;;AACA,QAAMsF,iBAAiB,GAAG,YAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,WAAW,GAAG,MAAMhH,YAAY,CAAC+B,WAAD,EAAcE,gBAAd,CAAtC;AACAK,IAAAA,UAAU,CAAC0E,WAAD,CAAV;AACA1D,IAAAA,mBAAmB,CAAC,EAAD,CAAnB,CAJoC,CAIX;;AACzBd,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAND,CA/HuE,CAuIvE;;;AACA,QAAMyE,kBAAkB,GAAIC,UAAD,IAAgB;AACzCxE,IAAAA,mBAAmB,CAACwE,UAAU,IAAI,eAAf,CAAnB;AACA9E,IAAAA,iBAAiB,CAAC8E,UAAU,IAAI,IAAf,CAAjB;AACA1E,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAJD,CAxIuE,CA8IvE;;;AACA,QAAM2E,gBAAgB,GAAG,CAACC,QAAD,EAAWF,UAAX,KAA0B;AACjDJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaK,QAAS,kBAAiBF,UAAW,EAA/D;AACD,GAFD,CA/IuE,CAmJvE;;;AACA,QAAMG,0BAA0B,GAAG,MAAM;AACvC3E,IAAAA,mBAAmB,CAAC,eAAD,CAAnB;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAI,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACA8B,IAAAA,YAAY;AACb,GALD,CApJuE,CA2JvE;;;AACA,QAAMgD,gBAAgB,GAAG,YAAY;AACnC,UAAMC,UAAU,GAAG,MAAMtH,WAAW,CAClC8B,WADkC,EAElCE,gBAFkC,EAGlCE,cAHkC,CAApC;AAKAa,IAAAA,SAAS,CAACuE,UAAD,CAAT;AACA/D,IAAAA,kBAAkB,CAAC,EAAD,CAAlB,CAPmC,CAOX;;AACxBN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GATD,CA5JuE,CAuKvE;;;AACA,QAAMsE,iBAAiB,GAAIC,SAAD,IAAe;AACvCrE,IAAAA,kBAAkB,CAACqE,SAAS,IAAI,eAAd,CAAlB;AACA3E,IAAAA,gBAAgB,CAAC2E,SAAS,IAAI,IAAd,CAAhB;AACAvE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAJD,CAxKuE,CA8KvE;;;AACA,QAAMwE,yBAAyB,GAAG,MAAM;AACtCtE,IAAAA,kBAAkB,CAAC,eAAD,CAAlB;AACAN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAI,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAoB,IAAAA,YAAY;AACb,GALD;;AAOA,QAAMqD,oBAAoB,GAAG,MAAM;AACjCjF,IAAAA,mBAAmB,CAAChC,gBAAD,CAAnB;AACA0B,IAAAA,iBAAiB,CAAC1B,gBAAD,CAAjB;AACA4D,IAAAA,YAAY;AACb,GAJD;;AAMA,QAAMsD,qBAAqB,GAAG,MAAM;AAClClF,IAAAA,mBAAmB,CAAC/B,iBAAD,CAAnB;AACAyB,IAAAA,iBAAiB,CAACzB,iBAAD,CAAjB;AACA2D,IAAAA,YAAY;AACb,GAJD;;AAMA,SACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEzD,IAAb;AAAmB,IAAA,MAAM,EAAEC,WAA3B;AAAwC,IAAA,IAAI,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,kDADZ;AAEE,IAAA,KAAK,EAAE;AAAE+G,MAAAA,SAAS,EAAE;AAAb,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAErB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,MAAV;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,aALH,CADF,EAQE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,SAAS,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAQE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EAWE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,CARF,CAFF,CADF,EA6BE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEO,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,MAAV;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,EAAE,EAAC,mBAFL;AAGE,IAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,aALH,CADF,EAQE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,SAAS,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE,MAAC,QAAD,CAAU,IAAV;AAAe,IAAA,QAAQ,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CARF,CAFF,CA7BF,EAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAEM,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGpE,gBALH,CAFF,CADF,EAWE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAXF,EAqBE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAE6E,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGnE,eALH,CAFF,CArBF,EAgCE;AAAK,IAAA,SAAS,EAAE3C,MAAM,CAACuH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,EAiCE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAEvH,MAAM,CAACwH,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAExH,MAAM,CAACyH,UAFpB;AAGE,IAAA,OAAO,EAAEN,oBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAQE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,SAAS,EAAEnH,MAAM,CAACyH,UAFpB;AAGE,IAAA,OAAO,EAAEL,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAFF,CAjCF,CAlDF,CAFF,CADF,EA6GE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEpH,MAAM,CAAC0H,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,IAAI,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAE1H,MAAM,CAAC2H,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAE,MAAMxC,YAAY,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAOE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1E,IAAI,CAAC0C,GAAL,CAAS,CAACC,IAAD,EAAOwE,KAAP,KACR;AAAI,IAAA,SAAS,EAAC,eAAd;AAA8B,IAAA,GAAG,EAAEA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKxE,IAAI,CAACkB,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK5E,UAAU,CAAC0D,IAAI,CAACwB,IAAN,CAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,IAAI,CAACyE,UAAL,IAAmBzE,IAAI,CAACyE,UAAL,CAAgBC,MAAhB,GAAyB,CAA5C,GACG1E,IAAI,CAACyE,UAAL,CAAgBzE,IAAI,CAACyE,UAAL,CAAgBC,MAAhB,GAAyB,CAAzC,EACGC,SAFN,GAGG,KAJN,CAHF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK3E,IAAI,CAAC6B,EAAV,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK7B,IAAI,CAAC4E,EAAV,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,OAAO,EAAE,MACPpC,SAAS,CAAC/E,GAAG,CAAC+G,KAAD,CAAJ,EAAaxE,IAAI,CAACkB,IAAlB,EAAwBlB,IAAI,CAAC6B,EAA7B,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CADD,CADH,CAfF,CADF,EA2CE;AAAK,IAAA,SAAS,EAAEjF,MAAM,CAACiI,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAE5G,cADR;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAIE,kBAAW,QAJb;AAKE,IAAA,KAAK,EAAEN,MALT;AAME,IAAA,QAAQ,EAAE2C,mBANZ;AAOE,IAAA,KAAK,EAAE;AAAEwE,MAAAA,IAAI,EAAE;AAAR,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEjH,MADT;AAEE,IAAA,EAAE,EAAC,yBAFL;AAGE,IAAA,IAAI,EAAEE,QAHR;AAIE,IAAA,YAAY,EAAE,MAAMC,WAAW,CAAC,IAAD,CAJjC;AAKE,IAAA,YAAY,EAAE,MAAMA,WAAW,CAAC,KAAD,CALjC;AAME,IAAA,KAAK,EAAE;AAAE+G,MAAAA,SAAS,EAAE;AAAb,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,WAAD,CAAa,IAAb;AACE,IAAA,OAAO,EAAE,MACPjH,SAAS,CAAC,MAAD,CAAT,GAAoBI,iBAAiB,CAAC,MAAD,CAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAeE,MAAC,WAAD,CAAa,IAAb;AACE,IAAA,OAAO,EAAE,MACPJ,SAAS,CAAC,MAAD,CAAT,GAAoBI,iBAAiB,CAAC,MAAD,CAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAsBE,MAAC,WAAD,CAAa,IAAb;AACE,IAAA,OAAO,EAAE,MACPJ,SAAS,CAAC,YAAD,CAAT,GACAI,iBAAiB,CAAC,QAAD,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,EA8BE,MAAC,WAAD,CAAa,IAAb;AACE,IAAA,OAAO,EAAE,MACPJ,SAAS,CAAC,gBAAD,CAAT,GACAI,iBAAiB,CAAC,QAAD,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9BF,EAsCE,MAAC,WAAD,CAAa,IAAb;AACE,IAAA,OAAO,EAAE,MACPJ,SAAS,CAAC,aAAD,CAAT,GACAI,iBAAiB,CAAC,MAAD,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtCF,CAVF,CADF,CA3CF,CADF,CA7GF,CADF,CADF,CADF,CAJF,CADF,CAJF,EA4OE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEhB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CA5OF,EAiPE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEyB,eAAb;AAA8B,IAAA,MAAM,EAAEuB,sBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,KAAK,EAAET,gBAJT;AAKE,IAAA,QAAQ,EAAGuF,CAAD,IAAOtF,mBAAmB,CAACsF,CAAC,CAACxE,MAAF,CAASC,KAAV,CALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,WAAD;AACE,IAAA,OAAO,EAAEhC,OAAO,CAACmC,MAAR,CAAgBqE,MAAD,IACtBA,MAAM,CAAC/D,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC3B,gBAAgB,CAAC0B,WAAjB,EAAnC,CADO,CADX;AAIE,IAAA,WAAW,EAAE,IAJf;AAKE,IAAA,cAAc,EAAEkC,kBALlB;AAME,IAAA,WAAW,EAAEE,gBANf;AAOE,IAAA,cAAc,EAAE,MAAMF,kBAAkB,CAAC,IAAD,CAP1C,CAOkD;AAPlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CAjPF,EAyQE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEhE,cAAb;AAA6B,IAAA,MAAM,EAAEe,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAIE,IAAA,KAAK,EAAET,eAJT;AAKE,IAAA,QAAQ,EAAGqF,CAAD,IAAOpF,kBAAkB,CAACoF,CAAC,CAACxE,MAAF,CAASC,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,UAAD;AACE,IAAA,MAAM,EAAEtB,MAAM,CAACyB,MAAP,CAAesE,KAAD,IACpB,OAAOA,KAAP,KAAiB,QAAjB,GACIA,KAAK,CAAC/D,WAAN,GAAoBC,QAApB,CAA6BzB,eAAe,CAACwB,WAAhB,EAA7B,CADJ,GAEI,KAHE,CADV;AAME,IAAA,aAAa,EAAEyC,iBANjB;AAOE,IAAA,cAAc,EAAE,MAAMA,iBAAiB,CAAC,IAAD,CAPzC,CAOiD;AAPjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CAzQF,CADF;AAmSD,CAreD;;AAueA,eAAe5G,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  Container,\n  Card,\n  Row,\n  Col,\n  InputGroup,\n  Dropdown,\n  FormControl,\n  Button,\n  NavDropdown,\n  Form,\n  Table,\n} from \"react-bootstrap\";\nimport {\n  fetchPartsWithMachineData,\n  fetchClients,\n  fetchModels,\n  formatDate,\n} from \"../../../utils/fetchAssociations\";\nimport { useAuth } from \"../../../context/AuthUserContext\";\nimport LoggedIn from \"../../LoggedIn\";\nimport ClientTable from \"../../../utils/ClientTable\";\nimport ModelTable from \"../../../utils/ModelTable\";\nimport PartTable from \"../../../utils/PartTable\";\nimport styles from \"../../../styles/MainSearch.module.css\";\nimport firebase from \"../../../context/Firebase\";\n\nconst CLIENT_WAREHOUSE = \"igor-house\";\nconst CLIENT_UNASSIGNED = \"unassigned\";\n\nconst ParentModal = ({ show, handleClose, setSelectedParent, parts }) => {\n  const [info, setInfo] = useState([]);\n  const [backupInfo, setBackupInfo] = useState([]);\n  const [ids, setID] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [select, setSelect] = useState(\"Name\");\n  const [showList, setShowList] = useState(false);\n  const [showListSearch, setShowListSearch] = useState(\"text\");\n  const [selectedOEM, setSelectedOEM] = useState(null);\n  const [selectedModality, setSelectedModality] = useState(null);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [clients, setClients] = useState([]);\n  const [showClientModal, setShowClientModal] = useState(false);\n  const [clientButtonText, setClientButtonText] = useState(\"Select Option\");\n  const [hoverIndex, setHoverIndex] = useState(null);\n  const [selectedModel, setSelectedModel] = useState(null);\n  const [models, setModels] = useState([]);\n  const [showModelModal, setShowModelModal] = useState(false);\n  const [modelButtonText, setModelButtonText] = useState(\"Select Option\");\n  const [clientSearchTerm, setClientSearchTerm] = useState(\"\");\n  const [modelSearchTerm, setModelSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetchPartsWithMachineData();\n      setInfo(data);\n      setBackupInfo(data);\n      setID(data.map((item) => item.id)); // Ensure IDs are correctly set here\n    }\n    fetchData();\n  }, []);\n\n  const handleCloseClientModal = () => setShowClientModal(false);\n  const handleShowClientModal = () => setShowClientModal(true);\n\n  const handleCloseModelModal = () => setShowModelModal(false);\n  const handleShowModelModal = () => setShowModelModal(true);\n\n  // Handle search input changes\n  const searchChangeHandler = (event) => setSearch(event.target.value);\n\n  // Filter items based on search criteria\n  function searchFilter() {\n    const temp = backupInfo.filter((item) => {\n      if (item.machineData) {\n        if (selectedOEM && item.machineData.OEM !== selectedOEM) return false;\n        if (selectedModality && item.machineData.Modality !== selectedModality)\n          return false;\n        if (selectedClient && item.machineData.Client !== selectedClient)\n          return false;\n        if (selectedModel && item.machineData.Model !== selectedModel)\n          return false;\n      }\n\n      if (\n        select === \"Name\" &&\n        item.name.toLowerCase().includes(search.toLowerCase())\n      )\n        return true;\n      if (select === \"Date\") {\n        const [month, day, year] = item.date.split(\"/\");\n        const reformattedDate = `${year}-${month}-${day}`;\n        return reformattedDate === search;\n      }\n      if (select === \"Work Order\" && Number(item.wo) === Number(search))\n        return true;\n      if (select === \"Product Number\" && Number(item.pn) === Number(search))\n        return true;\n      if (\n        select === \"Description\" &&\n        item.desc.toLowerCase().includes(search.toLowerCase())\n      )\n        return true;\n      return false;\n    });\n    setInfo(temp);\n  }\n\n  // Sort items based on column\n  function sortCheckAll(pos) {\n    const sortedInfo = [...info].sort((a, b) => {\n      if (pos === 0 || pos === 5) {\n        return b[select].localeCompare(a[select]);\n      }\n      if (pos === 1) {\n        return Date.parse(b[select]) - Date.parse(a[select]);\n      }\n      return Number(b[select]) - Number(a[select]);\n    });\n    setInfo(sortedInfo);\n  }\n\n  // Row selection handler\n  const rowSelect = (id, name, pn) => {\n    setSelectedParent({ id, name, pn });\n    handleClose();\n  };\n\n  // Dropdown handlers\n  const [dropdown1Text, setDropdown1Text] = useState(\"Select Option\");\n  const [dropdown2Text, setDropdown2Text] = useState(\"Select Option\");\n\n  const handleSelect1 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown1Text(\"Select Option\");\n      setSelectedOEM(null);\n    } else {\n      setDropdown1Text(event.target.textContent);\n      setSelectedOEM(event.target.textContent);\n    }\n  };\n\n  const handleSelect2 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown2Text(\"Select Option\");\n      setSelectedModality(null);\n    } else {\n      setDropdown2Text(event.target.textContent);\n      setSelectedModality(event.target.textContent);\n    }\n  };\n\n  useEffect(() => {\n    searchFilter();\n  }, [selectedOEM, selectedModality, selectedClient, selectedModel, search]);\n\n  // Fetch clients and show modal\n  const handleClientClick = async () => {\n    console.log(\"clicked\");\n    const clientsData = await fetchClients(selectedOEM, selectedModality);\n    setClients(clientsData);\n    setClientSearchTerm(\"\"); // Reset search term\n    setShowClientModal(true);\n  };\n\n  // Client selection handler\n  const handleClientSelect = (clientName) => {\n    setClientButtonText(clientName || \"Select Option\");\n    setSelectedClient(clientName || null);\n    setShowClientModal(false);\n  };\n\n  // Client info handler\n  const handleClientInfo = (clientId, clientName) => {\n    console.log(`Client ID: ${clientId}, Client Name: ${clientName}`);\n  };\n\n  // Clear client selection handler\n  const handleClearClientSelection = () => {\n    setClientButtonText(\"Select Option\");\n    setSelectedClient(null);\n    setShowClientModal(false);\n    searchFilter();\n  };\n\n  // Fetch models and show modal\n  const handleModelClick = async () => {\n    const modelsData = await fetchModels(\n      selectedOEM,\n      selectedModality,\n      selectedClient\n    );\n    setModels(modelsData);\n    setModelSearchTerm(\"\"); // Reset search term\n    setShowModelModal(true);\n  };\n\n  // Model selection handler\n  const handleModelSelect = (modelName) => {\n    setModelButtonText(modelName || \"Select Option\");\n    setSelectedModel(modelName || null);\n    setShowModelModal(false);\n  };\n\n  // Clear model selection handler\n  const handleClearModelSelection = () => {\n    setModelButtonText(\"Select Option\");\n    setSelectedModel(null);\n    setShowModelModal(false);\n    searchFilter();\n  };\n\n  const handleWarehouseClick = () => {\n    setClientButtonText(CLIENT_WAREHOUSE);\n    setSelectedClient(CLIENT_WAREHOUSE);\n    searchFilter();\n  };\n\n  const handleUnassignedClick = () => {\n    setClientButtonText(CLIENT_UNASSIGNED);\n    setSelectedClient(CLIENT_UNASSIGNED);\n    searchFilter();\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Select Parent</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container\n          className=\"d-flex align-items-center justify-content-center\"\n          style={{ minHeight: \"80vh\" }}\n        >\n          <div className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\n            <Card>\n              <Card.Body>\n                <Row>\n                  <Col md={4}>\n                    {/* Dropdowns */}\n                    <div>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Text>OEM</InputGroup.Text>\n                        <Dropdown onSelect={handleSelect1}>\n                          <Dropdown.Toggle\n                            variant=\"outline-secondary\"\n                            id=\"dropdown-button-1\"\n                            className=\"w-100\"\n                          >\n                            {dropdown1Text}\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu className=\"w-100\">\n                            <Dropdown.Item eventKey=\"unassigned\">\n                              Select Option\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"GE\">GE</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"Toshiba\">\n                              Toshiba\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"Siemens\">\n                              Siemens\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"Philips\">\n                              Philips\n                            </Dropdown.Item>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup>\n\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Text>Modality</InputGroup.Text>\n                        <Dropdown onSelect={handleSelect2}>\n                          <Dropdown.Toggle\n                            variant=\"outline-secondary\"\n                            id=\"dropdown-button-2\"\n                            className=\"w-100\"\n                          >\n                            {dropdown2Text}\n                          </Dropdown.Toggle>\n                          <Dropdown.Menu className=\"w-100\">\n                            <Dropdown.Item eventKey=\"unassigned\">\n                              Select Option\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"CT\">CT</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"MRI\">MRI</Dropdown.Item>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </InputGroup>\n\n                      {/* Buttons */}\n                      <div>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroup.Text>Client</InputGroup.Text>\n                          <Button\n                            variant=\"outline-secondary\"\n                            className=\"w-100\"\n                            onClick={handleClientClick}\n                          >\n                            {clientButtonText}\n                          </Button>\n                        </InputGroup>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroup.Text>Client-2</InputGroup.Text>\n                          <Button\n                            variant=\"outline-secondary\"\n                            className=\"w-100\"\n                            disabled\n                          >\n                            Select Option\n                          </Button>\n                        </InputGroup>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroup.Text>Model</InputGroup.Text>\n                          <Button\n                            variant=\"outline-secondary\"\n                            className=\"w-100\"\n                            onClick={handleModelClick}\n                          >\n                            {modelButtonText}\n                          </Button>\n                        </InputGroup>\n                        {/* Divider */}\n                        <div className={styles.divider}></div>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroup.Text>Warehouse</InputGroup.Text>\n                          <div className={styles.buttonGroup}>\n                            <Button\n                              variant=\"outline-secondary\"\n                              className={styles.flexButton}\n                              onClick={handleWarehouseClick}\n                            >\n                              Warehouse\n                            </Button>\n                            <Button\n                              variant=\"outline-secondary\"\n                              className={styles.flexButton}\n                              onClick={handleUnassignedClick}\n                            >\n                              Unassigned\n                            </Button>\n                          </div>\n                        </InputGroup>\n                      </div>\n                    </div>\n                  </Col>\n\n                  <Col md={8}>\n                    <div className={styles.tableContainer}>\n                      <Table striped bordered hover size=\"sm\" className=\"mb-0\">\n                        <thead className={styles.stickyHeader}>\n                          <tr>\n                            <th onClick={() => sortCheckAll(0)}>Name</th>\n                            <th onClick={() => sortCheckAll(1)}>Date</th>\n                            <th onClick={() => sortCheckAll(2)}>Work Order</th>\n                            <th onClick={() => sortCheckAll(3)}>\n                              Product Number\n                            </th>\n                            <th onClick={() => sortCheckAll(4)}>\n                              Serial Number\n                            </th>\n                            <th>Select</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {info.map((item, index) => (\n                            <tr className=\"clickable-row\" key={index}>\n                              <td>{item.name}</td>\n                              <td>{formatDate(item.date)}</td>\n                              <td>\n                                {item.workOrders && item.workOrders.length > 0\n                                  ? item.workOrders[item.workOrders.length - 1]\n                                      .workOrder\n                                  : \"N/A\"}\n                              </td>\n                              <td>{item.pn}</td>\n                              <td>{item.sn}</td>\n                              <td>\n                                <Button\n                                  variant=\"primary\"\n                                  onClick={() =>\n                                    rowSelect(ids[index], item.name, item.pn)\n                                  }\n                                >\n                                  Select\n                                </Button>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                      <div className={styles.searchContainer}>\n                        <Form className=\"d-flex pb-2\">\n                          <FormControl\n                            type={showListSearch}\n                            placeholder=\"Search\"\n                            className=\"me-2 flex-grow-1\"\n                            aria-label=\"Search\"\n                            value={search}\n                            onChange={searchChangeHandler}\n                            style={{ flex: \"1\" }}\n                          />\n                          <NavDropdown\n                            title={select}\n                            id=\"collasible-nav-dropdown\"\n                            show={showList}\n                            onMouseEnter={() => setShowList(true)}\n                            onMouseLeave={() => setShowList(false)}\n                            style={{ marginTop: \"-5px\" }}\n                          >\n                            <NavDropdown.Item\n                              onClick={() =>\n                                setSelect(\"Name\") & setShowListSearch(\"text\")\n                              }\n                            >\n                              Name\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                              onClick={() =>\n                                setSelect(\"Date\") & setShowListSearch(\"date\")\n                              }\n                            >\n                              Date\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                              onClick={() =>\n                                setSelect(\"Work Order\") &\n                                setShowListSearch(\"number\")\n                              }\n                            >\n                              Work Order\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                              onClick={() =>\n                                setSelect(\"Product Number\") &\n                                setShowListSearch(\"number\")\n                              }\n                            >\n                              Product Number\n                            </NavDropdown.Item>\n                            <NavDropdown.Item\n                              onClick={() =>\n                                setSelect(\"Description\") &\n                                setShowListSearch(\"text\")\n                              }\n                            >\n                              Description\n                            </NavDropdown.Item>\n                          </NavDropdown>\n                          {/* <Button variant=\"info\" onClick={searchFilter}>\n                            Search\n                          </Button> */}\n                        </Form>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n          </div>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n      <Modal show={showClientModal} onHide={handleCloseClientModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Client</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={clientSearchTerm}\n            onChange={(e) => setClientSearchTerm(e.target.value)}\n          />\n          <ClientTable\n            clients={clients.filter((client) =>\n              client.name.toLowerCase().includes(clientSearchTerm.toLowerCase())\n            )}\n            disableInfo={true}\n            onSelectClient={handleClientSelect}\n            onInfoClick={handleClientInfo}\n            clearSelection={() => handleClientSelect(null)} // Clear selection handler\n          />\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showModelModal} onHide={handleCloseModelModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Model</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={modelSearchTerm}\n            onChange={(e) => setModelSearchTerm(e.target.value)}\n          />\n          <ModelTable\n            models={models.filter((model) =>\n              typeof model === \"string\"\n                ? model.toLowerCase().includes(modelSearchTerm.toLowerCase())\n                : false\n            )}\n            onSelectModel={handleModelSelect}\n            clearSelection={() => handleModelSelect(null)} // Clear selection handler\n          />\n        </Modal.Body>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default ParentModal;\n"]},"metadata":{},"sourceType":"module"}