{"ast":null,"code":"import _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\item\\\\[id]\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Row, Col, Modal, FormControl, Collapse, InputGroup, ButtonGroup } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useAuth } from \"../../../../context/AuthUserContext\";\nimport firebase from \"../../../../context/Firebase\";\nimport LoggedIn from \"../../../LoggedIn\";\nimport { useRouter } from \"next/router\";\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\nimport ClientTable from \"../../../../utils/ClientTable\";\nimport ClientInfoModal from \"../../ClientInfoModal\";\nimport ParentModal from \"../../AddItem/parentModal\";\nimport dynamic from \"next/dynamic\";\nimport InfoModal from \"../../InfoModal\";\nimport MachineSelectionModal from \"./MachineSelectionModal\";\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\nimport NewLocal from \"./NewLocal\"; //inflow API\n\nimport InflowAPI from \"../../../../utils/inflowAPI\"; // Import for SSR\n\n// === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\nfunction buildLocalLocObject(loc) {\n  var _loc$section, _loc$section2;\n\n  var o = {};\n  if (loc.region) o.region = loc.region;\n  if ((_loc$section = loc.section) !== null && _loc$section !== void 0 && _loc$section.letter && (_loc$section2 = loc.section) !== null && _loc$section2 !== void 0 && _loc$section2.number) o.section = loc.section; // pick up the new singular fields, too:\n\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\n  return o;\n} // This will only load the component on the client-side.\n\n\nvar BarcodeScannerComponent = dynamic(_c = function _c() {\n  return import(\"react-qr-barcode-scanner\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-qr-barcode-scanner\")];\n    },\n    modules: [\"NewSearch\\\\item\\\\[id]\\\\index.js -> \" + \"react-qr-barcode-scanner\"]\n  }\n}); // Simulates a network request delay.\n\n_c2 = BarcodeScannerComponent;\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n} // Custom LoadingButton component.\n\n\nfunction LoadingButton(_ref) {\n  _s();\n\n  var type = _ref.type,\n      name = _ref.name,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading) {\n      simulateNetworkRequest().then(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  var handleClick = function handleClick() {\n    return setLoading(true);\n  };\n\n  return __jsx(Link, {\n    href: \"/\".concat(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loading…\" : name));\n}\n\n_s(LoadingButton, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c3 = LoadingButton;\nexport var __N_SSP = true;\nexport default function DisplayItem(_ref2) {\n  _s2();\n\n  var _initialItem$price,\n      _initialItem$status,\n      _initialItem$length,\n      _initialItem$width,\n      _initialItem$height,\n      _initialItem$poNumber,\n      _initialItem$tracking,\n      _initialItem$visible,\n      _this = this,\n      _descriptions$selecte3,\n      _descriptions$selecte4,\n      _newLocalFrom$section,\n      _newLocalFrom$section2,\n      _newLocalCurrent$sect,\n      _newLocalCurrent$sect2;\n\n  var initialItem = _ref2.initialItem,\n      initialMachineData = _ref2.initialMachineData,\n      error = _ref2.error;\n  // Feature flag to show/hide the 3 Slack buttons\n  var SHOW_SLACK_BUTTONS = process.env.NEXT_PUBLIC_SHOW_SLACK_BUTTONS === \"true\";\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut; // const { id } = router.query;\n\n\n  var idFromRouter = router.query.id;\n  var initialId = (initialItem === null || initialItem === void 0 ? void 0 : initialItem.id) || idFromRouter; // Use a single local var everywhere in this component\n\n  var id = initialId;\n\n  var _useState2 = useState({\n    name: (initialItem === null || initialItem === void 0 ? void 0 : initialItem.name) || \"\",\n    pn: Array.isArray(initialItem === null || initialItem === void 0 ? void 0 : initialItem.pn) ? initialItem.pn : initialItem !== null && initialItem !== void 0 && initialItem.pn ? [initialItem.pn] : [],\n    sn: Array.isArray(initialItem === null || initialItem === void 0 ? void 0 : initialItem.sn) ? initialItem.sn : initialItem !== null && initialItem !== void 0 && initialItem.sn ? [initialItem.sn] : [],\n    // hydrate these from initialItem so SSR renders fully on deploy\n    price: (_initialItem$price = initialItem === null || initialItem === void 0 ? void 0 : initialItem.price) !== null && _initialItem$price !== void 0 ? _initialItem$price : \"\",\n    status: (_initialItem$status = initialItem === null || initialItem === void 0 ? void 0 : initialItem.status) !== null && _initialItem$status !== void 0 ? _initialItem$status : \"\",\n    length: (_initialItem$length = initialItem === null || initialItem === void 0 ? void 0 : initialItem.length) !== null && _initialItem$length !== void 0 ? _initialItem$length : \"\",\n    width: (_initialItem$width = initialItem === null || initialItem === void 0 ? void 0 : initialItem.width) !== null && _initialItem$width !== void 0 ? _initialItem$width : \"\",\n    height: (_initialItem$height = initialItem === null || initialItem === void 0 ? void 0 : initialItem.height) !== null && _initialItem$height !== void 0 ? _initialItem$height : \"\",\n    poNumber: (_initialItem$poNumber = initialItem === null || initialItem === void 0 ? void 0 : initialItem.poNumber) !== null && _initialItem$poNumber !== void 0 ? _initialItem$poNumber : \"\",\n    trackingNumber: (_initialItem$tracking = initialItem === null || initialItem === void 0 ? void 0 : initialItem.trackingNumber) !== null && _initialItem$tracking !== void 0 ? _initialItem$tracking : \"\",\n    localSN: (initialItem === null || initialItem === void 0 ? void 0 : initialItem.localSN) || \"\",\n    arrival_date: (initialItem === null || initialItem === void 0 ? void 0 : initialItem.arrival_date) || \"\",\n    visible: (_initialItem$visible = initialItem === null || initialItem === void 0 ? void 0 : initialItem.visible) !== null && _initialItem$visible !== void 0 ? _initialItem$visible : true\n  }),\n      items = _useState2[0],\n      setItems = _useState2[1]; // ⬇️ put this INSIDE DisplayItem, after the related useState hooks\n\n\n  useEffect(function () {\n    if (!initialItem) return;\n    setDescriptions(initialItem.descriptions || []);\n    setWorkOrders(initialItem.workOrders || []);\n    setDOM(initialItem.DOM || \"\");\n    setItems(function (prev) {\n      var _ref3, _initialItem$status2, _ref4, _initialItem$price2, _ref5, _initialItem$length2, _ref6, _initialItem$width2, _ref7, _initialItem$height2, _ref8, _initialItem$poNumber2, _ref9, _initialItem$tracking2;\n\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        // only overwrite if SSR provided a value; otherwise keep what you have\n        status: (_ref3 = (_initialItem$status2 = initialItem.status) !== null && _initialItem$status2 !== void 0 ? _initialItem$status2 : prev.status) !== null && _ref3 !== void 0 ? _ref3 : \"\",\n        price: (_ref4 = (_initialItem$price2 = initialItem.price) !== null && _initialItem$price2 !== void 0 ? _initialItem$price2 : prev.price) !== null && _ref4 !== void 0 ? _ref4 : \"\",\n        length: (_ref5 = (_initialItem$length2 = initialItem.length) !== null && _initialItem$length2 !== void 0 ? _initialItem$length2 : prev.length) !== null && _ref5 !== void 0 ? _ref5 : \"\",\n        width: (_ref6 = (_initialItem$width2 = initialItem.width) !== null && _initialItem$width2 !== void 0 ? _initialItem$width2 : prev.width) !== null && _ref6 !== void 0 ? _ref6 : \"\",\n        height: (_ref7 = (_initialItem$height2 = initialItem.height) !== null && _initialItem$height2 !== void 0 ? _initialItem$height2 : prev.height) !== null && _ref7 !== void 0 ? _ref7 : \"\",\n        poNumber: (_ref8 = (_initialItem$poNumber2 = initialItem.poNumber) !== null && _initialItem$poNumber2 !== void 0 ? _initialItem$poNumber2 : prev.poNumber) !== null && _ref8 !== void 0 ? _ref8 : \"\",\n        trackingNumber: (_ref9 = (_initialItem$tracking2 = initialItem.trackingNumber) !== null && _initialItem$tracking2 !== void 0 ? _initialItem$tracking2 : prev.trackingNumber) !== null && _ref9 !== void 0 ? _ref9 : \"\"\n      });\n    });\n  }, [initialItem]);\n\n  var _useState3 = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  }),\n      newLocalFrom = _useState3[0],\n      setNewLocalFrom = _useState3[1];\n\n  var _useState4 = useState({\n    region: \"\",\n    section: {\n      letter: \"\",\n      number: \"\"\n    },\n    bin: \"\",\n    pallet: \"\"\n  }),\n      newLocalCurrent = _useState4[0],\n      setNewLocalCurrent = _useState4[1]; // New states for separate client selections:\n\n\n  var _useState5 = useState(null),\n      selectedClientFrom = _useState5[0],\n      setSelectedClientFrom = _useState5[1];\n\n  var _useState6 = useState(null),\n      selectedClientCurrent = _useState6[0],\n      setSelectedClientCurrent = _useState6[1];\n\n  var _useState7 = useState(null),\n      selectedMachine = _useState7[0],\n      setSelectedMachine = _useState7[1];\n\n  var _useState8 = useState(null),\n      selectedCurrentMachine = _useState8[0],\n      setSelectedCurrentMachine = _useState8[1]; // whenever you pick a new “From” client or machine, clear the old From-loc:\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom, selectedMachine]);\n  // const didMountFrom = useRef(false);\n  // useEffect(() => {\n  //   if (!didMountFrom.current) {\n  //     // first time through (the data-load phase), don’t clear\n  //     didMountFrom.current = true;\n  //     return;\n  //   }\n  //   // thereafter, when the user picks a new client or machine, clear:\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  //   setLocalLocFrom(\"\");\n  // }, [selectedClientFrom, selectedMachine]);\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const [didFetch, setDidFetch] = useState(false);\n  // useEffect(() => {\n  //   if (!didFetch) {\n  //     // we’re in the data-load phase, skip clearing\n  //     setDidFetch(true);\n  //     return;\n  //   }\n  //   // only clear on subsequent user changes:\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // These arrays will be populated from Firebase.\n\n\n  var _useState9 = useState([]),\n      pnOptions = _useState9[0],\n      setPnOptions = _useState9[1];\n\n  var _useState10 = useState([]),\n      snOptions = _useState10[0],\n      setSnOptions = _useState10[1];\n\n  var _useState11 = useState([{\n    description: \"\",\n    date: \"\"\n  }]),\n      descriptions = _useState11[0],\n      setDescriptions = _useState11[1];\n\n  var _useState12 = useState([{\n    workOrder: \"\",\n    date: \"\"\n  }]),\n      workOrders = _useState12[0],\n      setWorkOrders = _useState12[1];\n\n  var _useState13 = useState([]),\n      clients = _useState13[0],\n      setClients = _useState13[1];\n\n  var _useState14 = useState([]),\n      photos = _useState14[0],\n      setPhotos = _useState14[1];\n\n  var _useState15 = useState(false),\n      show = _useState15[0],\n      setShow = _useState15[1];\n\n  var _useState16 = useState(false),\n      showErr = _useState16[0],\n      setShowErr = _useState16[1];\n\n  var _useState17 = useState(\"N/A\"),\n      Err = _useState17[0],\n      setErr = _useState17[1];\n\n  var _useState18 = useState(false),\n      showDescModal = _useState18[0],\n      setShowDescModal = _useState18[1];\n\n  var _useState19 = useState(false),\n      showWoModal = _useState19[0],\n      setShowWoModal = _useState19[1];\n\n  var _useState20 = useState(false),\n      showClientModal = _useState20[0],\n      setShowClientModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      showMachineModal = _useState21[0],\n      setShowMachineModal = _useState21[1];\n\n  var _useState22 = useState(false),\n      showParentModal = _useState22[0],\n      setShowParentModal = _useState22[1];\n\n  var _useState23 = useState(false),\n      showCameraModal = _useState23[0],\n      setShowCameraModal = _useState23[1];\n\n  var _useState24 = useState(false),\n      showSaveModal = _useState24[0],\n      setShowSaveModal = _useState24[1];\n\n  var _useState25 = useState(false),\n      showPrintModal = _useState25[0],\n      setShowPrintModal = _useState25[1];\n\n  var _useState26 = useState(false),\n      machineSelectionModal = _useState26[0],\n      setMachineSelectionModal = _useState26[1];\n\n  var _useState27 = useState(0),\n      selectedDesc = _useState27[0],\n      setSelectedDesc = _useState27[1];\n\n  var _useState28 = useState(null),\n      selectedClient = _useState28[0],\n      setSelectedClient = _useState28[1];\n\n  var _useState29 = useState(null),\n      selectedParent = _useState29[0],\n      setSelectedParent = _useState29[1];\n\n  var _useState30 = useState(null),\n      TheMachine = _useState30[0],\n      setTheMachine = _useState30[1];\n\n  var _useState31 = useState([]),\n      machineOptions = _useState31[0],\n      setMachineOptions = _useState31[1];\n\n  var _useState32 = useState(\"\"),\n      search = _useState32[0],\n      setSearch = _useState32[1];\n\n  var _useState33 = useState(null),\n      capturedPhoto = _useState33[0],\n      setCapturedPhoto = _useState33[1];\n\n  var _useState34 = useState(\"environment\"),\n      cameraFacing = _useState34[0],\n      setCameraFacing = _useState34[1];\n\n  var _useState35 = useState(false),\n      addToWebsite = _useState35[0],\n      setAddToWebsite = _useState35[1];\n\n  var _useState36 = useState(false),\n      machinePick = _useState36[0],\n      setMachinePick = _useState36[1];\n\n  var _useState37 = useState(0),\n      freqItem = _useState37[0],\n      setFreqItem = _useState37[1];\n\n  var _useState38 = useState(0),\n      usagePastYear = _useState38[0],\n      setUsagePastYear = _useState38[1];\n\n  var _useState39 = useState(0),\n      machineFrequency = _useState39[0],\n      setMachineFrequency = _useState39[1]; // State for the extra (dimensions/price/DOM/PO Number) section.\n\n\n  var _useState40 = useState(false),\n      showExtra = _useState40[0],\n      setShowExtra = _useState40[1]; // State for the local warehouse location inputs.\n\n\n  var _useState41 = useState(\"\"),\n      localLocFrom = _useState41[0],\n      setLocalLocFrom = _useState41[1];\n\n  var _useState42 = useState(\"\"),\n      localLocCurrent = _useState42[0],\n      setLocalLocCurrent = _useState42[1]; // New state for DOM (Date of Manufacture)\n\n\n  var _useState43 = useState(\"\"),\n      DOM = _useState43[0],\n      setDOM = _useState43[1]; // New state for OEM, Modality, and Model.\n\n\n  var _useState44 = useState(\"\"),\n      oem = _useState44[0],\n      setOem = _useState44[1];\n\n  var _useState45 = useState(\"\"),\n      modality = _useState45[0],\n      setModality = _useState45[1];\n\n  var _useState46 = useState(\"\"),\n      model = _useState46[0],\n      setModel = _useState46[1]; // More info modal state.\n\n\n  var _useState47 = useState(false),\n      showInfoModal = _useState47[0],\n      setShowInfoModal = _useState47[1];\n\n  var _useState48 = useState(\"\"),\n      itemName = _useState48[0],\n      setItemName = _useState48[1];\n\n  var _useState49 = useState(false),\n      machineFieldsInitialized = _useState49[0],\n      setMachineFieldsInitialized = _useState49[1]; // near the top of DisplayItem()\n\n\n  var _useState50 = useState(false),\n      showLocalModalFrom = _useState50[0],\n      setShowLocalModalFrom = _useState50[1];\n\n  var _useState51 = useState(false),\n      showLocalModalCurrent = _useState51[0],\n      setShowLocalModalCurrent = _useState51[1];\n\n  var openLocalModalFrom = function openLocalModalFrom() {\n    return setShowLocalModalFrom(true);\n  };\n\n  var closeLocalModalFrom = function closeLocalModalFrom() {\n    return setShowLocalModalFrom(false);\n  };\n\n  var openLocalModalCurrent = function openLocalModalCurrent() {\n    return setShowLocalModalCurrent(true);\n  };\n\n  var closeLocalModalCurrent = function closeLocalModalCurrent() {\n    return setShowLocalModalCurrent(false);\n  }; // at the top of DisplayItem()\n\n\n  var _useState52 = useState(false),\n      showNewLocalModalFrom = _useState52[0],\n      setShowNewLocalModalFrom = _useState52[1];\n\n  var _useState53 = useState(false),\n      showNewLocalModalCurrent = _useState53[0],\n      setShowNewLocalModalCurrent = _useState53[1];\n\n  function formatLoc(loc) {\n    var _loc$section3, _loc$section4;\n\n    if (!loc) return \"\";\n    var parts = [];\n    if (loc.region) parts.push(loc.region);\n    if ((_loc$section3 = loc.section) !== null && _loc$section3 !== void 0 && _loc$section3.letter && (_loc$section4 = loc.section) !== null && _loc$section4 !== void 0 && _loc$section4.number) parts.push(\"\".concat(loc.section.letter).concat(loc.section.number));\n    if (loc.bin) parts.push(\"B\".concat(loc.bin));\n    if (loc.pallet) parts.push(\"P\".concat(loc.pallet));\n    return parts.join(\"–\");\n  } // when the From-client changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientFrom]);\n  // // when the From-machine changes, clear any old local-loc\n  // useEffect(() => {\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedMachine]);\n  // same for Current:\n  // useEffect(() => {\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\n  // const handleSendToInflow = async () => {\n  //   try {\n  //     const name = items.name;\n  //     const description = descriptions[selectedDesc]?.description || \"\";\n  //     // gather every photo URL from Firebase Storage\n  //     const imageUrls = photos.map((p) => p.url);\n  //     await InflowAPI.upsertProduct({ name, description, imageUrls });\n  //     alert(\"Sent to inFlow successfully!\");\n  //   } catch (err) {\n  //     console.error(err);\n  //     alert(\"Error sending to inFlow: \" + err.message);\n  //   }\n  // };\n\n\n  var handleSendToInflow = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _descriptions$selecte, name, description, imageUrls, sku, toCSV, arrivalISO, pnStr, snStr, mostRecentWO, customFields, created;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              name = (items.name || '').trim();\n\n              if (name) {\n                _context.next = 5;\n                break;\n              }\n\n              alert('Item needs a name before sending to inFlow.');\n              return _context.abrupt(\"return\");\n\n            case 5:\n              // Regular description (don’t also send a custom “Description” unless you truly have one)\n              description = (((_descriptions$selecte = descriptions[selectedDesc]) === null || _descriptions$selecte === void 0 ? void 0 : _descriptions$selecte.description) || '').trim(); // Photos already fetched from storage\n\n              imageUrls = photos.map(function (p) {\n                return p.url;\n              }).filter(Boolean); // SKU = your item id\n\n              sku = (id !== null && id !== void 0 ? id : '').toString(); // Basic normalizers\n\n              toCSV = function toCSV(arr) {\n                return Array.isArray(arr) ? arr.filter(Boolean).join(', ') : arr || '';\n              }; // YYYY-MM-DD for the date field in inFlow\n\n\n              arrivalISO = items.arrival_date ? new Date(items.arrival_date).toISOString().slice(0, 10) : '';\n              pnStr = Array.isArray(items.pn) ? items.pn.filter(Boolean).join(', ') : items.pn || '';\n              snStr = Array.isArray(items.sn) ? items.sn.filter(Boolean).join(', ') : items.sn || ''; // Most recent WO (you already have this)\n\n              mostRecentWO = workOrders !== null && workOrders !== void 0 && workOrders.length ? workOrders.reduce(function (latest, cur) {\n                return new Date(cur.date) > new Date(latest.date) ? cur : latest;\n              }, workOrders[0]) : {\n                workOrder: '',\n                date: ''\n              }; // Build the numbered fields (match your inFlow “Field 1..10”)\n\n              customFields = {\n                custom1: (oem || '').trim(),\n                // OEM   (dropdown)\n                custom2: (modality || '').trim(),\n                // Modality (dropdown)\n                custom3: (model || '').trim(),\n                // Model (dropdown)\n                custom4: (description || '').trim(),\n                // Description (text) - optional duplicate\n                custom5: (mostRecentWO.workOrder || '').trim(),\n                // Work Order (text)\n                custom6: ((selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : selectedClientFrom.name) || '').trim(),\n                // From (text)\n                custom7: pnStr,\n                // Product Number (text)\n                custom8: snStr,\n                // Serial Number (text)\n                custom9: arrivalISO,\n                // Arrival Date (date)\n                custom10: ((selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : selectedClientCurrent.name) || '').trim() // Current (text)\n\n              };\n              console.log('[inFlow] customFields to send (numbered):', customFields);\n              _context.next = 17;\n              return InflowAPI.upsertProduct({\n                name: name,\n                description: description,\n                sku: sku,\n                imageUrls: imageUrls,\n                customFields: customFields\n              });\n\n            case 17:\n              created = _context.sent;\n              alert(\"Sent to inFlow successfully. ID: \".concat((created === null || created === void 0 ? void 0 : created.productId) || (created === null || created === void 0 ? void 0 : created.id) || '(unknown)'));\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              alert('Error sending to inFlow: ' + _context.t0.message);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 21]]);\n    }));\n\n    return function handleSendToInflow() {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // const [storedMachine, setStoredMachine] = useState(null);\n  // useEffect(() => {\n  //   // once any of these three change, re-merge:\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\n  //     const merged = updateMachineFields(\n  //       TheMachine,\n  //       selectedCurrentMachine,\n  //       selectedMachine\n  //     );\n  //     setOem(merged.oem);\n  //     setModality(merged.modality);\n  //     setModel(merged.model);\n  //   }\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\n  // whenever the “From” client changes:\n\n\n  useEffect(function () {\n    var _selectedClientFrom$n;\n\n    setShowLocalLocFrom((selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n = selectedClientFrom.name) === null || _selectedClientFrom$n === void 0 ? void 0 : _selectedClientFrom$n.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientFrom]); // whenever the “Current” client changes:\n\n  useEffect(function () {\n    var _selectedClientCurren;\n\n    setShowLocalLocCurrent((selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren = selectedClientCurrent.name) === null || _selectedClientCurren === void 0 ? void 0 : _selectedClientCurren.toLowerCase()) === \"socalwarehouse\");\n  }, [selectedClientCurrent]); // Fetch clients data.\n\n  useEffect(function () {\n    function fetchClientsData() {\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    function _fetchClientsData() {\n      _fetchClientsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var clientsData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetchClients();\n\n              case 3:\n                clientsData = _context2.sent;\n                console.log(clientsData);\n                setClients(clientsData);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Error fetching clients: \", _context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n      return _fetchClientsData.apply(this, arguments);\n    }\n\n    fetchClientsData();\n  }, []); // Fetch PN and SN options from Firebase.\n\n  useEffect(function () {\n    function fetchPnSn() {\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    function _fetchPnSn() {\n      _fetchPnSn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var db, snapshot, pnSet, snSet, pnArray, snArray;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                db = firebase.firestore();\n                _context3.next = 3;\n                return db.collection(\"Test\").get();\n\n              case 3:\n                snapshot = _context3.sent;\n                pnSet = new Set();\n                snSet = new Set();\n                snapshot.forEach(function (doc) {\n                  var data = doc.data();\n                  if (data.pn) pnSet.add(data.pn);\n                  if (data.sn) snSet.add(data.sn);\n                });\n                pnArray = _toConsumableArray(pnSet);\n                snArray = _toConsumableArray(snSet);\n                setPnOptions(pnArray);\n                setSnOptions(snArray);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _fetchPnSn.apply(this, arguments);\n    }\n\n    fetchPnSn();\n  }, []);\n  useEffect(function () {\n    if (id) fetchData(); // always hydrate on the client\n  }, [id]);\n\n  function resolveClientFromMachine(_x, _x2, _x3) {\n    return _resolveClientFromMachine.apply(this, arguments);\n  }\n\n  function _resolveClientFromMachine() {\n    _resolveClientFromMachine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(machineRef, setClient, setMachine) {\n      var isFrom,\n          machineDoc,\n          _machineData$name,\n          machineData,\n          clientDoc,\n          clientName,\n          isSocalInterior,\n          shouldShow,\n          _clientDoc2,\n          _args15 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              isFrom = _args15.length > 3 && _args15[3] !== undefined ? _args15[3] : true;\n              _context15.next = 3;\n              return machineRef.get();\n\n            case 3:\n              machineDoc = _context15.sent;\n\n              if (!machineDoc.exists) {\n                _context15.next = 24;\n                break;\n              }\n\n              machineData = machineDoc.data();\n              setMachine(_objectSpread({\n                id: machineDoc.id\n              }, machineData)); // Determine if the machine is \"interior socal\"\n              // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\n              // if (isSocalInterior) {\n              //   if (isFrom) {\n              //     setShowLocalLocFrom(true);\n              //   } else {\n              //     setShowLocalLocCurrent(true);\n              //   }\n              // } else {\n              // Optionally clear the flag if it is not \"interior socal\"\n              // if (isFrom) {\n              //   setShowLocalLocFrom(false);\n              // } else {\n              //   setShowLocalLocCurrent(false);\n              // }\n              // }\n              // new: fetch client name and combine both checks\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context15.next = 13;\n                break;\n              }\n\n              _context15.next = 10;\n              return machineData.client.get();\n\n            case 10:\n              _context15.t0 = _context15.sent;\n              _context15.next = 14;\n              break;\n\n            case 13:\n              _context15.t0 = null;\n\n            case 14:\n              clientDoc = _context15.t0;\n              clientName = clientDoc && clientDoc.exists ? clientDoc.data().name : null;\n              isSocalInterior = ((_machineData$name = machineData.name) === null || _machineData$name === void 0 ? void 0 : _machineData$name.toLowerCase()) === \"interior socal\";\n              shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\n\n              if (isFrom) {\n                setShowLocalLocFrom(shouldShow);\n              } else {\n                setShowLocalLocCurrent(shouldShow);\n              }\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context15.next = 24;\n                break;\n              }\n\n              _context15.next = 22;\n              return machineData.client.get();\n\n            case 22:\n              _clientDoc2 = _context15.sent;\n\n              if (_clientDoc2.exists) {\n                setClient(_objectSpread({\n                  id: _clientDoc2.id\n                }, _clientDoc2.data()));\n              }\n\n            case 24:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n    return _resolveClientFromMachine.apply(this, arguments);\n  }\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var id, db, doc, _machineFromData, _machineFromData$name, _machineCurrentData, _machineCurrentData$n, _selectedClientFrom$n2, _selectedClientCurren2, data, normalizedPN, normalizedSN, clientFromDoc, clientCurrentDoc, machineFromData, machineCurrentData, _doc, _doc2, nameFrom, nameCurrent, theMachineData, _theMachineData$oem, _theMachineData$modal, _theMachineData$model, OEM, Modality, Model, merged, parentDoc;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = (initialItem === null || initialItem === void 0 ? void 0 : initialItem.id) || idFromRouter; // <- make sure id exists here\n\n              db = firebase.firestore();\n              _context4.next = 4;\n              return db.collection(\"Test\").doc(id).get();\n\n            case 4:\n              doc = _context4.sent;\n\n              if (!doc.exists) {\n                _context4.next = 76;\n                break;\n              }\n\n              console.log(\"test\");\n              data = doc.data();\n              normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\n              normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\n              setItems(_objectSpread(_objectSpread({}, data), {}, {\n                pn: normalizedPN,\n                sn: normalizedSN\n              }));\n              setDescriptions(data.descriptions || []);\n              setWorkOrders(data.workOrders || []);\n              if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\n              if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\n\n              if (data.DOM) {\n                setDOM(data.DOM);\n              } // …after you do setItems, setDescriptions, etc.\n              // load the “newLocal” maps\n\n\n              if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\n              if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent); // Load PO Number if it exists.\n\n              if (data.poNumber) {\n                setItems(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    poNumber: data.poNumber\n                  });\n                });\n              }\n\n              if (!data.ClientFrom) {\n                _context4.next = 24;\n                break;\n              }\n\n              _context4.next = 22;\n              return data.ClientFrom.get();\n\n            case 22:\n              clientFromDoc = _context4.sent;\n\n              if (clientFromDoc.exists) {\n                setSelectedClientFrom(_objectSpread({\n                  id: clientFromDoc.id\n                }, clientFromDoc.data()));\n              }\n\n            case 24:\n              if (!data.ClientCurrent) {\n                _context4.next = 29;\n                break;\n              }\n\n              _context4.next = 27;\n              return data.ClientCurrent.get();\n\n            case 27:\n              clientCurrentDoc = _context4.sent;\n\n              if (clientCurrentDoc.exists) {\n                setSelectedClientCurrent(_objectSpread({\n                  id: clientCurrentDoc.id\n                }, clientCurrentDoc.data()));\n              }\n\n            case 29:\n              if (!(!data.ClientFrom && data.Machine && typeof data.Machine.get === \"function\")) {\n                _context4.next = 33;\n                break;\n              }\n\n              console.log(\"Entered resolveClientFromMachine for Machine (old style for From)\");\n              _context4.next = 33;\n              return resolveClientFromMachine(data.Machine, setSelectedClientFrom, setSelectedMachine, true);\n\n            case 33:\n              if (!(!data.ClientCurrent && data.CurrentMachine && typeof data.CurrentMachine.get === \"function\")) {\n                _context4.next = 37;\n                break;\n              }\n\n              console.log(\"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\");\n              _context4.next = 37;\n              return resolveClientFromMachine(data.CurrentMachine, setSelectedClientCurrent, setSelectedCurrentMachine, false);\n\n            case 37:\n              machineFromData = null;\n              machineCurrentData = null;\n\n              if (!data.MachineFrom) {\n                _context4.next = 45;\n                break;\n              }\n\n              _context4.next = 42;\n              return data.MachineFrom.get();\n\n            case 42:\n              _doc = _context4.sent;\n              machineFromData = _doc.exists ? _doc.data() : null;\n              setSelectedMachine(_objectSpread({\n                id: _doc.id\n              }, _doc.data()));\n\n            case 45:\n              if (!data.MachineCurrent) {\n                _context4.next = 51;\n                break;\n              }\n\n              _context4.next = 48;\n              return data.MachineCurrent.get();\n\n            case 48:\n              _doc2 = _context4.sent;\n              machineCurrentData = _doc2.exists ? _doc2.data() : null;\n              setSelectedCurrentMachine(_objectSpread({\n                id: _doc2.id\n              }, _doc2.data()));\n\n            case 51:\n              nameFrom = (_machineFromData = machineFromData) === null || _machineFromData === void 0 ? void 0 : (_machineFromData$name = _machineFromData.name) === null || _machineFromData$name === void 0 ? void 0 : _machineFromData$name.toLowerCase();\n              nameCurrent = (_machineCurrentData = machineCurrentData) === null || _machineCurrentData === void 0 ? void 0 : (_machineCurrentData$n = _machineCurrentData.name) === null || _machineCurrentData$n === void 0 ? void 0 : _machineCurrentData$n.toLowerCase(); // If the machine’s name is “interior socal”, show that branch:\n              // setShowLocalLocFrom(nameFrom === \"interior socal\");\n              // // Or if your Firestore already has a value for localLocFrom, show it anyway:\n              // if (data.localLocFrom) setShowLocalLocFrom(true);\n              // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\n              // if (data.localLocCurrent) setShowLocalLocCurrent(true);\n              // new: combine machine-name OR client-name check, keep existing-data\n\n              setShowLocalLocFrom(nameFrom === \"interior socal\" || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n2 = selectedClientFrom.name) === null || _selectedClientFrom$n2 === void 0 ? void 0 : _selectedClientFrom$n2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocFrom));\n              setShowLocalLocCurrent(nameCurrent === \"interior socal\" || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren2 = selectedClientCurrent.name) === null || _selectedClientCurren2 === void 0 ? void 0 : _selectedClientCurren2.toLowerCase()) === \"socalwarehouse\" || Boolean(data.localLocCurrent));\n              theMachineData = data.TheMachine || null;\n              setTheMachine(theMachineData);\n\n              if (theMachineData) {\n                // pull both variants, prefer lowercase if it exists\n                OEM = (_theMachineData$oem = theMachineData.oem) !== null && _theMachineData$oem !== void 0 ? _theMachineData$oem : theMachineData.OEM;\n                Modality = (_theMachineData$modal = theMachineData.modality) !== null && _theMachineData$modal !== void 0 ? _theMachineData$modal : theMachineData.Modality;\n                Model = (_theMachineData$model = theMachineData.model) !== null && _theMachineData$model !== void 0 ? _theMachineData$model : theMachineData.Model;\n                setTheMachine(_objectSpread(_objectSpread({}, theMachineData), {}, {\n                  OEM: OEM,\n                  Modality: Modality,\n                  Model: Model\n                }));\n              } // setStoredMachine(theMachineData);\n              // **right here** merge from the three sources you just fetched:\n\n\n              merged = updateMachineFields(theMachineData, machineCurrentData, machineFromData);\n              setOem(merged.oem);\n              setModality(merged.modality);\n              setModel(merged.model);\n              console.log(\"SelectedMachine:\", selectedMachine, \"SelectedCurrentMachine:\", selectedCurrentMachine); // Show local loc inputs if applicable\n              // if (\n              //   selectedMachine &&\n              //   selectedMachine.name &&\n              //   selectedMachine.name.toLowerCase() === \"interior socal\"\n              // ) {\n              //   setShowLocalLocFrom(true);\n              // }\n              // if (\n              //   selectedCurrentMachine &&\n              //   selectedCurrentMachine.name &&\n              //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\n              // ) {\n              //   setShowLocalLocCurrent(true);\n              // }\n\n              if (!data.Parent) {\n                _context4.next = 68;\n                break;\n              }\n\n              _context4.next = 66;\n              return data.Parent.get();\n\n            case 66:\n              parentDoc = _context4.sent;\n              setSelectedParent(_objectSpread({\n                id: parentDoc.id\n              }, parentDoc.data()));\n\n            case 68:\n              _context4.next = 70;\n              return fetchPhotos(id);\n\n            case 70:\n              _context4.next = 72;\n              return checkIfAddedToWebsite(id);\n\n            case 72:\n              _context4.next = 74;\n              return calculateItemFrequencyAndUsage(data.pn);\n\n            case 74:\n              _context4.next = 77;\n              break;\n\n            case 76:\n              router.push({\n                pathname: \"../AddItem/NewItem\",\n                query: {\n                  signal: id\n                }\n              });\n\n            case 77:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchData() {\n      return _ref11.apply(this, arguments);\n    };\n  }(); // Returns the value for a given field from the highest-priority source.\n\n\n  function getPriorityMachineField(field, theMachine, currentMachine, fromMachine) {\n    console.log(\"the machine: \", theMachine, \"field: \", field);\n\n    if (theMachine && theMachine[field] && theMachine[field] !== \"N/A\" && theMachine[field].trim() !== \"\") {\n      return theMachine[field];\n    }\n\n    if (currentMachine && currentMachine[field] && currentMachine[field] !== \"N/A\" && currentMachine[field].trim() !== \"\") {\n      return currentMachine[field];\n    }\n\n    if (fromMachine && fromMachine[field] && fromMachine[field] !== \"N/A\" && fromMachine[field].trim() !== \"\") {\n      return fromMachine[field];\n    }\n\n    return \"\";\n  } // Returns an object with updated OEM, modality, and model fields.\n\n\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\n    return {\n      oem: getPriorityMachineField(\"OEM\", theMachine, currentMachine, fromMachine),\n      modality: getPriorityMachineField(\"Modality\", theMachine, currentMachine, fromMachine),\n      model: getPriorityMachineField(\"Model\", theMachine, currentMachine, fromMachine)\n    };\n  }\n\n  var calculateItemFrequencyAndUsage = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(pn) {\n      var db, currentDate, oneYearAgo, normalizedPN, itemsSnapshot, usagePastYear;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db = firebase.firestore();\n              currentDate = new Date();\n              oneYearAgo = new Date();\n              oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\n              normalizedPN = pn !== undefined ? pn : \"\";\n              _context5.next = 7;\n              return db.collection(\"Test\").where(\"pn\", \"==\", normalizedPN).get();\n\n            case 7:\n              itemsSnapshot = _context5.sent;\n              setFreqItem(itemsSnapshot.size);\n              usagePastYear = 0;\n              itemsSnapshot.forEach(function (doc) {\n                var itemData = doc.data();\n                itemData.workOrders.forEach(function (workOrder) {\n                  var workOrderDate = new Date(workOrder.date);\n\n                  if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\n                    usagePastYear++;\n                  }\n                });\n              });\n              setUsagePastYear(usagePastYear);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function calculateItemFrequencyAndUsage(_x4) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var fetchMachine = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(machineId) {\n      var db, doc, machineData, merged, machinesSnapshot;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              db = firebase.firestore();\n              _context6.next = 3;\n              return db.collection(\"Machine\").doc(machineId).get();\n\n            case 3:\n              doc = _context6.sent;\n\n              if (!doc.exists) {\n                _context6.next = 17;\n                break;\n              }\n\n              machineData = doc.data();\n              setTheMachine(machineData); // re-merge all three sources with correct priority:\n\n              merged = updateMachineFields(machineData, selectedCurrentMachine, selectedMachine);\n              setOem(merged.oem);\n              setModality(merged.modality);\n              setModel(merged.model);\n              _context6.next = 13;\n              return db.collection(\"Machine\").where(\"Model\", \"==\", machineData.Model || machineData.model).get();\n\n            case 13:\n              machinesSnapshot = _context6.sent;\n              setMachineFrequency(machinesSnapshot.size);\n              _context6.next = 18;\n              break;\n\n            case 17:\n              console.error(\"Machine not found\");\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function fetchMachine(_x5) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var fetchPhotos = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(docID) {\n      var storageRef, listRef, res, urls;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              listRef = storageRef.child(\"Parts/\".concat(docID));\n              _context7.prev = 2;\n              _context7.next = 5;\n              return listRef.listAll();\n\n            case 5:\n              res = _context7.sent;\n              _context7.next = 8;\n              return Promise.all(res.items.map(function (item) {\n                return item.getDownloadURL();\n              }));\n\n            case 8:\n              urls = _context7.sent;\n              console.log(\"Fetched photo URLs:\", urls);\n              setPhotos(urls.map(function (url) {\n                return {\n                  url: url,\n                  file: null\n                };\n              }));\n              _context7.next = 16;\n              break;\n\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.error(\"Error fetching photos: \", _context7.t0);\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 13]]);\n    }));\n\n    return function fetchPhotos(_x6) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var checkIfAddedToWebsite = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(docID) {\n      var db, partsDoc;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db = firebase.firestore();\n              _context8.next = 3;\n              return db.collection(\"Parts\").doc(docID).get();\n\n            case 3:\n              partsDoc = _context8.sent;\n\n              if (partsDoc.exists) {\n                setAddToWebsite(true);\n              }\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function checkIfAddedToWebsite(_x7) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleCloseErr = function handleCloseErr() {\n    return setShowErr(false);\n  };\n\n  var handleShowErr = function handleShowErr() {\n    return setShowErr(true);\n  };\n\n  var handleCloseSaveModal = function handleCloseSaveModal() {\n    return setShowSaveModal(false);\n  };\n\n  var handleClosePrintModal = function handleClosePrintModal() {\n    return setShowPrintModal(false);\n  };\n\n  var handleShowSaveModal = function handleShowSaveModal() {\n    return setShowSaveModal(true);\n  };\n\n  var handleShowPrintModal = function handleShowPrintModal() {\n    return setShowPrintModal(true);\n  };\n\n  var handleMachineSelectionModal = function handleMachineSelectionModal() {\n    return setMachineSelectionModal(false);\n  };\n\n  var handleCloseDescModal = function handleCloseDescModal() {\n    return setShowDescModal(false);\n  };\n\n  var handleShowDescModal = function handleShowDescModal() {\n    return setShowDescModal(true);\n  };\n\n  var handleCloseWoModal = function handleCloseWoModal() {\n    return setShowWoModal(false);\n  };\n\n  var handleShowWoModal = function handleShowWoModal() {\n    return setShowWoModal(true);\n  };\n\n  var handleCloseClientModal = function handleCloseClientModal() {\n    return setShowClientModal(false);\n  };\n\n  var handleShowClientModal = function handleShowClientModal() {\n    return setShowClientModal(true);\n  };\n\n  var handleCloseMachineModal = function handleCloseMachineModal() {\n    return setShowMachineModal(false);\n  };\n\n  var handleShowMachineModal = function handleShowMachineModal() {\n    setShowMachineModal(true);\n    setShowClientModal(false);\n  };\n\n  var handleCloseParentModal = function handleCloseParentModal() {\n    return setShowParentModal(false);\n  };\n\n  var handleShowParentModal = function handleShowParentModal() {\n    return setShowParentModal(true);\n  }; // When a client is selected from the client table.\n\n\n  var handleClientInfo = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(clientId) {\n      var db, clientDoc, clientData, machinePromises, machineDocs, machines;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              // Clear any previously selected machine and local loc info for this branch.\n              if (machinePick) {\n                setSelectedMachine(null);\n                setShowLocalLocFrom(false);\n              } else {\n                setSelectedCurrentMachine(null);\n                setShowLocalLocCurrent(false);\n              }\n\n              db = firebase.firestore();\n              _context9.next = 4;\n              return db.collection(\"Client\").doc(clientId).get();\n\n            case 4:\n              clientDoc = _context9.sent;\n\n              if (!clientDoc.exists) {\n                _context9.next = 16;\n                break;\n              }\n\n              clientData = _objectSpread({\n                id: clientDoc.id\n              }, clientDoc.data());\n\n              if (machinePick) {\n                setSelectedClientFrom(clientData);\n              } else {\n                setSelectedClientCurrent(clientData);\n              } // after setting selectedClientFrom/Current:\n\n\n              if (clientData.name === \"SoCalWarehouse\") {\n                if (machinePick) setShowLocalLocFrom(true);else setShowLocalLocCurrent(true);\n              } // Fetch machines for this client:\n\n\n              machinePromises = clientData.machines.map(function (machineRef) {\n                return machineRef.get();\n              });\n              _context9.next = 12;\n              return Promise.all(machinePromises);\n\n            case 12:\n              machineDocs = _context9.sent;\n              machines = machineDocs.map(function (machineDoc) {\n                return _objectSpread({\n                  id: machineDoc.id\n                }, machineDoc.data());\n              });\n              setMachineOptions(machines); // Close the client modal\n\n              handleCloseClientModal();\n\n            case 16:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function handleClientInfo(_x8) {\n      return _ref16.apply(this, arguments);\n    };\n  }(); // Reordering function for dropdowns.\n\n\n  var reorderArray = function reorderArray(arr, selectedValue) {\n    var newArr = arr.filter(function (val) {\n      return val !== selectedValue;\n    });\n    return [selectedValue].concat(_toConsumableArray(newArr));\n  };\n\n  var _useState54 = useState(false),\n      addingNewPn = _useState54[0],\n      setAddingNewPn = _useState54[1];\n\n  var _useState55 = useState(\"\"),\n      newPn = _useState55[0],\n      setNewPn = _useState55[1];\n\n  var _useState56 = useState(false),\n      addingNewSn = _useState56[0],\n      setAddingNewSn = _useState56[1];\n\n  var _useState57 = useState(\"\"),\n      newSn = _useState57[0],\n      setNewSn = _useState57[1];\n\n  var handlePnSelect = function handlePnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedPn = Array.isArray(prev.pn) ? _toConsumableArray(prev.pn) : [];\n      updatedPn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: updatedPn\n      });\n    });\n  };\n\n  var handleSnSelect = function handleSnSelect(e) {\n    var selected = e.target.value;\n    setItems(function (prev) {\n      var updatedSn = Array.isArray(prev.sn) ? _toConsumableArray(prev.sn) : [];\n      updatedSn[0] = selected;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: updatedSn\n      });\n    });\n  };\n\n  var handleAddNewPn = function handleAddNewPn() {\n    if (newPn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          pn: [].concat(_toConsumableArray(prev.pn), [newPn.trim()])\n        });\n      });\n    }\n\n    setNewPn(\"\");\n    setAddingNewPn(false);\n  };\n\n  var handleAddNewSn = function handleAddNewSn() {\n    if (newSn.trim() !== \"\") {\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          sn: [].concat(_toConsumableArray(prev.sn), [newSn.trim()])\n        });\n      });\n    }\n\n    setNewSn(\"\");\n    setAddingNewSn(false);\n  }; // Generate custom document ID if needed.\n\n\n  var generateCustomID = function generateCustomID() {\n    var randomNum = Math.floor(10000 + Math.random() * 90000);\n    return \"AIS\".concat(randomNum);\n  };\n\n  function shallowClean(obj) {\n    var newObj = {};\n\n    for (var key in obj) {\n      console.log(key, obj[key]);\n\n      if (obj.hasOwnProperty(key)) {\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\n      }\n    }\n\n    return newObj;\n  }\n\n  function toSend() {\n    return _toSend.apply(this, arguments);\n  } // Additional state for local warehouse location inputs.\n\n\n  function _toSend() {\n    _toSend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      var _fromDetails$section, _fromDetails$section2, _currentDetails$secti, _currentDetails$secti2;\n\n      var db, currentUser, userEmail, machineData, formattedItems, fromDetails, currentDetails, docId, newDocId, machineRef, machineDoc, currentMachineRef, currentMachineDoc, cleanFormattedItems, _machineRef, _machineDoc, _currentMachineRef, _currentMachineDoc, _machineRef2, _machineDoc2, _currentMachineRef2, _currentMachineDoc2;\n\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              db = firebase.firestore();\n              currentUser = firebase.auth().currentUser;\n              userEmail = currentUser ? currentUser.email : \"unknown\"; // Always use the current state values for OEM, modality, and model.\n\n              machineData = _objectSpread(_objectSpread({}, TheMachine || {}), {}, {\n                oem: oem,\n                modality: modality,\n                model: model\n              });\n              formattedItems = _objectSpread(_objectSpread({}, items), {}, {\n                descriptions: descriptions,\n                workOrders: workOrders\n              }); // Remove any unused fields.\n\n              formattedItems.status = items.status || \"\";\n              formattedItems.DOM = DOM; // Date of Manufacture\n\n              formattedItems.localLocFrom = localLocFrom || \"\";\n              formattedItems.localLocCurrent = localLocCurrent || \"\";\n              formattedItems.date = items.date || \"\";\n              formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\n\n              formattedItems.poNumber = items.poNumber || \"\";\n              formattedItems.trackingNumber = items.trackingNumber || \"\";\n              formattedItems.TheMachine = machineData || {};\n              formattedItems.addedToWebsite = addToWebsite; // NEW: Add the user's email under the field \"user\"\n\n              formattedItems.lastEdited = userEmail; // Clean pn and sn arrays to replace undefined values with an empty string.\n\n              formattedItems.pn = (items.pn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              });\n              formattedItems.sn = (items.sn || []).map(function (value) {\n                return value === undefined ? \"\" : value;\n              });\n              fromDetails = buildLocalLocObject(newLocalFrom);\n              currentDetails = buildLocalLocObject(newLocalCurrent);\n              console.log(\"From Details: \" + fromDetails.region + \" \" + ((_fromDetails$section = fromDetails.section) === null || _fromDetails$section === void 0 ? void 0 : _fromDetails$section.letter) + ((_fromDetails$section2 = fromDetails.section) === null || _fromDetails$section2 === void 0 ? void 0 : _fromDetails$section2.number) + \" \" + fromDetails.bin + \" \" + fromDetails.pallet);\n              console.log(\"Current Details: \" + currentDetails.region + \" \" + ((_currentDetails$secti = currentDetails.section) === null || _currentDetails$secti === void 0 ? void 0 : _currentDetails$secti.letter) + ((_currentDetails$secti2 = currentDetails.section) === null || _currentDetails$secti2 === void 0 ? void 0 : _currentDetails$secti2.number) + \" \" + currentDetails.bin + \" \" + currentDetails.pallet);\n\n              if (Object.keys(fromDetails).length) {\n                formattedItems.newLocalFrom = fromDetails;\n                formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\n              } else {\n                // all fields empty — force an empty string and remove any stray map\n                console.log(\"entered empty fromDetails else\");\n                formattedItems.localLocFrom = \"\";\n                formattedItems.newLocalFrom = {};\n              }\n\n              if (Object.keys(currentDetails).length) {\n                formattedItems.newLocalCurrent = currentDetails;\n                formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\n              } else {\n                // all fields empty — force an empty string and remove any stray map\n                formattedItems.localLocCurrent = \"\";\n                formattedItems.newLocalCurrent = {};\n              }\n\n              if (selectedMachine && selectedMachine.id) {\n                formattedItems.MachineFrom = db.collection(\"Machine\").doc(selectedMachine.id);\n              }\n\n              if (selectedCurrentMachine && selectedCurrentMachine.id) {\n                formattedItems.MachineCurrent = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              }\n\n              if (selectedParent && selectedParent.id) {\n                formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\n              } // NEW: Set separate client references.\n\n\n              if (selectedClientFrom && selectedClientFrom.id) {\n                formattedItems.ClientFrom = db.collection(\"Client\").doc(selectedClientFrom.id);\n              }\n\n              if (selectedClientCurrent && selectedClientCurrent.id) {\n                formattedItems.ClientCurrent = db.collection(\"Client\").doc(selectedClientCurrent.id);\n              } // Only attach the richer “newLocal” map when the user actually filled something in\n\n\n              if (Object.keys(fromDetails).length) {\n                formattedItems.newLocalFrom = fromDetails;\n              }\n\n              if (Object.keys(currentDetails).length) {\n                formattedItems.newLocalCurrent = currentDetails;\n              }\n\n              docId = id;\n              _context16.prev = 32;\n\n              if (!docId) {\n                _context16.next = 80;\n                break;\n              }\n\n              // Check if a localSN is provided and if it differs from the current docId.\n              newDocId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : docId;\n\n              if (!(docId !== newDocId)) {\n                _context16.next = 59;\n                break;\n              }\n\n              _context16.next = 38;\n              return db.collection(\"Test\").doc(newDocId).set(formattedItems);\n\n            case 38:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context16.next = 46;\n                break;\n              }\n\n              machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context16.next = 42;\n              return machineRef.get();\n\n            case 42:\n              machineDoc = _context16.sent;\n\n              if (!machineDoc.exists) {\n                _context16.next = 46;\n                break;\n              }\n\n              _context16.next = 46;\n              return machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 46:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context16.next = 54;\n                break;\n              }\n\n              currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context16.next = 50;\n              return currentMachineRef.get();\n\n            case 50:\n              currentMachineDoc = _context16.sent;\n\n              if (!currentMachineDoc.exists) {\n                _context16.next = 54;\n                break;\n              }\n\n              _context16.next = 54;\n              return currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(newDocId))\n              });\n\n            case 54:\n              _context16.next = 56;\n              return db.collection(\"Test\").doc(docId)[\"delete\"]();\n\n            case 56:\n              // Set docId to the new document ID.\n              docId = newDocId;\n              _context16.next = 78;\n              break;\n\n            case 59:\n              // Deep-clean the formattedItems to remove any undefined nested values.\n              cleanFormattedItems = shallowClean(formattedItems);\n              _context16.next = 62;\n              return db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\n\n            case 62:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context16.next = 70;\n                break;\n              }\n\n              _machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context16.next = 66;\n              return _machineRef.get();\n\n            case 66:\n              _machineDoc = _context16.sent;\n\n              if (!_machineDoc.exists) {\n                _context16.next = 70;\n                break;\n              }\n\n              _context16.next = 70;\n              return _machineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 70:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context16.next = 78;\n                break;\n              }\n\n              _currentMachineRef = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context16.next = 74;\n              return _currentMachineRef.get();\n\n            case 74:\n              _currentMachineDoc = _context16.sent;\n\n              if (!_currentMachineDoc.exists) {\n                _context16.next = 78;\n                break;\n              }\n\n              _context16.next = 78;\n              return _currentMachineRef.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 78:\n              _context16.next = 99;\n              break;\n\n            case 80:\n              // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\n              docId = items.localSN && items.localSN.trim() !== \"\" ? items.localSN.trim() : generateCustomID();\n              _context16.next = 83;\n              return db.collection(\"Test\").doc(docId).set(formattedItems);\n\n            case 83:\n              if (!(selectedMachine && selectedMachine.id)) {\n                _context16.next = 91;\n                break;\n              }\n\n              _machineRef2 = db.collection(\"Machine\").doc(selectedMachine.id);\n              _context16.next = 87;\n              return _machineRef2.get();\n\n            case 87:\n              _machineDoc2 = _context16.sent;\n\n              if (!_machineDoc2.exists) {\n                _context16.next = 91;\n                break;\n              }\n\n              _context16.next = 91;\n              return _machineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 91:\n              if (!(selectedCurrentMachine && selectedCurrentMachine.id)) {\n                _context16.next = 99;\n                break;\n              }\n\n              _currentMachineRef2 = db.collection(\"Machine\").doc(selectedCurrentMachine.id);\n              _context16.next = 95;\n              return _currentMachineRef2.get();\n\n            case 95:\n              _currentMachineDoc2 = _context16.sent;\n\n              if (!_currentMachineDoc2.exists) {\n                _context16.next = 99;\n                break;\n              }\n\n              _context16.next = 99;\n              return _currentMachineRef2.update({\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(db.collection(\"Test\").doc(docId))\n              });\n\n            case 99:\n              _context16.next = 101;\n              return uploadPhotos(docId);\n\n            case 101:\n              console.log(\"Item saved and associatedParts updated!\"); // Redirect to the new URL using the new document id.\n\n              router.push(\"/NewSearch/item/\".concat(docId)); // Optionally, you can also show a save confirmation modal:\n\n              handleShowSaveModal();\n              _context16.next = 109;\n              break;\n\n            case 106:\n              _context16.prev = 106;\n              _context16.t0 = _context16[\"catch\"](32);\n              console.error(\"Error saving data:\", _context16.t0);\n\n            case 109:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[32, 106]]);\n    }));\n    return _toSend.apply(this, arguments);\n  }\n\n  var _useState58 = useState(false),\n      showLocalLocFrom = _useState58[0],\n      setShowLocalLocFrom = _useState58[1];\n\n  var _useState59 = useState(false),\n      showLocalLocCurrent = _useState59[0],\n      setShowLocalLocCurrent = _useState59[1]; // When a machine is selected from the modal.\n\n\n  var handleSetSelectedMachine = function handleSetSelectedMachine(machine) {\n    var _machine$name;\n\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\n    var isSocalInterior = ((_machine$name = machine.name) === null || _machine$name === void 0 ? void 0 : _machine$name.toLowerCase()) === \"interior socal\";\n\n    if (machinePick) {\n      var _selectedClientFrom$n3;\n\n      setSelectedMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocFrom(isSocalInterior || (selectedClientFrom === null || selectedClientFrom === void 0 ? void 0 : (_selectedClientFrom$n3 = selectedClientFrom.name) === null || _selectedClientFrom$n3 === void 0 ? void 0 : _selectedClientFrom$n3.toLowerCase()) === \"socalwarehouse\");\n    } else {\n      var _selectedClientCurren3;\n\n      setSelectedCurrentMachine({\n        id: machine.id,\n        name: machine.name\n      });\n      setShowLocalLocCurrent(isSocalInterior || (selectedClientCurrent === null || selectedClientCurrent === void 0 ? void 0 : (_selectedClientCurren3 = selectedClientCurrent.name) === null || _selectedClientCurren3 === void 0 ? void 0 : _selectedClientCurren3.toLowerCase()) === \"socalwarehouse\");\n    }\n\n    fetchMachine(machine.id); // Close the machine modal (assuming you're using showMachineModal to control it)\n\n    setShowMachineModal(false);\n  };\n\n  var uploadPhotos = /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(docID) {\n      var storageRef, i, photoRef, metadata, url;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              i = 0;\n\n            case 2:\n              if (!(i < photos.length)) {\n                _context10.next = 15;\n                break;\n              }\n\n              if (!photos[i].file) {\n                _context10.next = 12;\n                break;\n              }\n\n              photoRef = storageRef.child(\"Parts/\".concat(docID, \"/\").concat(docID).concat(i === 0 ? \".jpg\" : \".\".concat(i + 1, \".jpg\")));\n              metadata = {\n                contentType: \"image/png\"\n              };\n              _context10.next = 8;\n              return photoRef.put(photos[i].file, metadata);\n\n            case 8:\n              _context10.next = 10;\n              return photoRef.getDownloadURL();\n\n            case 10:\n              url = _context10.sent;\n              photos[i].url = url;\n\n            case 12:\n              i++;\n              _context10.next = 2;\n              break;\n\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function uploadPhotos(_x9) {\n      return _ref17.apply(this, arguments);\n    };\n  }(); // Function to handle printing the label.\n\n\n  var handlePrint = /*#__PURE__*/function () {\n    var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var clientName, machineDoc, machineData, clientDoc, _clientDoc, payload, response, result;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (items.name) {\n                _context11.next = 3;\n                break;\n              }\n\n              alert(\"Missing name\");\n              return _context11.abrupt(\"return\");\n\n            case 3:\n              clientName = \"\"; // Attempt to fetch client name from the Machine document reference.\n\n              if (!(items.Machine && typeof items.Machine.get === \"function\")) {\n                _context11.next = 23;\n                break;\n              }\n\n              _context11.prev = 5;\n              _context11.next = 8;\n              return items.Machine.get();\n\n            case 8:\n              machineDoc = _context11.sent;\n\n              if (!machineDoc.exists) {\n                _context11.next = 16;\n                break;\n              }\n\n              machineData = machineDoc.data();\n\n              if (!(machineData.client && typeof machineData.client.get === \"function\")) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 14;\n              return machineData.client.get();\n\n            case 14:\n              clientDoc = _context11.sent;\n\n              if (clientDoc.exists) {\n                clientName = clientDoc.data().name || \"\";\n              }\n\n            case 16:\n              _context11.next = 21;\n              break;\n\n            case 18:\n              _context11.prev = 18;\n              _context11.t0 = _context11[\"catch\"](5);\n              console.error(\"Error fetching machine or client:\", _context11.t0);\n\n            case 21:\n              _context11.next = 24;\n              break;\n\n            case 23:\n              console.warn(\"No Machine reference available in the item\");\n\n            case 24:\n              console.log(clientName, \":\", items.client); // Fallback: if no client name was found, check items.client.\n\n              if (!(!clientName && items.client)) {\n                _context11.next = 40;\n                break;\n              }\n\n              if (!(typeof items.client.get === \"function\")) {\n                _context11.next = 39;\n                break;\n              }\n\n              _context11.prev = 27;\n              _context11.next = 30;\n              return items.client.get();\n\n            case 30:\n              _clientDoc = _context11.sent;\n\n              if (_clientDoc.exists) {\n                clientName = _clientDoc.data().name || \"\";\n              }\n\n              _context11.next = 37;\n              break;\n\n            case 34:\n              _context11.prev = 34;\n              _context11.t1 = _context11[\"catch\"](27);\n              console.error(\"Error fetching client from items.client:\", _context11.t1);\n\n            case 37:\n              _context11.next = 40;\n              break;\n\n            case 39:\n              clientName = items.client;\n\n            case 40:\n              console.log(\"descriptions:\", descriptions[selectedDesc]);\n              payload = {\n                name: items.name,\n                pn: items.pn,\n                sn: items.sn,\n                wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\n                client: clientName,\n                status: items.status,\n                local_sn: id,\n                descriptions: [descriptions[selectedDesc] || {\n                  description: \"\",\n                  date: \"\"\n                }],\n                date: items.dateCreated || \"\",\n                DOM: DOM,\n                oem: oem,\n                modality: modality,\n                model: model,\n                poNumber: items.poNumber,\n                arrival_date: items.arrival_date // NEW: Include arrival_date\n\n              };\n              console.log(\"Payload for printing:\", payload);\n              _context11.prev = 43;\n              _context11.next = 46;\n              return fetch(\"https://9d70-174-76-22-138.ngrok-free.app/print-label\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n              });\n\n            case 46:\n              response = _context11.sent;\n              _context11.next = 49;\n              return response.json();\n\n            case 49:\n              result = _context11.sent;\n              console.log(\"Print result:\", result.status);\n\n              if (result.status.includes(\"successfully.\")) {\n                handleShowPrintModal();\n              } else {\n                console.error(\"Error printing label:\", result.error);\n              }\n\n              _context11.next = 57;\n              break;\n\n            case 54:\n              _context11.prev = 54;\n              _context11.t2 = _context11[\"catch\"](43);\n              console.error(\"Error printing label:\", _context11.t2);\n\n            case 57:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[5, 18], [27, 34], [43, 54]]);\n    }));\n\n    return function handlePrint() {\n      return _ref18.apply(this, arguments);\n    };\n  }();\n\n  function handleSubmit(_x10) {\n    return _handleSubmit.apply(this, arguments);\n  } // Handlers for input changes.\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(event) {\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              event.preventDefault(); // Only check that the Name field is filled out.\n\n              if (!items.name) {\n                handleShow(); // This shows the \"missing field\" modal.\n              } else {\n                toSend();\n              }\n\n            case 2:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var handleChange = function handleChange(field) {\n    return function (event) {\n      var value = event.target ? event.target.value : event.value;\n      setItems(function (prevItems) {\n        return _objectSpread(_objectSpread({}, prevItems), {}, _defineProperty({}, field, value));\n      });\n    };\n  };\n\n  var addDescription = function addDescription() {\n    setDescriptions([].concat(_toConsumableArray(descriptions), [{\n      description: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeDescription = function removeDescription(index) {\n    setDescriptions(descriptions.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(index, field, value) {\n    var newDescriptions = descriptions.map(function (desc, i) {\n      return i === index ? _objectSpread(_objectSpread({}, desc), {}, _defineProperty({}, field, value)) : desc;\n    });\n    setDescriptions(newDescriptions);\n  };\n\n  var addWorkOrder = function addWorkOrder() {\n    setWorkOrders([].concat(_toConsumableArray(workOrders), [{\n      workOrder: \"\",\n      date: \"\"\n    }]));\n  };\n\n  var removeWorkOrder = function removeWorkOrder(index) {\n    setWorkOrders(workOrders.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var handleWorkOrderChange = function handleWorkOrderChange(index, field, value) {\n    var newWorkOrders = workOrders.map(function (wo, i) {\n      return i === index ? _objectSpread(_objectSpread({}, wo), {}, _defineProperty({}, field, value)) : wo;\n    });\n    setWorkOrders(newWorkOrders);\n  };\n\n  var listDescriptions = function listDescriptions() {\n    setShowDescModal(true);\n  };\n\n  var selectDescription = function selectDescription(index) {\n    setSelectedDesc(index);\n    setShowDescModal(false);\n  };\n\n  var handleShowCameraModal = function handleShowCameraModal() {\n    setShowCameraModal(true);\n  };\n\n  var handleCloseCameraModal = function handleCloseCameraModal() {\n    setShowCameraModal(false);\n    setCapturedPhoto(null);\n  };\n\n  var handleCapture = function handleCapture(err, result) {\n    if (result) {\n      setCapturedPhoto(result);\n    }\n  };\n\n  var savePhoto = function savePhoto() {\n    setPhotos(function (prevPhotos) {\n      return [].concat(_toConsumableArray(prevPhotos), [{\n        file: capturedPhoto,\n        url: URL.createObjectURL(capturedPhoto)\n      }]);\n    });\n    setCapturedPhoto(null);\n    handleCloseCameraModal();\n  };\n\n  var removePhoto = function removePhoto(index) {\n    setPhotos(photos.filter(function (_, i) {\n      return i !== index;\n    }));\n  };\n\n  var mostRecentWorkOrder = workOrders && workOrders.length > 0 ? workOrders.reduce(function (latest, current) {\n    var latestDate = new Date(latest.date);\n    var currentDate = new Date(current.date);\n    return currentDate > latestDate ? current : latest;\n  }, workOrders[0]) : {};\n\n  var capturePhoto = function capturePhoto() {\n    var video = document.querySelector(\"video\");\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    var context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(function (blob) {\n      setCapturedPhoto(blob);\n    }, \"image/png\");\n  };\n\n  var handleShowInfoModal = /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var db, doc, data;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              db = firebase.firestore();\n              _context12.prev = 1;\n              _context12.next = 4;\n              return db.collection(\"Test\").doc(id).get();\n\n            case 4:\n              doc = _context12.sent;\n\n              if (doc.exists) {\n                data = doc.data();\n                setItemName(data.name || \"N/A\");\n                setShowInfoModal(true);\n              } else {\n                console.error(\"Item not found\");\n              }\n\n              _context12.next = 11;\n              break;\n\n            case 8:\n              _context12.prev = 8;\n              _context12.t0 = _context12[\"catch\"](1);\n              console.error(\"Error fetching item info:\", _context12.t0);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[1, 8]]);\n    }));\n\n    return function handleShowInfoModal() {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseInfoModal = function handleCloseInfoModal() {\n    return setShowInfoModal(false);\n  };\n\n  var handlePnChange = function handlePnChange(index, value) {\n    setItems(function (prev) {\n      var newPn = _toConsumableArray(prev.pn);\n\n      newPn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: newPn\n      });\n    });\n  };\n\n  var addPn = function addPn() {\n    setItems(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pn: [].concat(_toConsumableArray(prev.pn), [\"\"])\n      });\n    });\n  };\n\n  var handleSnChange = function handleSnChange(index, value) {\n    setItems(function (prev) {\n      var newSn = _toConsumableArray(prev.sn);\n\n      newSn[index] = value;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: newSn\n      });\n    });\n  };\n\n  var addSn = function addSn() {\n    setItems(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sn: [].concat(_toConsumableArray(prev.sn), [\"\"])\n      });\n    });\n  };\n\n  var browseInputRef = useRef(null);\n\n  var handleBrowsePhotos = function handleBrowsePhotos() {\n    if (browseInputRef.current) {\n      browseInputRef.current.click();\n    }\n  };\n\n  var handleFilesSelected = function handleFilesSelected(e) {\n    var files = e.target.files;\n\n    if (files.length) {\n      var newPhotos = [];\n\n      for (var i = 0; i < files.length; i++) {\n        newPhotos.push({\n          file: files[i],\n          url: URL.createObjectURL(files[i])\n        });\n      }\n\n      setPhotos(function (prevPhotos) {\n        return [].concat(_toConsumableArray(prevPhotos), newPhotos);\n      });\n    }\n\n    e.target.value = \"\";\n  };\n\n  var _useState60 = useState(0),\n      currentPnIndex = _useState60[0],\n      setCurrentPnIndex = _useState60[1];\n\n  var _useState61 = useState(false),\n      showDropdown = _useState61[0],\n      setShowDropdown = _useState61[1];\n\n  var _useState62 = useState(0),\n      currentSnIndex = _useState62[0],\n      setCurrentSnIndex = _useState62[1];\n\n  var _useState63 = useState(false),\n      showSnDropdown = _useState63[0],\n      setShowSnDropdown = _useState63[1];\n\n  var handleAddNewClient = function handleAddNewClient() {\n    var randomNum = Math.floor(10000 + Math.random() * 90000);\n    router.push(\"../client/AIS\".concat(randomNum, \"/addClient?from=item&itemId=\").concat(id || \"\"));\n  };\n\n  var handleBluefolderButton = /*#__PURE__*/function () {\n    var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var _descriptions$selecte2;\n\n      var currentWorkOrder, payload, response, result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              // Check that the work order field is filled out (using workOrders[0].workOrder as current)\n              currentWorkOrder = workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\n\n              if (currentWorkOrder) {\n                _context13.next = 4;\n                break;\n              }\n\n              alert(\"Please fill out the work order field before adding to BlueFolder.\");\n              return _context13.abrupt(\"return\");\n\n            case 4:\n              // Build the payload to send to your proxy endpoint.\n              payload = {\n                name: items.name,\n                pn: items.pn[0] || \"\",\n                sn: items.sn[0] || \"\",\n                status: items.status,\n                description: ((_descriptions$selecte2 = descriptions[selectedDesc]) === null || _descriptions$selecte2 === void 0 ? void 0 : _descriptions$selecte2.description) || \"\",\n                workOrder: currentWorkOrder,\n                localsn: items.localSN || \"\"\n              };\n              _context13.prev = 5;\n              _context13.next = 8;\n              return fetch(\"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n              });\n\n            case 8:\n              response = _context13.sent;\n              _context13.next = 11;\n              return response.json();\n\n            case 11:\n              result = _context13.sent;\n              alert(\"BlueFolder service item added successfully!\");\n              console.log(\"BlueFolder result:\", result);\n              _context13.next = 20;\n              break;\n\n            case 16:\n              _context13.prev = 16;\n              _context13.t0 = _context13[\"catch\"](5);\n              console.error(\"BlueFolder error:\", _context13.t0);\n              alert(\"Error adding data to BlueFolder.\");\n\n            case 20:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[5, 16]]);\n    }));\n\n    return function handleBluefolderButton() {\n      return _ref20.apply(this, arguments);\n    };\n  }(); // // Slack integration handler.\n  // const handleAddToSlack = async (which) => {\n  //   try {\n  //     const pn0 = Array.isArray(items.pn) ? items.pn[0] : items.pn;\n  //     const sn0 = Array.isArray(items.sn) ? items.sn[0] : items.sn;\n  //     const linkUrl = typeof window !== \"undefined\" ? window.location.href : \"\";\n  //     const safeName = (items?.name || id || \"Untitled\").trim();\n  //     const title = `${safeName}${id ? ` (${id})` : \"\"}`;\n  //     console.log(\"[SLACK][handleAddToSlack] which:\", which);\n  //     console.log(\"[SLACK] title:\", title);\n  //     console.log(\"[SLACK] PN:\", items.pn, \"SN:\", items.sn);\n  //     const resp = await fetch(\"/api/slack/add-to-list\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify({\n  //         listKey: which,      // \"shipping\" | \"receiving\" | \"tasks\"\n  //         title,\n  //         pn: items.pn,\n  //         sn: items.sn,\n  //         // keeping it minimal by design while we stabilize PN/SN\n  //         linkUrl,\n  //       }),\n  //     });\n  // Slack integration handler (drop-in replacement)\n  // Slack integration handler (drop-in replacement)\n  // Slack integration handler (client) — replace your existing handleAddToSlack with this\n\n\n  var handleAddToSlack = /*#__PURE__*/function () {\n    var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var which,\n          _sort$,\n          _ref22,\n          _items$trackingNumber,\n          _json$debug,\n          _json$debug2,\n          safeName,\n          title,\n          pn0,\n          sn0,\n          pn_sn,\n          mostRecentWO,\n          description,\n          tracking,\n          local_sn,\n          photoUrls,\n          resp,\n          json,\n          _args14 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              which = _args14.length > 0 && _args14[0] !== undefined ? _args14[0] : \"shipping\";\n              _context14.prev = 1;\n              safeName = ((items === null || items === void 0 ? void 0 : items.name) || id || \"Untitled\").trim();\n              title = \"\".concat(safeName).concat(id ? \" (\".concat(id, \")\") : \"\");\n              pn0 = Array.isArray(items === null || items === void 0 ? void 0 : items.pn) ? items.pn[0] : items === null || items === void 0 ? void 0 : items.pn;\n              sn0 = Array.isArray(items === null || items === void 0 ? void 0 : items.sn) ? items.sn[0] : items === null || items === void 0 ? void 0 : items.sn;\n              pn_sn = [pn0 && \"PN: \".concat(pn0), sn0 && \"SN: \".concat(sn0)].filter(Boolean).join(\"  \");\n              mostRecentWO = workOrders && workOrders.length ? (_sort$ = _toConsumableArray(workOrders).sort(function (a, b) {\n                return new Date((b === null || b === void 0 ? void 0 : b.date) || 0) - new Date((a === null || a === void 0 ? void 0 : a.date) || 0);\n              })[0]) === null || _sort$ === void 0 ? void 0 : _sort$.workOrder : \"\";\n              description = selectedDesc != null && descriptions !== null && descriptions !== void 0 && descriptions[selectedDesc] ? descriptions[selectedDesc].description || \"\" : (items === null || items === void 0 ? void 0 : items.description) || \"\";\n              tracking = (_ref22 = (_items$trackingNumber = items === null || items === void 0 ? void 0 : items.trackingNumber) !== null && _items$trackingNumber !== void 0 ? _items$trackingNumber : items === null || items === void 0 ? void 0 : items.tracking) !== null && _ref22 !== void 0 ? _ref22 : \"\";\n              local_sn = id || (items === null || items === void 0 ? void 0 : items.localSN) || \"\";\n              photoUrls = Array.isArray(photos) ? photos.map(function (p) {\n                return p === null || p === void 0 ? void 0 : p.url;\n              }).filter(Boolean) : [];\n              _context14.next = 14;\n              return fetch(\"/api/slack/add-to-list\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  listKey: which,\n                  title: title,\n                  pn_sn: pn_sn,\n                  // <— server expects this\n                  work_order: mostRecentWO || \"\",\n                  local_sn: local_sn,\n                  tracking: tracking,\n                  description: (description || \"\").trim(),\n                  photoUrls: photoUrls // array of https URLs\n\n                })\n              });\n\n            case 14:\n              resp = _context14.sent;\n              _context14.next = 17;\n              return resp.json();\n\n            case 17:\n              json = _context14.sent;\n              console.log(\"[SLACK][handleAddToSlack] response:\", json);\n              if (json !== null && json !== void 0 && (_json$debug = json.debug) !== null && _json$debug !== void 0 && _json$debug.steps) console.table(json.debug.steps);\n              if (json !== null && json !== void 0 && (_json$debug2 = json.debug) !== null && _json$debug2 !== void 0 && _json$debug2.photos) console.table(json.debug.photos);\n\n              if (!(!resp.ok || !(json !== null && json !== void 0 && json.ok))) {\n                _context14.next = 25;\n                break;\n              }\n\n              setErr(\"Slack add failed: \".concat((json === null || json === void 0 ? void 0 : json.error) || \"unknown error\"));\n              setShowErr(true);\n              return _context14.abrupt(\"return\");\n\n            case 25:\n              alert(\"Added to Slack \".concat(which === \"shipping\" ? \"Shipping\" : which === \"receiving\" ? \"Receiving\" : \"Tasks\", \" list.\"));\n              _context14.next = 33;\n              break;\n\n            case 28:\n              _context14.prev = 28;\n              _context14.t0 = _context14[\"catch\"](1);\n              console.error(_context14.t0);\n              setErr(\"Error adding to Slack\");\n              setShowErr(true);\n\n            case 33:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[1, 28]]);\n    }));\n\n    return function handleAddToSlack() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1646,\n      columnNumber: 7\n    }\n  }, __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1647,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1648,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1649,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1651,\n      columnNumber: 11\n    }\n  }, \"Missing field\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1653,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showErr,\n    onHide: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1659,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 13\n    }\n  }, \"Error\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1662,\n      columnNumber: 11\n    }\n  }, Err), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1663,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1664,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showSaveModal,\n    onHide: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1669,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1670,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1671,\n      columnNumber: 13\n    }\n  }, \"Save Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1673,\n      columnNumber: 11\n    }\n  }, \"Data has been saved successfully.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1674,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSaveModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showPrintModal,\n    onHide: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1682,\n      columnNumber: 13\n    }\n  }, \"Print Confirmation\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 11\n    }\n  }, \"Info has been sent to print.\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleClosePrintModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686,\n      columnNumber: 13\n    }\n  }, \"Ok\"))), __jsx(Modal, {\n    show: showDescModal,\n    onHide: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1692,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1694,\n      columnNumber: 13\n    }\n  }, \"Descriptions\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1697,\n      columnNumber: 13\n    }\n  }, \"Add Description\"), descriptions.map(function (desc, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1701,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      variant: \"outline-secondary\",\n      className: \"w-100\",\n      onClick: function onClick() {\n        return selectDescription(index);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1702,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1709,\n        columnNumber: 21\n      }\n    }, desc.description || \"Description\"), __jsx(\"span\", {\n      style: {\n        borderLeft: \"1px solid #ccc\",\n        paddingLeft: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710,\n        columnNumber: 21\n      }\n    }, desc.date || \"Date\"))));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseDescModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(Modal, {\n    show: showWoModal,\n    onHide: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1728,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1729,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1730,\n      columnNumber: 13\n    }\n  }, \"Work Orders\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    className: \"mb-3\",\n    onClick: addWorkOrder,\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 13\n    }\n  }, \"Add Work Order\"), workOrders.map(function (wo, index) {\n    return __jsx(Row, {\n      key: index,\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1742,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Work Order\",\n      value: wo.workOrder,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"workOrder\", e.target.value);\n      },\n      style: {\n        marginBottom: \"0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 19\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Control, {\n      type: \"date\",\n      placeholder: \"Date\",\n      value: wo.date,\n      onChange: function onChange(e) {\n        return handleWorkOrderChange(index, \"date\", e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 19\n      }\n    })), __jsx(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      variant: \"danger\",\n      onClick: function onClick() {\n        return removeWorkOrder(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 19\n      }\n    }, \"Remove\")));\n  }), __jsx(Button, {\n    variant: \"primary\",\n    onClick: handleCloseWoModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1774,\n      columnNumber: 13\n    }\n  }, \"OK\"))), __jsx(ClientInfoModal, {\n    show: showMachineModal,\n    handleClose: handleCloseMachineModal,\n    selectedClient: selectedClient,\n    machineOptions: machineOptions,\n    setSelectedMachine: handleSetSelectedMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1780,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showClientModal,\n    onHide: handleCloseClientModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1788,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1789,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1790,\n      columnNumber: 13\n    }\n  }, \"Select Client\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: search,\n    onChange: function onChange(e) {\n      return setSearch(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1793,\n      columnNumber: 13\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return (client.name || \"\").toLowerCase().includes(search.toLowerCase());\n    }),\n    onSelectClient: handleClientInfo,\n    onInfoClick: handleClientInfo,\n    clearSelection: function clearSelection() {\n      return handleClientInfo(null);\n    },\n    onAddClient: handleAddNewClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1800,\n      columnNumber: 13\n    }\n  }))), __jsx(ParentModal, {\n    show: showParentModal,\n    handleClose: handleCloseParentModal,\n    setSelectedParent: setSelectedParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1812,\n      columnNumber: 9\n    }\n  }), __jsx(MachineSelectionModal, {\n    show: machineSelectionModal,\n    handleClose: function handleClose() {\n      return setMachineSelectionModal(false);\n    },\n    setMachine: setTheMachine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1818,\n      columnNumber: 9\n    }\n  }), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1824,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1825,\n      columnNumber: 11\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1826,\n      columnNumber: 13\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1828,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1829,\n      columnNumber: 13\n    }\n  }, !capturedPhoto && __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1831,\n      columnNumber: 17\n    }\n  }), capturedPhoto && __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1839,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1840,\n      columnNumber: 19\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1849,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1852,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setCameraFacing(function (prev) {\n        return prev === \"environment\" ? \"user\" : \"environment\";\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1866,\n      columnNumber: 17\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 17\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return setCapturedPhoto(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 17\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1887,\n      columnNumber: 17\n    }\n  }, \"OK\")))), __jsx(InfoModal, {\n    show: showInfoModal,\n    handleClose: handleCloseInfoModal,\n    itemName: items.name,\n    dimensions: items.length + \",\" + items.width + \",\" + items.height,\n    price: items.price,\n    freqI: freqItem,\n    freqM: machineFrequency,\n    usage: usagePastYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1895,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1906,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1911,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1912,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1913,\n      columnNumber: 17\n    }\n  }, \"Item\"), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1914,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1916,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1917,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1918,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1919,\n      columnNumber: 25\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    value: items.name,\n    onChange: handleChange(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1920,\n      columnNumber: 25\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1927,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"pn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1928,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 25\n    }\n  }, \"Product Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.pn[currentPnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handlePnChange(currentPnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1932,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowDropdown(!showDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1939,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1945,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewPn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1946,\n      columnNumber: 31\n    }\n  }, \"+\"))), showDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1955,\n      columnNumber: 29\n    }\n  }, pnOptions.map(function (pnOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentPnIndex(idx);\n        setShowDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1969,\n        columnNumber: 33\n      }\n    }, pnOption);\n  }))), addingNewPn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new PN\",\n    value: newPn,\n    onChange: function onChange(e) {\n      return setNewPn(e.target.value);\n    },\n    onBlur: handleAddNewPn,\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && handleAddNewPn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1984,\n      columnNumber: 27\n    }\n  })))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1999,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2000,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"sn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2001,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2002,\n      columnNumber: 25\n    }\n  }, \"Serial Number\"), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2003,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2004,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    value: items.sn[currentSnIndex] || \"\",\n    onChange: function onChange(e) {\n      return handleSnChange(currentSnIndex, e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2005,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowSnDropdown(!showSnDropdown);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2012,\n      columnNumber: 29\n    }\n  }, \"\\u25BE\"), __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2018,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setAddingNewSn(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2019,\n      columnNumber: 31\n    }\n  }, \"+\"))), showSnDropdown && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\",\n      border: \"1px solid #ccc\",\n      zIndex: 1000,\n      maxHeight: \"150px\",\n      overflowY: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2028,\n      columnNumber: 29\n    }\n  }, snOptions.map(function (snOption, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        padding: \"8px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setCurrentSnIndex(idx);\n        setShowSnDropdown(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2042,\n        columnNumber: 33\n      }\n    }, snOption);\n  }))), addingNewSn && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter new SN\",\n    value: newSn,\n    onChange: function onChange(e) {\n      return setNewSn(e.target.value);\n    },\n    onBlur: handleAddNewSn,\n    onKeyDown: function onKeyDown(e) {\n      return e.key === \"Enter\" && handleAddNewSn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2057,\n      columnNumber: 27\n    }\n  }))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2070,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2071,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2072,\n      columnNumber: 25\n    }\n  }, \"Status\"), __jsx(Form.Select, {\n    value: items.status || \"\",\n    onChange: handleChange(\"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2073,\n      columnNumber: 25\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2077,\n      columnNumber: 27\n    }\n  }, \"Select status\"), __jsx(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2078,\n      columnNumber: 27\n    }\n  }, \"Good\"), __jsx(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2079,\n      columnNumber: 27\n    }\n  }, \"Bad\"), __jsx(\"option\", {\n    value: \"Unknown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2080,\n      columnNumber: 27\n    }\n  }, \"Unknown\"))))), __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2086,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2087,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2088,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"OEM\",\n    value: oem,\n    onChange: function onChange(e) {\n      return setOem(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2089,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2096,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2097,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Modality\",\n    value: modality,\n    onChange: function onChange(e) {\n      return setModality(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2098,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2105,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2106,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Model\",\n    value: model,\n    onChange: function onChange(e) {\n      return setModel(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2107,\n      columnNumber: 23\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2116,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2117,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowWoModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2118,\n      columnNumber: 23\n    }\n  }, \"Manage Work Orders\"), workOrders.length > 0 && __jsx(\"div\", {\n    className: \"d-flex flex-column align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2126,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2127,\n      columnNumber: 27\n    }\n  }, \"Work Order\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Most Recent Work Order\",\n    value: mostRecentWorkOrder.workOrder,\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"workOrder\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2128,\n      columnNumber: 27\n    }\n  }), __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2141,\n      columnNumber: 27\n    }\n  }, \"Date\"), __jsx(Form.Control, {\n    type: \"date\",\n    placeholder: \"Work Order Date\",\n    value: mostRecentWorkOrder.date,\n    onChange: function onChange(e) {\n      return handleWorkOrderChange(workOrders.indexOf(mostRecentWorkOrder), \"date\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2142,\n      columnNumber: 27\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2158,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2159,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: listDescriptions,\n    className: \"mb-2 me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2160,\n      columnNumber: 25\n    }\n  }, \"List Descriptions\"), __jsx(Form.Control, {\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter description\",\n    value: ((_descriptions$selecte3 = descriptions[selectedDesc]) === null || _descriptions$selecte3 === void 0 ? void 0 : _descriptions$selecte3.description) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"description\", e.target.value);\n    },\n    style: {\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2167,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Control, {\n    type: \"date\",\n    value: ((_descriptions$selecte4 = descriptions[selectedDesc]) === null || _descriptions$selecte4 === void 0 ? void 0 : _descriptions$selecte4.date) || \"\",\n    onChange: function onChange(e) {\n      return handleDescriptionChange(selectedDesc, \"date\", e.target.value);\n    },\n    style: {\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2181,\n      columnNumber: 25\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2200,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2201,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2202,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(true);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2203,\n      columnNumber: 25\n    }\n  }, \"Select From\"), selectedClientFrom && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2214,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2222,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2223,\n      columnNumber: 31\n    }\n  }, \"Selected Client (From):\"), \" \", selectedClientFrom.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2226,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2227,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientFrom.name), selectedMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2235,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2236,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (From):\"), \" \", selectedMachine.name), showLocalLocFrom && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowNewLocalModalFrom(true);\n    },\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2241,\n      columnNumber: 39\n    }\n  }, [newLocalFrom.region, ((_newLocalFrom$section = newLocalFrom.section) === null || _newLocalFrom$section === void 0 ? void 0 : _newLocalFrom$section.letter) + ((_newLocalFrom$section2 = newLocalFrom.section) === null || _newLocalFrom$section2 === void 0 ? void 0 : _newLocalFrom$section2.number), newLocalFrom.bin && \"B\".concat(newLocalFrom.bin), newLocalFrom.pallet && \"P\".concat(newLocalFrom.pallet)].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalFrom,\n    onHide: function onHide() {\n      return setShowNewLocalModalFrom(false);\n    },\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2263,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2270,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2271,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (From)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2275,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientFrom,\n    showLocalLoc: showNewLocalModalFrom,\n    value: newLocalFrom,\n    onChange: setNewLocalFrom,\n    onSave: function onSave(p) {\n      setNewLocalFrom(p);\n      setShowNewLocalModalFrom(false);\n    },\n    onCancel: function onCancel() {\n      return setShowNewLocalModalFrom(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2276,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2307,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      setMachinePick(false);\n      handleShowClientModal();\n    },\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2308,\n      columnNumber: 25\n    }\n  }, \"Select Current\"), selectedClientCurrent && __jsx(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"0.75rem\",\n      borderRadius: \"4px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2319,\n      columnNumber: 27\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2327,\n      columnNumber: 29\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2328,\n      columnNumber: 31\n    }\n  }, \"Selected Client (Current):\"), \" \", selectedClientCurrent.name), __jsx(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2331,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowMachineModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2332,\n      columnNumber: 31\n    }\n  }, \"Select Machine for \", selectedClientCurrent.name), selectedCurrentMachine && __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2340,\n      columnNumber: 35\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2341,\n      columnNumber: 37\n    }\n  }, \"Selected Machine (Current):\"), \" \", selectedCurrentMachine.name), showLocalLocCurrent && __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: function onClick() {\n      return setShowNewLocalModalCurrent(true);\n    },\n    className: \"w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2346,\n      columnNumber: 39\n    }\n  }, [newLocalCurrent.region, ((_newLocalCurrent$sect = newLocalCurrent.section) === null || _newLocalCurrent$sect === void 0 ? void 0 : _newLocalCurrent$sect.letter) + ((_newLocalCurrent$sect2 = newLocalCurrent.section) === null || _newLocalCurrent$sect2 === void 0 ? void 0 : _newLocalCurrent$sect2.number), newLocalCurrent.bin && \"B\".concat(newLocalCurrent.bin), newLocalCurrent.pallet && \"P\".concat(newLocalCurrent.pallet)].filter(Boolean).join(\"-\")), __jsx(Modal, {\n    show: showNewLocalModalCurrent,\n    onHide: function onHide() {\n      return setShowNewLocalModalCurrent(false);\n    },\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2365,\n      columnNumber: 39\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2372,\n      columnNumber: 41\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2373,\n      columnNumber: 43\n    }\n  }, \"Edit Local Loc (Current)\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2377,\n      columnNumber: 41\n    }\n  }, __jsx(NewLocal, {\n    selectedClient: selectedClientCurrent,\n    showLocalLoc: showNewLocalModalCurrent,\n    value: newLocalCurrent,\n    onChange: setNewLocalCurrent,\n    onSave: function onSave(p) {\n      setNewLocalCurrent(p);\n      setShowNewLocalModalCurrent(false);\n    },\n    onCancel: function onCancel() {\n      return setShowNewLocalModalCurrent(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2378,\n      columnNumber: 43\n    }\n  })))))))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2415,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowParentModal,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2416,\n      columnNumber: 25\n    }\n  }, \"Select Parent\"), selectedParent && __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Selected Parent\",\n    value: selectedParent.name,\n    readOnly: true,\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2424,\n      columnNumber: 27\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2436,\n      columnNumber: 19\n    }\n  }, __jsx(Row, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2437,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2438,\n      columnNumber: 23\n    }\n  }, __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2439,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleShowCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2440,\n      columnNumber: 27\n    }\n  }, \"Take Photo\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleBrowsePhotos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2446,\n      columnNumber: 27\n    }\n  }, \"Browse\"))), __jsx(Col, {\n    xs: 6,\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2454,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"success\",\n    onClick: handleSendToInflow,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2455,\n      columnNumber: 25\n    }\n  }, \"Send to inFlow\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleBluefolderButton,\n    style: {\n      marginLeft: \"0.5rem\",\n      marginRight: \".5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2462,\n      columnNumber: 25\n    }\n  }, \"BlueFolder\"), __jsx(Button, {\n    variant: addToWebsite ? \"primary\" : \"outline-primary\",\n    onClick: function onClick() {\n      return setAddToWebsite(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2471,\n      columnNumber: 25\n    }\n  }, addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"), __jsx(Form.Check, {\n    type: \"checkbox\",\n    id: \"hide-checkbox\",\n    label: \"Hide\" // box is checked when we want visible = false\n    ,\n    checked: !items.visible,\n    onChange: function onChange(e) {\n      // grab checked immediately\n      var isHidden = e.currentTarget.checked;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          visible: !isHidden\n        });\n      });\n    },\n    className: \"ms-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2478,\n      columnNumber: 25\n    }\n  }))), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    multiple: true,\n    ref: browseInputRef,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFilesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2496,\n      columnNumber: 21\n    }\n  })), photos && photos.length > 0 && __jsx(\"div\", {\n    className: \"photo-gallery\",\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"10px\",\n      marginBottom: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2507,\n      columnNumber: 21\n    }\n  }, photos.map(function (photo, index) {\n    return __jsx(\"div\", {\n      key: index,\n      style: {\n        position: \"relative\",\n        width: \"100px\",\n        height: \"100px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2517,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: photo.url,\n      alt: \"Photo \".concat(index + 1),\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2525,\n        columnNumber: 27\n      }\n    }), photo.file && __jsx(Button, {\n      variant: \"danger\",\n      size: \"sm\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        padding: \"0 5px\"\n      },\n      onClick: function onClick() {\n        return removePhoto(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2535,\n        columnNumber: 29\n      }\n    }, \"x\"));\n  })), __jsx(\"div\", {\n    className: \"mt-3 d-flex flex-wrap align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2554,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2555,\n      columnNumber: 21\n    }\n  }, \"Save\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleShowInfoModal,\n    style: {\n      marginRight: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2562,\n      columnNumber: 21\n    }\n  }, \"More Info\"), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Back\",\n    route: \"NewSearch/mainSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2569,\n      columnNumber: 21\n    }\n  }), SHOW_SLACK_BUTTONS && __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginLeft: \".5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2575,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontSize: 12,\n      lineHeight: \"12px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2576,\n      columnNumber: 25\n    }\n  }, \"Slack\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      border: \"1px solid #ced4da\",\n      borderRadius: 6,\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2577,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: function onClick() {\n      return handleAddToSlack(\"receiving\");\n    },\n    style: {\n      border: \"none\",\n      borderRight: \"1px solid #ced4da\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2578,\n      columnNumber: 27\n    }\n  }, \"Receiving\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: function onClick() {\n      return handleAddToSlack(\"shipping\");\n    },\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2585,\n      columnNumber: 27\n    }\n  }, \"Shipping\"))), __jsx(Button, {\n    variant: \"info\",\n    onClick: handlePrint,\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2601,\n      columnNumber: 21\n    }\n  }, \"Print Label\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2609,\n      columnNumber: 19\n    }\n  }, __jsx(Button, {\n    variant: \"link\",\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      fontSize: \"24px\"\n    },\n    onClick: function onClick() {\n      return setShowExtra(!showExtra);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2610,\n      columnNumber: 21\n    }\n  }, \"\\u25BC\")), __jsx(Collapse, {\n    \"in\": showExtra,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2622,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    id: \"extra-collapse\",\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2623,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2624,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"dimensions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2625,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2626,\n      columnNumber: 27\n    }\n  }, \"Dimensions\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2627,\n      columnNumber: 27\n    }\n  }, __jsx(Form.Control, {\n    placeholder: \"Length\",\n    type: \"text\",\n    value: items.length,\n    onChange: handleChange(\"length\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2630,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2636,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Width\",\n    type: \"text\",\n    value: items.width,\n    onChange: handleChange(\"width\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2637,\n      columnNumber: 29\n    }\n  }), __jsx(\"span\", {\n    style: {\n      padding: \"0 5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2643,\n      columnNumber: 29\n    }\n  }, \"x\"), __jsx(Form.Control, {\n    placeholder: \"Height\",\n    type: \"text\",\n    value: items.height,\n    onChange: handleChange(\"height\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2644,\n      columnNumber: 29\n    }\n  }))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"trackingNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2652,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2653,\n      columnNumber: 27\n    }\n  }, \"Tracking Number\"), __jsx(Form.Control, {\n    placeholder: \"Tracking Number\",\n    type: \"text\",\n    value: items.trackingNumber,\n    onChange: handleChange(\"trackingNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2654,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2663,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2664,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2665,\n      columnNumber: 27\n    }\n  }, \"Price\"), __jsx(Form.Control, {\n    placeholder: \"Price\",\n    type: \"text\",\n    value: items.price,\n    onChange: handleChange(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2666,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"DOM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2673,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2674,\n      columnNumber: 27\n    }\n  }, \"DOM\"), __jsx(Form.Control, {\n    placeholder: \"Date of Manufacture\",\n    type: \"date\",\n    value: DOM,\n    onChange: function onChange(e) {\n      return setDOM(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2675,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"poNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2682,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2683,\n      columnNumber: 27\n    }\n  }, \"PO Number\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"PO Number\",\n    value: items.poNumber || \"\",\n    onChange: handleChange(\"poNumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2684,\n      columnNumber: 27\n    }\n  }))), __jsx(Row, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2692,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"localSN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2693,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2694,\n      columnNumber: 27\n    }\n  }, \"Local SN\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Local SN\",\n    value: items.localSN || \"\",\n    onChange: handleChange(\"localSN\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2695,\n      columnNumber: 27\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"arrivalDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2702,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2703,\n      columnNumber: 27\n    }\n  }, \"Arrival Date\"), __jsx(Form.Control, {\n    placeholder: \"Enter Arrival Date\",\n    type: \"date\",\n    value: items.arrival_date,\n    onChange: function onChange(e) {\n      var value = e.target.value;\n      setItems(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          arrival_date: value\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2704,\n      columnNumber: 27\n    }\n  }))))))))))), __jsx(Modal, {\n    show: showCameraModal,\n    onHide: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2727,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2728,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2729,\n      columnNumber: 11\n    }\n  }, \"Take a Photo\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2731,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"camera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2732,\n      columnNumber: 11\n    }\n  }, !capturedPhoto ? __jsx(BarcodeScannerComponent, {\n    width: \"100%\",\n    height: 300,\n    onUpdate: handleCapture,\n    facingMode: cameraFacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2734,\n      columnNumber: 15\n    }\n  }) : __jsx(\"div\", {\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2741,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: URL.createObjectURL(capturedPhoto),\n    alt: \"captured\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2742,\n      columnNumber: 17\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2751,\n      columnNumber: 9\n    }\n  }, !capturedPhoto ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: capturePhoto,\n    style: {\n      borderRadius: \"50%\",\n      width: \"60px\",\n      height: \"60px\",\n      position: \"absolute\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      bottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2754,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDCF7\"), __jsx(Button, {\n    onClick: function onClick() {\n      return setCameraFacing(function (prev) {\n        return prev === \"environment\" ? \"user\" : \"environment\";\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2768,\n      columnNumber: 15\n    }\n  }, \"Flip Camera\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseCameraModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2777,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : __jsx(React.Fragment, null, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return setCapturedPhoto(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2783,\n      columnNumber: 15\n    }\n  }, \"Retake\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: savePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2789,\n      columnNumber: 15\n    }\n  }, \"OK\")))));\n} // Server-side rendering function\n\n_s2(DisplayItem, \"E3FAvm+rZqH/r3XROzjjBgI3+Vc=\", false, function () {\n  return [useRouter, useAuth];\n});\n\n_c4 = DisplayItem;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BarcodeScannerComponent$dynamic\");\n$RefreshReg$(_c2, \"BarcodeScannerComponent\");\n$RefreshReg$(_c3, \"LoadingButton\");\n$RefreshReg$(_c4, \"DisplayItem\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/item/[id]/index.js"],"names":["React","useEffect","useState","useRef","Form","Button","Card","Container","Row","Col","Modal","FormControl","Collapse","InputGroup","ButtonGroup","Link","useAuth","firebase","LoggedIn","useRouter","fetchClients","ClientTable","ClientInfoModal","ParentModal","dynamic","InfoModal","MachineSelectionModal","addServiceItem","NewLocal","InflowAPI","buildLocalLocObject","loc","o","region","section","letter","number","bin","undefined","pallet","BarcodeScannerComponent","ssr","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","handleClick","DisplayItem","initialItem","initialMachineData","error","SHOW_SLACK_BUTTONS","process","env","NEXT_PUBLIC_SHOW_SLACK_BUTTONS","router","signOut","idFromRouter","query","id","initialId","pn","Array","isArray","sn","price","status","length","width","height","poNumber","trackingNumber","localSN","arrival_date","visible","items","setItems","setDescriptions","descriptions","setWorkOrders","workOrders","setDOM","DOM","prev","newLocalFrom","setNewLocalFrom","newLocalCurrent","setNewLocalCurrent","selectedClientFrom","setSelectedClientFrom","selectedClientCurrent","setSelectedClientCurrent","selectedMachine","setSelectedMachine","selectedCurrentMachine","setSelectedCurrentMachine","pnOptions","setPnOptions","snOptions","setSnOptions","description","date","workOrder","clients","setClients","photos","setPhotos","show","setShow","showErr","setShowErr","Err","setErr","showDescModal","setShowDescModal","showWoModal","setShowWoModal","showClientModal","setShowClientModal","showMachineModal","setShowMachineModal","showParentModal","setShowParentModal","showCameraModal","setShowCameraModal","showSaveModal","setShowSaveModal","showPrintModal","setShowPrintModal","machineSelectionModal","setMachineSelectionModal","selectedDesc","setSelectedDesc","selectedClient","setSelectedClient","selectedParent","setSelectedParent","TheMachine","setTheMachine","machineOptions","setMachineOptions","search","setSearch","capturedPhoto","setCapturedPhoto","cameraFacing","setCameraFacing","addToWebsite","setAddToWebsite","machinePick","setMachinePick","freqItem","setFreqItem","usagePastYear","setUsagePastYear","machineFrequency","setMachineFrequency","showExtra","setShowExtra","localLocFrom","setLocalLocFrom","localLocCurrent","setLocalLocCurrent","oem","setOem","modality","setModality","model","setModel","showInfoModal","setShowInfoModal","itemName","setItemName","machineFieldsInitialized","setMachineFieldsInitialized","showLocalModalFrom","setShowLocalModalFrom","showLocalModalCurrent","setShowLocalModalCurrent","openLocalModalFrom","closeLocalModalFrom","openLocalModalCurrent","closeLocalModalCurrent","showNewLocalModalFrom","setShowNewLocalModalFrom","showNewLocalModalCurrent","setShowNewLocalModalCurrent","formatLoc","parts","push","join","handleSendToInflow","trim","alert","imageUrls","map","p","url","filter","Boolean","sku","toString","toCSV","arr","arrivalISO","Date","toISOString","slice","pnStr","snStr","mostRecentWO","reduce","latest","cur","customFields","custom1","custom2","custom3","custom4","custom5","custom6","custom7","custom8","custom9","custom10","console","log","upsertProduct","created","productId","message","setShowLocalLocFrom","toLowerCase","setShowLocalLocCurrent","fetchClientsData","clientsData","fetchPnSn","db","firestore","collection","get","snapshot","pnSet","Set","snSet","forEach","doc","data","add","pnArray","snArray","fetchData","resolveClientFromMachine","machineRef","setClient","setMachine","isFrom","machineDoc","exists","machineData","client","clientDoc","clientName","isSocalInterior","shouldShow","normalizedPN","normalizedSN","ClientFrom","clientFromDoc","ClientCurrent","clientCurrentDoc","Machine","CurrentMachine","machineFromData","machineCurrentData","MachineFrom","MachineCurrent","nameFrom","nameCurrent","theMachineData","OEM","Modality","Model","merged","updateMachineFields","Parent","parentDoc","fetchPhotos","checkIfAddedToWebsite","calculateItemFrequencyAndUsage","pathname","signal","getPriorityMachineField","field","theMachine","currentMachine","fromMachine","currentDate","oneYearAgo","setFullYear","getFullYear","where","itemsSnapshot","size","itemData","workOrderDate","fetchMachine","machineId","machinesSnapshot","docID","storageRef","storage","ref","listRef","child","listAll","res","all","item","getDownloadURL","urls","file","partsDoc","handleClose","handleShow","handleCloseErr","handleShowErr","handleCloseSaveModal","handleClosePrintModal","handleShowSaveModal","handleShowPrintModal","handleMachineSelectionModal","handleCloseDescModal","handleShowDescModal","handleCloseWoModal","handleShowWoModal","handleCloseClientModal","handleShowClientModal","handleCloseMachineModal","handleShowMachineModal","handleCloseParentModal","handleShowParentModal","handleClientInfo","clientId","clientData","machinePromises","machines","machineDocs","reorderArray","selectedValue","newArr","val","addingNewPn","setAddingNewPn","newPn","setNewPn","addingNewSn","setAddingNewSn","newSn","setNewSn","handlePnSelect","e","selected","target","value","updatedPn","handleSnSelect","updatedSn","handleAddNewPn","handleAddNewSn","generateCustomID","randomNum","Math","floor","random","shallowClean","obj","newObj","key","hasOwnProperty","toSend","currentUser","auth","userEmail","email","formattedItems","addedToWebsite","lastEdited","fromDetails","currentDetails","Object","keys","docId","newDocId","set","update","associatedParts","FieldValue","arrayUnion","currentMachineRef","currentMachineDoc","cleanFormattedItems","uploadPhotos","showLocalLocFrom","showLocalLocCurrent","handleSetSelectedMachine","machine","i","photoRef","metadata","contentType","put","handlePrint","warn","payload","wo","local_sn","dateCreated","fetch","method","headers","body","JSON","stringify","response","json","result","includes","handleSubmit","event","preventDefault","handleChange","prevItems","addDescription","removeDescription","index","_","handleDescriptionChange","newDescriptions","desc","addWorkOrder","removeWorkOrder","handleWorkOrderChange","newWorkOrders","listDescriptions","selectDescription","handleShowCameraModal","handleCloseCameraModal","handleCapture","err","savePhoto","prevPhotos","URL","createObjectURL","removePhoto","mostRecentWorkOrder","current","latestDate","capturePhoto","video","document","querySelector","canvas","createElement","videoWidth","videoHeight","context","getContext","drawImage","toBlob","blob","handleShowInfoModal","handleCloseInfoModal","handlePnChange","addPn","handleSnChange","addSn","browseInputRef","handleBrowsePhotos","click","handleFilesSelected","files","newPhotos","currentPnIndex","setCurrentPnIndex","showDropdown","setShowDropdown","currentSnIndex","setCurrentSnIndex","showSnDropdown","setShowSnDropdown","handleAddNewClient","handleBluefolderButton","currentWorkOrder","localsn","handleAddToSlack","which","safeName","title","pn0","sn0","pn_sn","sort","a","b","tracking","photoUrls","listKey","work_order","resp","debug","steps","table","ok","cursor","borderLeft","paddingLeft","marginBottom","borderRadius","position","left","transform","bottom","minHeight","maxWidth","top","right","backgroundColor","border","zIndex","maxHeight","overflowY","pnOption","idx","padding","snOption","marginTop","indexOf","marginLeft","marginRight","isHidden","currentTarget","checked","display","flexWrap","gap","photo","objectFit","flexDirection","fontSize","lineHeight","textAlign","overflow","borderRight","margin","textDecoration","color","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  FormControl,\r\n  Collapse,\r\n  InputGroup,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useAuth } from \"../../../../context/AuthUserContext\";\r\nimport firebase from \"../../../../context/Firebase\";\r\nimport LoggedIn from \"../../../LoggedIn\";\r\nimport { useRouter } from \"next/router\";\r\nimport { fetchClients } from \"../../../../utils/fetchAssociations\";\r\nimport ClientTable from \"../../../../utils/ClientTable\";\r\nimport ClientInfoModal from \"../../ClientInfoModal\";\r\nimport ParentModal from \"../../AddItem/parentModal\";\r\nimport dynamic from \"next/dynamic\";\r\nimport InfoModal from \"../../InfoModal\";\r\nimport MachineSelectionModal from \"./MachineSelectionModal\";\r\nimport { addServiceItem } from \"../../../../utils/BluefolderService\";\r\n\r\nimport NewLocal from \"./NewLocal\";\r\n\r\n//inflow API\r\nimport InflowAPI from \"../../../../utils/inflowAPI\";\r\n\r\n// Import for SSR\r\nimport { adminDb } from \"../../../../context/FirebaseAdmin\";\r\n\r\n// === BUILD A MAP ONLY OF THOSE FIELDS THE USER ACTUALLY PICKED ===\r\nfunction buildLocalLocObject(loc) {\r\n  const o = {};\r\n  if (loc.region) o.region = loc.region;\r\n  if (loc.section?.letter && loc.section?.number) o.section = loc.section;\r\n  // pick up the new singular fields, too:\r\n  if (loc.bin !== undefined && loc.bin !== \"\") o.bin = loc.bin;\r\n  if (loc.pallet !== undefined && loc.pallet !== \"\") o.pallet = loc.pallet;\r\n  return o;\r\n}\r\n\r\n// This will only load the component on the client-side.\r\nconst BarcodeScannerComponent = dynamic(\r\n  () => import(\"react-qr-barcode-scanner\"),\r\n  { ssr: false }\r\n);\r\n\r\n// Simulates a network request delay.\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\n// Custom LoadingButton component.\r\nfunction LoadingButton({ type, name, route }) {\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      simulateNetworkRequest().then(() => setLoading(false));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  const handleClick = () => setLoading(true);\r\n\r\n  return (\r\n    <Link href={`/${route}`}>\r\n      <a\r\n        className={`btn btn-${type}`}\r\n        disabled={isLoading}\r\n        onClick={!isLoading ? handleClick : null}\r\n      >\r\n        {isLoading ? \"Loading…\" : name}\r\n      </a>\r\n    </Link>\r\n  );\r\n}\r\n\r\n\r\nexport default function DisplayItem({ initialItem, initialMachineData, error }) {\r\n  // Feature flag to show/hide the 3 Slack buttons\r\n  const SHOW_SLACK_BUTTONS =\r\n    process.env.NEXT_PUBLIC_SHOW_SLACK_BUTTONS === \"true\";\r\n\r\n  const router = useRouter();\r\n  const { signOut } = useAuth();\r\n  // const { id } = router.query;\r\n  const { id: idFromRouter } = router.query;\r\n  const initialId = initialItem?.id || idFromRouter;\r\n  // Use a single local var everywhere in this component\r\n  const id = initialId;\r\n\r\n  const [items, setItems] = useState({\r\n    name: initialItem?.name || \"\",\r\n    pn: Array.isArray(initialItem?.pn)\r\n      ? initialItem.pn\r\n      : (initialItem?.pn ? [initialItem.pn] : []),\r\n    sn: Array.isArray(initialItem?.sn)\r\n      ? initialItem.sn\r\n      : (initialItem?.sn ? [initialItem.sn] : []),\r\n\r\n    // hydrate these from initialItem so SSR renders fully on deploy\r\n    price: initialItem?.price ?? \"\",\r\n    status: initialItem?.status ?? \"\",\r\n    length: initialItem?.length ?? \"\",\r\n    width: initialItem?.width ?? \"\",\r\n    height: initialItem?.height ?? \"\",\r\n    poNumber: initialItem?.poNumber ?? \"\",\r\n    trackingNumber: initialItem?.trackingNumber ?? \"\",\r\n    localSN: initialItem?.localSN || \"\",\r\n    arrival_date: initialItem?.arrival_date || \"\",\r\n    visible: initialItem?.visible ?? true,\r\n  });\r\n  // ⬇️ put this INSIDE DisplayItem, after the related useState hooks\r\n  useEffect(() => {\r\n    if (!initialItem) return;\r\n\r\n    setDescriptions(initialItem.descriptions || []);\r\n    setWorkOrders(initialItem.workOrders || []);\r\n    setDOM(initialItem.DOM || \"\");\r\n\r\n    setItems(prev => ({\r\n      ...prev,\r\n      // only overwrite if SSR provided a value; otherwise keep what you have\r\n      status: initialItem.status ?? prev.status ?? \"\",\r\n      price: initialItem.price ?? prev.price ?? \"\",\r\n      length: initialItem.length ?? prev.length ?? \"\",\r\n      width: initialItem.width ?? prev.width ?? \"\",\r\n      height: initialItem.height ?? prev.height ?? \"\",\r\n      poNumber: initialItem.poNumber ?? prev.poNumber ?? \"\",\r\n      trackingNumber: initialItem.trackingNumber ?? prev.trackingNumber ?? \"\",\r\n    }));\r\n  }, [initialItem]);\r\n\r\n\r\n\r\n  const [newLocalFrom, setNewLocalFrom] = useState({\r\n    region: \"\",\r\n    section: { letter: \"\", number: \"\" },\r\n    bin: \"\",\r\n    pallet: \"\",\r\n  });\r\n  const [newLocalCurrent, setNewLocalCurrent] = useState({\r\n    region: \"\",\r\n    section: { letter: \"\", number: \"\" },\r\n    bin: \"\",\r\n    pallet: \"\",\r\n  });\r\n\r\n  // New states for separate client selections:\r\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\r\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\r\n\r\n  const [selectedMachine, setSelectedMachine] = useState(null);\r\n  const [selectedCurrentMachine, setSelectedCurrentMachine] = useState(null);\r\n\r\n  // whenever you pick a new “From” client or machine, clear the old From-loc:\r\n  // useEffect(() => {\r\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  // }, [selectedClientFrom, selectedMachine]);\r\n  // const didMountFrom = useRef(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (!didMountFrom.current) {\r\n  //     // first time through (the data-load phase), don’t clear\r\n  //     didMountFrom.current = true;\r\n  //     return;\r\n  //   }\r\n  //   // thereafter, when the user picks a new client or machine, clear:\r\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  //   setLocalLocFrom(\"\");\r\n  // }, [selectedClientFrom, selectedMachine]);\r\n\r\n  // whenever you pick a new “Current” client or machine, clear the old Current-loc:\r\n  // useEffect(() => {\r\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\r\n  // const [didFetch, setDidFetch] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (!didFetch) {\r\n  //     // we’re in the data-load phase, skip clearing\r\n  //     setDidFetch(true);\r\n  //     return;\r\n  //   }\r\n  //   // only clear on subsequent user changes:\r\n  //   setNewLocalCurrent({ region: \"\", section: {}, bin: \"\", pallet: \"\" });\r\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\r\n\r\n  // These arrays will be populated from Firebase.\r\n  const [pnOptions, setPnOptions] = useState([]);\r\n  const [snOptions, setSnOptions] = useState([]);\r\n\r\n  const [descriptions, setDescriptions] = useState([\r\n    { description: \"\", date: \"\" },\r\n  ]);\r\n  const [workOrders, setWorkOrders] = useState([{ workOrder: \"\", date: \"\" }]);\r\n  const [clients, setClients] = useState([]);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showErr, setShowErr] = useState(false);\r\n  const [Err, setErr] = useState(\"N/A\");\r\n  const [showDescModal, setShowDescModal] = useState(false);\r\n  const [showWoModal, setShowWoModal] = useState(false);\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  const [showMachineModal, setShowMachineModal] = useState(false);\r\n  const [showParentModal, setShowParentModal] = useState(false);\r\n  const [showCameraModal, setShowCameraModal] = useState(false);\r\n  const [showSaveModal, setShowSaveModal] = useState(false);\r\n  const [showPrintModal, setShowPrintModal] = useState(false);\r\n  const [machineSelectionModal, setMachineSelectionModal] = useState(false);\r\n  const [selectedDesc, setSelectedDesc] = useState(0);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  const [selectedParent, setSelectedParent] = useState(null);\r\n  const [TheMachine, setTheMachine] = useState(null);\r\n  const [machineOptions, setMachineOptions] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [capturedPhoto, setCapturedPhoto] = useState(null);\r\n  const [cameraFacing, setCameraFacing] = useState(\"environment\");\r\n  const [addToWebsite, setAddToWebsite] = useState(false);\r\n  const [machinePick, setMachinePick] = useState(false);\r\n  const [freqItem, setFreqItem] = useState(0);\r\n  const [usagePastYear, setUsagePastYear] = useState(0);\r\n  const [machineFrequency, setMachineFrequency] = useState(0);\r\n  // State for the extra (dimensions/price/DOM/PO Number) section.\r\n  const [showExtra, setShowExtra] = useState(false);\r\n  // State for the local warehouse location inputs.\r\n  const [localLocFrom, setLocalLocFrom] = useState(\"\");\r\n  const [localLocCurrent, setLocalLocCurrent] = useState(\"\");\r\n\r\n  // New state for DOM (Date of Manufacture)\r\n  const [DOM, setDOM] = useState(\"\");\r\n  // New state for OEM, Modality, and Model.\r\n  const [oem, setOem] = useState(\"\");\r\n  const [modality, setModality] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n\r\n  // More info modal state.\r\n  const [showInfoModal, setShowInfoModal] = useState(false);\r\n  const [itemName, setItemName] = useState(\"\");\r\n\r\n  const [machineFieldsInitialized, setMachineFieldsInitialized] =\r\n    useState(false);\r\n\r\n  // near the top of DisplayItem()\r\n  const [showLocalModalFrom, setShowLocalModalFrom] = useState(false);\r\n  const [showLocalModalCurrent, setShowLocalModalCurrent] = useState(false);\r\n\r\n  const openLocalModalFrom = () => setShowLocalModalFrom(true);\r\n  const closeLocalModalFrom = () => setShowLocalModalFrom(false);\r\n  const openLocalModalCurrent = () => setShowLocalModalCurrent(true);\r\n  const closeLocalModalCurrent = () => setShowLocalModalCurrent(false);\r\n\r\n  // at the top of DisplayItem()\r\n  const [showNewLocalModalFrom, setShowNewLocalModalFrom] = useState(false);\r\n  const [showNewLocalModalCurrent, setShowNewLocalModalCurrent] =\r\n    useState(false);\r\n\r\n  function formatLoc(loc) {\r\n    if (!loc) return \"\";\r\n    const parts = [];\r\n    if (loc.region) parts.push(loc.region);\r\n    if (loc.section?.letter && loc.section?.number)\r\n      parts.push(`${loc.section.letter}${loc.section.number}`);\r\n    if (loc.bin) parts.push(`B${loc.bin}`);\r\n    if (loc.pallet) parts.push(`P${loc.pallet}`);\r\n    return parts.join(\"–\");\r\n  }\r\n\r\n  // when the From-client changes, clear any old local-loc\r\n  // useEffect(() => {\r\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  // }, [selectedClientFrom]);\r\n\r\n  // // when the From-machine changes, clear any old local-loc\r\n  // useEffect(() => {\r\n  //   setNewLocalFrom({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  // }, [selectedMachine]);\r\n\r\n  // same for Current:\r\n  // useEffect(() => {\r\n  //   setNewLocalCurrent({ region: \"\", section: { letter: \"\", number: \"\" }, bin: \"\", pallet: \"\" });\r\n  // }, [selectedClientCurrent, selectedCurrentMachine]);\r\n\r\n  // const handleSendToInflow = async () => {\r\n  //   try {\r\n  //     const name = items.name;\r\n  //     const description = descriptions[selectedDesc]?.description || \"\";\r\n  //     // gather every photo URL from Firebase Storage\r\n  //     const imageUrls = photos.map((p) => p.url);\r\n  //     await InflowAPI.upsertProduct({ name, description, imageUrls });\r\n  //     alert(\"Sent to inFlow successfully!\");\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //     alert(\"Error sending to inFlow: \" + err.message);\r\n  //   }\r\n  // };\r\n\r\nconst handleSendToInflow = async () => {\r\n  try {\r\n    const name = (items.name || '').trim();\r\n    if (!name) {\r\n      alert('Item needs a name before sending to inFlow.');\r\n      return;\r\n    }\r\n\r\n    // Regular description (don’t also send a custom “Description” unless you truly have one)\r\n    const description = (descriptions[selectedDesc]?.description || '').trim();\r\n\r\n    // Photos already fetched from storage\r\n    const imageUrls = photos.map(p => p.url).filter(Boolean);\r\n\r\n    // SKU = your item id\r\n    const sku = (id ?? '').toString();\r\n\r\n   \r\n\r\n    // Basic normalizers\r\n    const toCSV = arr => (Array.isArray(arr) ? arr.filter(Boolean).join(', ') : (arr || ''));\r\n\r\n    // YYYY-MM-DD for the date field in inFlow\r\n    const arrivalISO = items.arrival_date\r\n      ? new Date(items.arrival_date).toISOString().slice(0, 10)\r\n      : '';\r\n\r\n    const pnStr = Array.isArray(items.pn) ? items.pn.filter(Boolean).join(', ') : (items.pn || '');\r\n    const snStr = Array.isArray(items.sn) ? items.sn.filter(Boolean).join(', ') : (items.sn || '');\r\n\r\n    // Most recent WO (you already have this)\r\n    const mostRecentWO =\r\n      workOrders?.length\r\n        ? workOrders.reduce((latest, cur) => (new Date(cur.date) > new Date(latest.date) ? cur : latest), workOrders[0])\r\n        : { workOrder: '', date: '' };\r\n\r\n    // Build the numbered fields (match your inFlow “Field 1..10”)\r\n    const customFields = {\r\n      custom1: (oem || '').trim(),                      // OEM   (dropdown)\r\n      custom2: (modality || '').trim(),                 // Modality (dropdown)\r\n      custom3: (model || '').trim(),                    // Model (dropdown)\r\n      custom4: (description || '').trim(),              // Description (text) - optional duplicate\r\n      custom5: (mostRecentWO.workOrder || '').trim(),   // Work Order (text)\r\n      custom6: (selectedClientFrom?.name || '').trim(), // From (text)\r\n      custom7: pnStr,                                   // Product Number (text)\r\n      custom8: snStr,                                   // Serial Number (text)\r\n      custom9: arrivalISO,                              // Arrival Date (date)\r\n      custom10: (selectedClientCurrent?.name || '').trim(), // Current (text)\r\n    };\r\n\r\n    console.log('[inFlow] customFields to send (numbered):', customFields);\r\n\r\n\r\n    const created = await InflowAPI.upsertProduct({\r\n      name,\r\n      description,\r\n      sku,\r\n      imageUrls,\r\n      customFields,\r\n    });\r\n\r\n    alert(`Sent to inFlow successfully. ID: ${created?.productId || created?.id || '(unknown)'}`);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert('Error sending to inFlow: ' + err.message);\r\n  }\r\n};\r\n\r\n\r\n  // const [storedMachine, setStoredMachine] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   // once any of these three change, re-merge:\r\n  //   if (TheMachine || selectedCurrentMachine || selectedMachine) {\r\n  //     const merged = updateMachineFields(\r\n  //       TheMachine,\r\n  //       selectedCurrentMachine,\r\n  //       selectedMachine\r\n  //     );\r\n  //     setOem(merged.oem);\r\n  //     setModality(merged.modality);\r\n  //     setModel(merged.model);\r\n  //   }\r\n  // }, [TheMachine, selectedCurrentMachine, selectedMachine]);\r\n\r\n  // whenever the “From” client changes:\r\n  useEffect(() => {\r\n    setShowLocalLocFrom(\r\n      selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\r\n    );\r\n  }, [selectedClientFrom]);\r\n\r\n  // whenever the “Current” client changes:\r\n  useEffect(() => {\r\n    setShowLocalLocCurrent(\r\n      selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\r\n    );\r\n  }, [selectedClientCurrent]);\r\n\r\n  // Fetch clients data.\r\n  useEffect(() => {\r\n    async function fetchClientsData() {\r\n      try {\r\n        const clientsData = await fetchClients();\r\n        console.log(clientsData);\r\n        setClients(clientsData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching clients: \", error);\r\n      }\r\n    }\r\n    fetchClientsData();\r\n  }, []);\r\n\r\n  // Fetch PN and SN options from Firebase.\r\n  useEffect(() => {\r\n    async function fetchPnSn() {\r\n      const db = firebase.firestore();\r\n      const snapshot = await db.collection(\"Test\").get();\r\n      let pnSet = new Set();\r\n      let snSet = new Set();\r\n      snapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        if (data.pn) pnSet.add(data.pn);\r\n        if (data.sn) snSet.add(data.sn);\r\n      });\r\n      const pnArray = [...pnSet];\r\n      const snArray = [...snSet];\r\n      setPnOptions(pnArray);\r\n      setSnOptions(snArray);\r\n    }\r\n    fetchPnSn();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id) fetchData();           // always hydrate on the client\r\n  }, [id]);\r\n\r\n  async function resolveClientFromMachine(\r\n    machineRef,\r\n    setClient,\r\n    setMachine,\r\n    isFrom = true\r\n  ) {\r\n    const machineDoc = await machineRef.get();\r\n    if (machineDoc.exists) {\r\n      const machineData = machineDoc.data();\r\n      setMachine({ id: machineDoc.id, ...machineData });\r\n\r\n      // Determine if the machine is \"interior socal\"\r\n      // const isSocalInterior = machineData.name && machineData.name.toLowerCase() === \"interior socal\";\r\n      // if (isSocalInterior) {\r\n      //   if (isFrom) {\r\n      //     setShowLocalLocFrom(true);\r\n      //   } else {\r\n      //     setShowLocalLocCurrent(true);\r\n      //   }\r\n      // } else {\r\n      // Optionally clear the flag if it is not \"interior socal\"\r\n      // if (isFrom) {\r\n      //   setShowLocalLocFrom(false);\r\n      // } else {\r\n      //   setShowLocalLocCurrent(false);\r\n      // }\r\n      // }\r\n      // new: fetch client name and combine both checks\r\n      const clientDoc =\r\n        machineData.client && typeof machineData.client.get === \"function\"\r\n          ? await machineData.client.get()\r\n          : null;\r\n      const clientName =\r\n        clientDoc && clientDoc.exists ? clientDoc.data().name : null;\r\n      const isSocalInterior =\r\n        machineData.name?.toLowerCase() === \"interior socal\";\r\n      const shouldShow = isSocalInterior || clientName === \"SoCalWarehouse\";\r\n\r\n      if (isFrom) {\r\n        setShowLocalLocFrom(shouldShow);\r\n      } else {\r\n        setShowLocalLocCurrent(shouldShow);\r\n      }\r\n\r\n      if (machineData.client && typeof machineData.client.get === \"function\") {\r\n        const clientDoc = await machineData.client.get();\r\n        if (clientDoc.exists) {\r\n          setClient({ id: clientDoc.id, ...clientDoc.data() });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const id = initialItem?.id || idFromRouter; // <- make sure id exists here\r\n    const db = firebase.firestore();\r\n    const doc = await db.collection(\"Test\").doc(id).get();\r\n    if (doc.exists) {\r\n      console.log(\"test\");\r\n      const data = doc.data();\r\n      const normalizedPN = Array.isArray(data.pn) ? data.pn : [data.pn];\r\n      const normalizedSN = Array.isArray(data.sn) ? data.sn : [data.sn];\r\n      setItems({\r\n        ...data,\r\n        pn: normalizedPN,\r\n        sn: normalizedSN,\r\n      });\r\n      setDescriptions(data.descriptions || []);\r\n      setWorkOrders(data.workOrders || []);\r\n      if (data.localLocFrom) setLocalLocFrom(data.localLocFrom);\r\n      if (data.localLocCurrent) setLocalLocCurrent(data.localLocCurrent);\r\n      if (data.DOM) {\r\n        setDOM(data.DOM);\r\n      }\r\n\r\n      // …after you do setItems, setDescriptions, etc.\r\n\r\n      // load the “newLocal” maps\r\n      if (data.newLocalFrom) setNewLocalFrom(data.newLocalFrom);\r\n      if (data.newLocalCurrent) setNewLocalCurrent(data.newLocalCurrent);\r\n\r\n      // Load PO Number if it exists.\r\n      if (data.poNumber) {\r\n        setItems((prev) => ({ ...prev, poNumber: data.poNumber }));\r\n      }\r\n\r\n      if (data.ClientFrom) {\r\n        const clientFromDoc = await data.ClientFrom.get();\r\n        if (clientFromDoc.exists) {\r\n          setSelectedClientFrom({\r\n            id: clientFromDoc.id,\r\n            ...clientFromDoc.data(),\r\n          });\r\n        }\r\n      }\r\n      if (data.ClientCurrent) {\r\n        const clientCurrentDoc = await data.ClientCurrent.get();\r\n        if (clientCurrentDoc.exists) {\r\n          setSelectedClientCurrent({\r\n            id: clientCurrentDoc.id,\r\n            ...clientCurrentDoc.data(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (\r\n        !data.ClientFrom &&\r\n        data.Machine &&\r\n        typeof data.Machine.get === \"function\"\r\n      ) {\r\n        console.log(\r\n          \"Entered resolveClientFromMachine for Machine (old style for From)\"\r\n        );\r\n        await resolveClientFromMachine(\r\n          data.Machine,\r\n          setSelectedClientFrom,\r\n          setSelectedMachine,\r\n          true\r\n        );\r\n      }\r\n      if (\r\n        !data.ClientCurrent &&\r\n        data.CurrentMachine &&\r\n        typeof data.CurrentMachine.get === \"function\"\r\n      ) {\r\n        console.log(\r\n          \"Entered resolveClientFromMachine for CurrentMachine (old style for Current)\"\r\n        );\r\n        await resolveClientFromMachine(\r\n          data.CurrentMachine,\r\n          setSelectedClientCurrent,\r\n          setSelectedCurrentMachine,\r\n          false\r\n        );\r\n      }\r\n\r\n      let machineFromData = null;\r\n      let machineCurrentData = null;\r\n\r\n      if (data.MachineFrom) {\r\n        const doc = await data.MachineFrom.get();\r\n        machineFromData = doc.exists ? doc.data() : null;\r\n        setSelectedMachine({ id: doc.id, ...doc.data() });\r\n      }\r\n      if (data.MachineCurrent) {\r\n        const doc = await data.MachineCurrent.get();\r\n        machineCurrentData = doc.exists ? doc.data() : null;\r\n        setSelectedCurrentMachine({ id: doc.id, ...doc.data() });\r\n      }\r\n      const nameFrom = machineFromData?.name?.toLowerCase();\r\n      const nameCurrent = machineCurrentData?.name?.toLowerCase();\r\n\r\n      // If the machine’s name is “interior socal”, show that branch:\r\n      // setShowLocalLocFrom(nameFrom === \"interior socal\");\r\n      // // Or if your Firestore already has a value for localLocFrom, show it anyway:\r\n      // if (data.localLocFrom) setShowLocalLocFrom(true);\r\n\r\n      // setShowLocalLocCurrent(nameCurrent === \"interior socal\");\r\n      // if (data.localLocCurrent) setShowLocalLocCurrent(true);\r\n      // new: combine machine-name OR client-name check, keep existing-data\r\n      setShowLocalLocFrom(\r\n        nameFrom === \"interior socal\" ||\r\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\" ||\r\n          Boolean(data.localLocFrom)\r\n      );\r\n      setShowLocalLocCurrent(\r\n        nameCurrent === \"interior socal\" ||\r\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\" ||\r\n          Boolean(data.localLocCurrent)\r\n      );\r\n\r\n      const theMachineData = data.TheMachine || null;\r\n\r\n      setTheMachine(theMachineData);\r\n      if (theMachineData) {\r\n        // pull both variants, prefer lowercase if it exists\r\n        const OEM = theMachineData.oem ?? theMachineData.OEM;\r\n        const Modality = theMachineData.modality ?? theMachineData.Modality;\r\n        const Model = theMachineData.model ?? theMachineData.Model;\r\n        setTheMachine({ ...theMachineData, OEM, Modality, Model });\r\n      }\r\n      // setStoredMachine(theMachineData);\r\n\r\n      // **right here** merge from the three sources you just fetched:\r\n      const merged = updateMachineFields(\r\n        theMachineData,\r\n        machineCurrentData,\r\n        machineFromData\r\n      );\r\n      setOem(merged.oem);\r\n      setModality(merged.modality);\r\n      setModel(merged.model);\r\n\r\n      console.log(\r\n        \"SelectedMachine:\",\r\n        selectedMachine,\r\n        \"SelectedCurrentMachine:\",\r\n        selectedCurrentMachine\r\n      );\r\n      // Show local loc inputs if applicable\r\n      // if (\r\n      //   selectedMachine &&\r\n      //   selectedMachine.name &&\r\n      //   selectedMachine.name.toLowerCase() === \"interior socal\"\r\n      // ) {\r\n      //   setShowLocalLocFrom(true);\r\n      // }\r\n      // if (\r\n      //   selectedCurrentMachine &&\r\n      //   selectedCurrentMachine.name &&\r\n      //   selectedCurrentMachine.name.toLowerCase() === \"interior socal\"\r\n      // ) {\r\n      //   setShowLocalLocCurrent(true);\r\n      // }\r\n\r\n      if (data.Parent) {\r\n        const parentDoc = await data.Parent.get();\r\n        setSelectedParent({ id: parentDoc.id, ...parentDoc.data() });\r\n      }\r\n\r\n      // Priority auto‑population of machine fields.\r\n      // const updatedFields = updateMachineFields(storedMachine, selectedCurrentMachine, selectedMachine);\r\n      // // console.log(\"Updated machine fields:\", updatedFields);\r\n      // setOem(updatedFields.oem);\r\n      // setModality(updatedFields.modality);\r\n      // setModel(updatedFields.model);\r\n\r\n      await fetchPhotos(id);\r\n      await checkIfAddedToWebsite(id);\r\n      await calculateItemFrequencyAndUsage(data.pn);\r\n    } else {\r\n      router.push({\r\n        pathname: \"../AddItem/NewItem\",\r\n        query: { signal: id },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Returns the value for a given field from the highest-priority source.\r\n  function getPriorityMachineField(\r\n    field,\r\n    theMachine,\r\n    currentMachine,\r\n    fromMachine\r\n  ) {\r\n    console.log(\"the machine: \", theMachine, \"field: \", field);\r\n    if (\r\n      theMachine &&\r\n      theMachine[field] &&\r\n      theMachine[field] !== \"N/A\" &&\r\n      theMachine[field].trim() !== \"\"\r\n    ) {\r\n      return theMachine[field];\r\n    }\r\n    if (\r\n      currentMachine &&\r\n      currentMachine[field] &&\r\n      currentMachine[field] !== \"N/A\" &&\r\n      currentMachine[field].trim() !== \"\"\r\n    ) {\r\n      return currentMachine[field];\r\n    }\r\n    if (\r\n      fromMachine &&\r\n      fromMachine[field] &&\r\n      fromMachine[field] !== \"N/A\" &&\r\n      fromMachine[field].trim() !== \"\"\r\n    ) {\r\n      return fromMachine[field];\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // Returns an object with updated OEM, modality, and model fields.\r\n  function updateMachineFields(theMachine, currentMachine, fromMachine) {\r\n    return {\r\n      oem: getPriorityMachineField(\r\n        \"OEM\",\r\n        theMachine,\r\n        currentMachine,\r\n        fromMachine\r\n      ),\r\n      modality: getPriorityMachineField(\r\n        \"Modality\",\r\n        theMachine,\r\n        currentMachine,\r\n        fromMachine\r\n      ),\r\n      model: getPriorityMachineField(\r\n        \"Model\",\r\n        theMachine,\r\n        currentMachine,\r\n        fromMachine\r\n      ),\r\n    };\r\n  }\r\n\r\n  const calculateItemFrequencyAndUsage = async (pn) => {\r\n    const db = firebase.firestore();\r\n    const currentDate = new Date();\r\n    const oneYearAgo = new Date();\r\n    oneYearAgo.setFullYear(currentDate.getFullYear() - 1);\r\n\r\n    const normalizedPN = pn !== undefined ? pn : \"\";\r\n    const itemsSnapshot = await db\r\n      .collection(\"Test\")\r\n      .where(\"pn\", \"==\", normalizedPN)\r\n      .get();\r\n\r\n    setFreqItem(itemsSnapshot.size);\r\n\r\n    let usagePastYear = 0;\r\n    itemsSnapshot.forEach((doc) => {\r\n      const itemData = doc.data();\r\n      itemData.workOrders.forEach((workOrder) => {\r\n        const workOrderDate = new Date(workOrder.date);\r\n        if (workOrderDate >= oneYearAgo && workOrderDate <= currentDate) {\r\n          usagePastYear++;\r\n        }\r\n      });\r\n    });\r\n    setUsagePastYear(usagePastYear);\r\n  };\r\n\r\n  const fetchMachine = async (machineId) => {\r\n    const db = firebase.firestore();\r\n    const doc = await db.collection(\"Machine\").doc(machineId).get();\r\n    if (doc.exists) {\r\n      const machineData = doc.data();\r\n      setTheMachine(machineData);\r\n      // re-merge all three sources with correct priority:\r\n      const merged = updateMachineFields(\r\n        machineData,\r\n        selectedCurrentMachine,\r\n        selectedMachine\r\n      );\r\n      setOem(merged.oem);\r\n      setModality(merged.modality);\r\n      setModel(merged.model);\r\n      const machinesSnapshot = await db\r\n        .collection(\"Machine\")\r\n        .where(\"Model\", \"==\", machineData.Model || machineData.model)\r\n        .get();\r\n      setMachineFrequency(machinesSnapshot.size);\r\n    } else {\r\n      console.error(\"Machine not found\");\r\n    }\r\n  };\r\n\r\n  const fetchPhotos = async (docID) => {\r\n    const storageRef = firebase.storage().ref();\r\n    const listRef = storageRef.child(`Parts/${docID}`);\r\n    try {\r\n      const res = await listRef.listAll();\r\n      const urls = await Promise.all(\r\n        res.items.map((item) => item.getDownloadURL())\r\n      );\r\n      console.log(\"Fetched photo URLs:\", urls);\r\n      setPhotos(urls.map((url) => ({ url, file: null })));\r\n    } catch (error) {\r\n      console.error(\"Error fetching photos: \", error);\r\n    }\r\n  };\r\n\r\n  const checkIfAddedToWebsite = async (docID) => {\r\n    const db = firebase.firestore();\r\n    const partsDoc = await db.collection(\"Parts\").doc(docID).get();\r\n    if (partsDoc.exists) {\r\n      setAddToWebsite(true);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleCloseErr = () => setShowErr(false);\r\n  const handleShowErr = () => setShowErr(true);\r\n  const handleCloseSaveModal = () => setShowSaveModal(false);\r\n  const handleClosePrintModal = () => setShowPrintModal(false);\r\n  const handleShowSaveModal = () => setShowSaveModal(true);\r\n  const handleShowPrintModal = () => setShowPrintModal(true);\r\n  const handleMachineSelectionModal = () => setMachineSelectionModal(false);\r\n  const handleCloseDescModal = () => setShowDescModal(false);\r\n  const handleShowDescModal = () => setShowDescModal(true);\r\n  const handleCloseWoModal = () => setShowWoModal(false);\r\n  const handleShowWoModal = () => setShowWoModal(true);\r\n  const handleCloseClientModal = () => setShowClientModal(false);\r\n  const handleShowClientModal = () => setShowClientModal(true);\r\n  const handleCloseMachineModal = () => setShowMachineModal(false);\r\n  const handleShowMachineModal = () => {\r\n    setShowMachineModal(true);\r\n    setShowClientModal(false);\r\n  };\r\n  const handleCloseParentModal = () => setShowParentModal(false);\r\n  const handleShowParentModal = () => setShowParentModal(true);\r\n\r\n  // When a client is selected from the client table.\r\n  const handleClientInfo = async (clientId) => {\r\n    // Clear any previously selected machine and local loc info for this branch.\r\n    if (machinePick) {\r\n      setSelectedMachine(null);\r\n      setShowLocalLocFrom(false);\r\n    } else {\r\n      setSelectedCurrentMachine(null);\r\n      setShowLocalLocCurrent(false);\r\n    }\r\n\r\n    const db = firebase.firestore();\r\n    const clientDoc = await db.collection(\"Client\").doc(clientId).get();\r\n    if (clientDoc.exists) {\r\n      const clientData = { id: clientDoc.id, ...clientDoc.data() };\r\n      if (machinePick) {\r\n        setSelectedClientFrom(clientData);\r\n      } else {\r\n        setSelectedClientCurrent(clientData);\r\n      }\r\n      // after setting selectedClientFrom/Current:\r\n      if (clientData.name === \"SoCalWarehouse\") {\r\n        if (machinePick) setShowLocalLocFrom(true);\r\n        else setShowLocalLocCurrent(true);\r\n      }\r\n      // Fetch machines for this client:\r\n      const machinePromises = clientData.machines.map((machineRef) =>\r\n        machineRef.get()\r\n      );\r\n      const machineDocs = await Promise.all(machinePromises);\r\n      const machines = machineDocs.map((machineDoc) => ({\r\n        id: machineDoc.id,\r\n        ...machineDoc.data(),\r\n      }));\r\n      setMachineOptions(machines);\r\n      // Close the client modal\r\n      handleCloseClientModal();\r\n    }\r\n  };\r\n\r\n  // Reordering function for dropdowns.\r\n  const reorderArray = (arr, selectedValue) => {\r\n    const newArr = arr.filter((val) => val !== selectedValue);\r\n    return [selectedValue, ...newArr];\r\n  };\r\n\r\n  const [addingNewPn, setAddingNewPn] = useState(false);\r\n  const [newPn, setNewPn] = useState(\"\");\r\n  const [addingNewSn, setAddingNewSn] = useState(false);\r\n  const [newSn, setNewSn] = useState(\"\");\r\n\r\n  const handlePnSelect = (e) => {\r\n    const selected = e.target.value;\r\n    setItems((prev) => {\r\n      let updatedPn = Array.isArray(prev.pn) ? [...prev.pn] : [];\r\n      updatedPn[0] = selected;\r\n      return { ...prev, pn: updatedPn };\r\n    });\r\n  };\r\n\r\n  const handleSnSelect = (e) => {\r\n    const selected = e.target.value;\r\n    setItems((prev) => {\r\n      let updatedSn = Array.isArray(prev.sn) ? [...prev.sn] : [];\r\n      updatedSn[0] = selected;\r\n      return { ...prev, sn: updatedSn };\r\n    });\r\n  };\r\n\r\n  const handleAddNewPn = () => {\r\n    if (newPn.trim() !== \"\") {\r\n      setItems((prev) => ({\r\n        ...prev,\r\n        pn: [...prev.pn, newPn.trim()],\r\n      }));\r\n    }\r\n    setNewPn(\"\");\r\n    setAddingNewPn(false);\r\n  };\r\n\r\n  const handleAddNewSn = () => {\r\n    if (newSn.trim() !== \"\") {\r\n      setItems((prev) => ({\r\n        ...prev,\r\n        sn: [...prev.sn, newSn.trim()],\r\n      }));\r\n    }\r\n    setNewSn(\"\");\r\n    setAddingNewSn(false);\r\n  };\r\n\r\n  // Generate custom document ID if needed.\r\n  const generateCustomID = () => {\r\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\r\n    return `AIS${randomNum}`;\r\n  };\r\n\r\n  function shallowClean(obj) {\r\n    const newObj = {};\r\n    for (const key in obj) {\r\n      console.log(key, obj[key]);\r\n      if (obj.hasOwnProperty(key)) {\r\n        newObj[key] = obj[key] === undefined ? \"\" : obj[key];\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n\r\n  async function toSend() {\r\n    const db = firebase.firestore();\r\n    const currentUser = firebase.auth().currentUser;\r\n    const userEmail = currentUser ? currentUser.email : \"unknown\";\r\n\r\n    // Always use the current state values for OEM, modality, and model.\r\n    const machineData = {\r\n      ...(TheMachine || {}),\r\n      oem: oem,\r\n      modality: modality,\r\n      model: model,\r\n    };\r\n\r\n    const formattedItems = { ...items, descriptions, workOrders };\r\n    // Remove any unused fields.\r\n    formattedItems.status = items.status || \"\";\r\n    formattedItems.DOM = DOM; // Date of Manufacture\r\n    formattedItems.localLocFrom = localLocFrom || \"\";\r\n    formattedItems.localLocCurrent = localLocCurrent || \"\";\r\n    formattedItems.date = items.date || \"\";\r\n    formattedItems.arrival_date = items.arrival_date || \"\"; // NEW: Arrival Date\r\n    formattedItems.poNumber = items.poNumber || \"\";\r\n    formattedItems.trackingNumber = items.trackingNumber || \"\";\r\n    formattedItems.TheMachine = machineData || {};\r\n    formattedItems.addedToWebsite = addToWebsite;\r\n\r\n    // NEW: Add the user's email under the field \"user\"\r\n    formattedItems.lastEdited = userEmail;\r\n\r\n    // Clean pn and sn arrays to replace undefined values with an empty string.\r\n    formattedItems.pn = (items.pn || []).map((value) =>\r\n      value === undefined ? \"\" : value\r\n    );\r\n    formattedItems.sn = (items.sn || []).map((value) =>\r\n      value === undefined ? \"\" : value\r\n    );\r\n\r\n    const fromDetails = buildLocalLocObject(newLocalFrom);\r\n    const currentDetails = buildLocalLocObject(newLocalCurrent);\r\n\r\n    console.log(\r\n      \"From Details: \" +\r\n        fromDetails.region +\r\n        \" \" +\r\n        fromDetails.section?.letter +\r\n        fromDetails.section?.number +\r\n        \" \" +\r\n        fromDetails.bin +\r\n        \" \" +\r\n        fromDetails.pallet\r\n    );\r\n    console.log(\r\n      \"Current Details: \" +\r\n        currentDetails.region +\r\n        \" \" +\r\n        currentDetails.section?.letter +\r\n        currentDetails.section?.number +\r\n        \" \" +\r\n        currentDetails.bin +\r\n        \" \" +\r\n        currentDetails.pallet\r\n    );\r\n\r\n    if (Object.keys(fromDetails).length) {\r\n      formattedItems.newLocalFrom = fromDetails;\r\n      formattedItems.localLocFrom = formatLoc(newLocalFrom) || \"\";\r\n    } else {\r\n      // all fields empty — force an empty string and remove any stray map\r\n      console.log(\"entered empty fromDetails else\");\r\n      formattedItems.localLocFrom = \"\";\r\n      formattedItems.newLocalFrom = {};\r\n    }\r\n\r\n    if (Object.keys(currentDetails).length) {\r\n      formattedItems.newLocalCurrent = currentDetails;\r\n      formattedItems.localLocCurrent = formatLoc(newLocalCurrent) || \"\";\r\n    } else {\r\n      // all fields empty — force an empty string and remove any stray map\r\n      formattedItems.localLocCurrent = \"\";\r\n      formattedItems.newLocalCurrent = {};\r\n    }\r\n\r\n    if (selectedMachine && selectedMachine.id) {\r\n      formattedItems.MachineFrom = db\r\n        .collection(\"Machine\")\r\n        .doc(selectedMachine.id);\r\n    }\r\n\r\n    if (selectedCurrentMachine && selectedCurrentMachine.id) {\r\n      formattedItems.MachineCurrent = db\r\n        .collection(\"Machine\")\r\n        .doc(selectedCurrentMachine.id);\r\n    }\r\n\r\n    if (selectedParent && selectedParent.id) {\r\n      formattedItems.Parent = db.collection(\"Test\").doc(selectedParent.id);\r\n    }\r\n\r\n    // NEW: Set separate client references.\r\n    if (selectedClientFrom && selectedClientFrom.id) {\r\n      formattedItems.ClientFrom = db\r\n        .collection(\"Client\")\r\n        .doc(selectedClientFrom.id);\r\n    }\r\n    if (selectedClientCurrent && selectedClientCurrent.id) {\r\n      formattedItems.ClientCurrent = db\r\n        .collection(\"Client\")\r\n        .doc(selectedClientCurrent.id);\r\n    }\r\n\r\n    // Only attach the richer “newLocal” map when the user actually filled something in\r\n    if (Object.keys(fromDetails).length) {\r\n      formattedItems.newLocalFrom = fromDetails;\r\n    }\r\n    if (Object.keys(currentDetails).length) {\r\n      formattedItems.newLocalCurrent = currentDetails;\r\n    }\r\n\r\n    let docId = id;\r\n    try {\r\n      if (docId) {\r\n        // Check if a localSN is provided and if it differs from the current docId.\r\n        const newDocId =\r\n          items.localSN && items.localSN.trim() !== \"\"\r\n            ? items.localSN.trim()\r\n            : docId;\r\n        if (docId !== newDocId) {\r\n          // Migrate: Create a new document with the newDocId.\r\n          await db.collection(\"Test\").doc(newDocId).set(formattedItems);\r\n\r\n          if (selectedMachine && selectedMachine.id) {\r\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\r\n            const machineDoc = await machineRef.get();\r\n            if (machineDoc.exists) {\r\n              await machineRef.update({\r\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                  db.collection(\"Test\").doc(newDocId)\r\n                ),\r\n              });\r\n            }\r\n          }\r\n\r\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\r\n            const currentMachineRef = db\r\n              .collection(\"Machine\")\r\n              .doc(selectedCurrentMachine.id);\r\n            const currentMachineDoc = await currentMachineRef.get();\r\n            if (currentMachineDoc.exists) {\r\n              await currentMachineRef.update({\r\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                  db.collection(\"Test\").doc(newDocId)\r\n                ),\r\n              });\r\n            }\r\n          }\r\n          // Delete the old document.\r\n          await db.collection(\"Test\").doc(docId).delete();\r\n          // Set docId to the new document ID.\r\n          docId = newDocId;\r\n        } else {\r\n          // Deep-clean the formattedItems to remove any undefined nested values.\r\n          const cleanFormattedItems = shallowClean(formattedItems);\r\n          await db.collection(\"Test\").doc(docId).update(cleanFormattedItems);\r\n\r\n          if (selectedMachine && selectedMachine.id) {\r\n            const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\r\n            const machineDoc = await machineRef.get();\r\n            if (machineDoc.exists) {\r\n              await machineRef.update({\r\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                  db.collection(\"Test\").doc(docId)\r\n                ),\r\n              });\r\n            }\r\n          }\r\n\r\n          if (selectedCurrentMachine && selectedCurrentMachine.id) {\r\n            const currentMachineRef = db\r\n              .collection(\"Machine\")\r\n              .doc(selectedCurrentMachine.id);\r\n            const currentMachineDoc = await currentMachineRef.get();\r\n            if (currentMachineDoc.exists) {\r\n              await currentMachineRef.update({\r\n                associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                  db.collection(\"Test\").doc(docId)\r\n                ),\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // For a new item, if localSN is provided, use it; otherwise, generate a custom ID.\r\n        docId =\r\n          items.localSN && items.localSN.trim() !== \"\"\r\n            ? items.localSN.trim()\r\n            : generateCustomID();\r\n        await db.collection(\"Test\").doc(docId).set(formattedItems);\r\n\r\n        if (selectedMachine && selectedMachine.id) {\r\n          const machineRef = db.collection(\"Machine\").doc(selectedMachine.id);\r\n          const machineDoc = await machineRef.get();\r\n          if (machineDoc.exists) {\r\n            await machineRef.update({\r\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                db.collection(\"Test\").doc(docId)\r\n              ),\r\n            });\r\n          }\r\n        }\r\n\r\n        if (selectedCurrentMachine && selectedCurrentMachine.id) {\r\n          const currentMachineRef = db\r\n            .collection(\"Machine\")\r\n            .doc(selectedCurrentMachine.id);\r\n          const currentMachineDoc = await currentMachineRef.get();\r\n          if (currentMachineDoc.exists) {\r\n            await currentMachineRef.update({\r\n              associatedParts: firebase.firestore.FieldValue.arrayUnion(\r\n                db.collection(\"Test\").doc(docId)\r\n              ),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      // Upload any new photos to Firebase Storage.\r\n      await uploadPhotos(docId);\r\n      console.log(\"Item saved and associatedParts updated!\");\r\n\r\n      // Redirect to the new URL using the new document id.\r\n      router.push(`/NewSearch/item/${docId}`);\r\n\r\n      // Optionally, you can also show a save confirmation modal:\r\n      handleShowSaveModal();\r\n    } catch (error) {\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n  }\r\n\r\n  // Additional state for local warehouse location inputs.\r\n  const [showLocalLocFrom, setShowLocalLocFrom] = useState(false);\r\n  const [showLocalLocCurrent, setShowLocalLocCurrent] = useState(false);\r\n\r\n  // When a machine is selected from the modal.\r\n  const handleSetSelectedMachine = (machine) => {\r\n    // const condition = (name) => name && name.toLowerCase() === \"interior socal\";\r\n    const isSocalInterior = machine.name?.toLowerCase() === \"interior socal\";\r\n\r\n    if (machinePick) {\r\n      setSelectedMachine({ id: machine.id, name: machine.name });\r\n      setShowLocalLocFrom(\r\n        isSocalInterior ||\r\n          selectedClientFrom?.name?.toLowerCase() === \"socalwarehouse\"\r\n      );\r\n    } else {\r\n      setSelectedCurrentMachine({ id: machine.id, name: machine.name });\r\n      setShowLocalLocCurrent(\r\n        isSocalInterior ||\r\n          selectedClientCurrent?.name?.toLowerCase() === \"socalwarehouse\"\r\n      );\r\n    }\r\n    fetchMachine(machine.id);\r\n    // Close the machine modal (assuming you're using showMachineModal to control it)\r\n    setShowMachineModal(false);\r\n  };\r\n\r\n  const uploadPhotos = async (docID) => {\r\n    const storageRef = firebase.storage().ref();\r\n    for (let i = 0; i < photos.length; i++) {\r\n      if (photos[i].file) {\r\n        const photoRef = storageRef.child(\r\n          `Parts/${docID}/${docID}${i === 0 ? \".jpg\" : `.${i + 1}.jpg`}`\r\n        );\r\n        const metadata = {\r\n          contentType: \"image/png\",\r\n        };\r\n        await photoRef.put(photos[i].file, metadata);\r\n        const url = await photoRef.getDownloadURL();\r\n        photos[i].url = url;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to handle printing the label.\r\n  const handlePrint = async () => {\r\n    if (!items.name) {\r\n      alert(\"Missing name\");\r\n      return;\r\n    }\r\n\r\n    let clientName = \"\";\r\n\r\n    // Attempt to fetch client name from the Machine document reference.\r\n    if (items.Machine && typeof items.Machine.get === \"function\") {\r\n      try {\r\n        const machineDoc = await items.Machine.get();\r\n        if (machineDoc.exists) {\r\n          const machineData = machineDoc.data();\r\n          if (\r\n            machineData.client &&\r\n            typeof machineData.client.get === \"function\"\r\n          ) {\r\n            const clientDoc = await machineData.client.get();\r\n            if (clientDoc.exists) {\r\n              clientName = clientDoc.data().name || \"\";\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching machine or client:\", error);\r\n      }\r\n    } else {\r\n      console.warn(\"No Machine reference available in the item\");\r\n    }\r\n    console.log(clientName, \":\", items.client);\r\n    // Fallback: if no client name was found, check items.client.\r\n    if (!clientName && items.client) {\r\n      if (typeof items.client.get === \"function\") {\r\n        try {\r\n          const clientDoc = await items.client.get();\r\n          if (clientDoc.exists) {\r\n            clientName = clientDoc.data().name || \"\";\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching client from items.client:\", error);\r\n        }\r\n      } else {\r\n        clientName = items.client;\r\n      }\r\n    }\r\n    console.log(\"descriptions:\", descriptions[selectedDesc]);\r\n    const payload = {\r\n      name: items.name,\r\n      pn: items.pn,\r\n      sn: items.sn,\r\n      wo: workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\",\r\n      client: clientName,\r\n      status: items.status,\r\n      local_sn: id,\r\n      descriptions: [\r\n        descriptions[selectedDesc] || { description: \"\", date: \"\" },\r\n      ],\r\n      date: items.dateCreated || \"\",\r\n      DOM: DOM,\r\n      oem: oem,\r\n      modality: modality,\r\n      model: model,\r\n      poNumber: items.poNumber,\r\n      arrival_date: items.arrival_date, // NEW: Include arrival_date\r\n    };\r\n\r\n    console.log(\"Payload for printing:\", payload);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://9d70-174-76-22-138.ngrok-free.app/print-label\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(payload),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      console.log(\"Print result:\", result.status);\r\n\r\n      if (result.status.includes(\"successfully.\")) {\r\n        handleShowPrintModal();\r\n      } else {\r\n        console.error(\"Error printing label:\", result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error printing label:\", error);\r\n    }\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // Only check that the Name field is filled out.\r\n    if (!items.name) {\r\n      handleShow(); // This shows the \"missing field\" modal.\r\n    } else {\r\n      toSend();\r\n    }\r\n  }\r\n\r\n  // Handlers for input changes.\r\n  const handleChange = (field) => (event) => {\r\n    const value = event.target ? event.target.value : event.value;\r\n    setItems((prevItems) => ({ ...prevItems, [field]: value }));\r\n  };\r\n\r\n  const addDescription = () => {\r\n    setDescriptions([...descriptions, { description: \"\", date: \"\" }]);\r\n  };\r\n\r\n  const removeDescription = (index) => {\r\n    setDescriptions(descriptions.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleDescriptionChange = (index, field, value) => {\r\n    const newDescriptions = descriptions.map((desc, i) =>\r\n      i === index ? { ...desc, [field]: value } : desc\r\n    );\r\n    setDescriptions(newDescriptions);\r\n  };\r\n\r\n  const addWorkOrder = () => {\r\n    setWorkOrders([...workOrders, { workOrder: \"\", date: \"\" }]);\r\n  };\r\n\r\n  const removeWorkOrder = (index) => {\r\n    setWorkOrders(workOrders.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleWorkOrderChange = (index, field, value) => {\r\n    const newWorkOrders = workOrders.map((wo, i) =>\r\n      i === index ? { ...wo, [field]: value } : wo\r\n    );\r\n    setWorkOrders(newWorkOrders);\r\n  };\r\n\r\n  const listDescriptions = () => {\r\n    setShowDescModal(true);\r\n  };\r\n\r\n  const selectDescription = (index) => {\r\n    setSelectedDesc(index);\r\n    setShowDescModal(false);\r\n  };\r\n\r\n  const handleShowCameraModal = () => {\r\n    setShowCameraModal(true);\r\n  };\r\n\r\n  const handleCloseCameraModal = () => {\r\n    setShowCameraModal(false);\r\n    setCapturedPhoto(null);\r\n  };\r\n\r\n  const handleCapture = (err, result) => {\r\n    if (result) {\r\n      setCapturedPhoto(result);\r\n    }\r\n  };\r\n\r\n  const savePhoto = () => {\r\n    setPhotos((prevPhotos) => [\r\n      ...prevPhotos,\r\n      { file: capturedPhoto, url: URL.createObjectURL(capturedPhoto) },\r\n    ]);\r\n    setCapturedPhoto(null);\r\n    handleCloseCameraModal();\r\n  };\r\n\r\n  const removePhoto = (index) => {\r\n    setPhotos(photos.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const mostRecentWorkOrder =\r\n    workOrders && workOrders.length > 0\r\n      ? workOrders.reduce((latest, current) => {\r\n          const latestDate = new Date(latest.date);\r\n          const currentDate = new Date(current.date);\r\n          return currentDate > latestDate ? current : latest;\r\n        }, workOrders[0])\r\n      : {};\r\n\r\n  const capturePhoto = () => {\r\n    const video = document.querySelector(\"video\");\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    canvas.toBlob((blob) => {\r\n      setCapturedPhoto(blob);\r\n    }, \"image/png\");\r\n  };\r\n\r\n  const handleShowInfoModal = async () => {\r\n    const db = firebase.firestore();\r\n    try {\r\n      const doc = await db.collection(\"Test\").doc(id).get();\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n        setItemName(data.name || \"N/A\");\r\n        setShowInfoModal(true);\r\n      } else {\r\n        console.error(\"Item not found\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching item info:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCloseInfoModal = () => setShowInfoModal(false);\r\n\r\n  const handlePnChange = (index, value) => {\r\n    setItems((prev) => {\r\n      const newPn = [...prev.pn];\r\n      newPn[index] = value;\r\n      return { ...prev, pn: newPn };\r\n    });\r\n  };\r\n\r\n  const addPn = () => {\r\n    setItems((prev) => ({\r\n      ...prev,\r\n      pn: [...prev.pn, \"\"],\r\n    }));\r\n  };\r\n\r\n  const handleSnChange = (index, value) => {\r\n    setItems((prev) => {\r\n      const newSn = [...prev.sn];\r\n      newSn[index] = value;\r\n      return { ...prev, sn: newSn };\r\n    });\r\n  };\r\n\r\n  const addSn = () => {\r\n    setItems((prev) => ({\r\n      ...prev,\r\n      sn: [...prev.sn, \"\"],\r\n    }));\r\n  };\r\n\r\n  const browseInputRef = useRef(null);\r\n\r\n  const handleBrowsePhotos = () => {\r\n    if (browseInputRef.current) {\r\n      browseInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleFilesSelected = (e) => {\r\n    const files = e.target.files;\r\n    if (files.length) {\r\n      const newPhotos = [];\r\n      for (let i = 0; i < files.length; i++) {\r\n        newPhotos.push({\r\n          file: files[i],\r\n          url: URL.createObjectURL(files[i]),\r\n        });\r\n      }\r\n      setPhotos((prevPhotos) => [...prevPhotos, ...newPhotos]);\r\n    }\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const [currentPnIndex, setCurrentPnIndex] = useState(0);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [currentSnIndex, setCurrentSnIndex] = useState(0);\r\n  const [showSnDropdown, setShowSnDropdown] = useState(false);\r\n\r\n  const handleAddNewClient = () => {\r\n    const randomNum = Math.floor(10000 + Math.random() * 90000);\r\n    router.push(\r\n      `../client/AIS${randomNum}/addClient?from=item&itemId=${id || \"\"}`\r\n    );\r\n  };\r\n\r\n  const handleBluefolderButton = async () => {\r\n    // Check that the work order field is filled out (using workOrders[0].workOrder as current)\r\n    const currentWorkOrder =\r\n      workOrders && workOrders.length > 0 ? workOrders[0].workOrder : \"\";\r\n    if (!currentWorkOrder) {\r\n      alert(\r\n        \"Please fill out the work order field before adding to BlueFolder.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Build the payload to send to your proxy endpoint.\r\n    const payload = {\r\n      name: items.name,\r\n      pn: items.pn[0] || \"\",\r\n      sn: items.sn[0] || \"\",\r\n      status: items.status,\r\n      description: descriptions[selectedDesc]?.description || \"\",\r\n      workOrder: currentWorkOrder,\r\n      localsn: items.localSN || \"\",\r\n    };\r\n\r\n    try {\r\n      // Replace with your ngrok URL and appropriate endpoint path (e.g., /api/bluefolder)\r\n      const response = await fetch(\r\n        \"https://9d70-174-76-22-138.ngrok-free.app/bluefolder\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(payload),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      alert(\"BlueFolder service item added successfully!\");\r\n      console.log(\"BlueFolder result:\", result);\r\n    } catch (error) {\r\n      console.error(\"BlueFolder error:\", error);\r\n      alert(\"Error adding data to BlueFolder.\");\r\n    }\r\n  };\r\n\r\n// // Slack integration handler.\r\n// const handleAddToSlack = async (which) => {\r\n//   try {\r\n//     const pn0 = Array.isArray(items.pn) ? items.pn[0] : items.pn;\r\n//     const sn0 = Array.isArray(items.sn) ? items.sn[0] : items.sn;\r\n\r\n//     const linkUrl = typeof window !== \"undefined\" ? window.location.href : \"\";\r\n//     const safeName = (items?.name || id || \"Untitled\").trim();\r\n//     const title = `${safeName}${id ? ` (${id})` : \"\"}`;\r\n\r\n//     console.log(\"[SLACK][handleAddToSlack] which:\", which);\r\n//     console.log(\"[SLACK] title:\", title);\r\n//     console.log(\"[SLACK] PN:\", items.pn, \"SN:\", items.sn);\r\n\r\n//     const resp = await fetch(\"/api/slack/add-to-list\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({\r\n//         listKey: which,      // \"shipping\" | \"receiving\" | \"tasks\"\r\n//         title,\r\n//         pn: items.pn,\r\n//         sn: items.sn,\r\n//         // keeping it minimal by design while we stabilize PN/SN\r\n//         linkUrl,\r\n//       }),\r\n//     });\r\n// Slack integration handler (drop-in replacement)\r\n// Slack integration handler (drop-in replacement)\r\n\r\n\r\n// Slack integration handler (client) — replace your existing handleAddToSlack with this\r\nconst handleAddToSlack = async (which = \"shipping\") => {\r\n  try {\r\n    const safeName = (items?.name || id || \"Untitled\").trim();\r\n    const title = `${safeName}${id ? ` (${id})` : \"\"}`;\r\n\r\n    const pn0 = Array.isArray(items?.pn) ? items.pn[0] : items?.pn;\r\n    const sn0 = Array.isArray(items?.sn) ? items.sn[0] : items?.sn;\r\n    const pn_sn = [pn0 && `PN: ${pn0}`, sn0 && `SN: ${sn0}`]\r\n      .filter(Boolean)\r\n      .join(\"  \");\r\n\r\n    const mostRecentWO =\r\n      (workOrders && workOrders.length)\r\n        ? [...workOrders].sort((a,b) => new Date(b?.date||0) - new Date(a?.date||0))[0]?.workOrder\r\n        : \"\";\r\n\r\n    const description =\r\n      (selectedDesc != null && descriptions?.[selectedDesc])\r\n        ? (descriptions[selectedDesc].description || \"\")\r\n        : (items?.description || \"\");\r\n\r\n    const tracking = items?.trackingNumber ?? items?.tracking ?? \"\";\r\n    const local_sn = id || items?.localSN || \"\";\r\n\r\n    const photoUrls = Array.isArray(photos)\r\n      ? photos.map(p => p?.url).filter(Boolean)\r\n      : [];\r\n\r\n    const resp = await fetch(\"/api/slack/add-to-list\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        listKey: which,\r\n        title,\r\n        pn_sn,                 // <— server expects this\r\n        work_order: mostRecentWO || \"\",\r\n        local_sn,\r\n        tracking,\r\n        description: (description || \"\").trim(),\r\n        photoUrls,             // array of https URLs\r\n      }),\r\n    });\r\n\r\n    const json = await resp.json();\r\n    console.log(\"[SLACK][handleAddToSlack] response:\", json);\r\n    if (json?.debug?.steps) console.table(json.debug.steps);\r\n    if (json?.debug?.photos) console.table(json.debug.photos);\r\n\r\n    if (!resp.ok || !json?.ok) {\r\n      setErr(`Slack add failed: ${json?.error || \"unknown error\"}`);\r\n      setShowErr(true);\r\n      return;\r\n    }\r\n\r\n    alert(\r\n      `Added to Slack ${which === \"shipping\" ? \"Shipping\" : which === \"receiving\" ? \"Receiving\" : \"Tasks\"} list.`\r\n    );\r\n  } catch (e) {\r\n    console.error(e);\r\n    setErr(\"Error adding to Slack\");\r\n    setShowErr(true);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <LoggedIn>\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Error</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Missing field</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={showErr} onHide={handleCloseErr}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Error</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{Err}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleCloseErr}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={showSaveModal} onHide={handleCloseSaveModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Save Confirmation</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Data has been saved successfully.</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleCloseSaveModal}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal show={showPrintModal} onHide={handleClosePrintModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Print Confirmation</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Info has been sent to print.</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClosePrintModal}>\r\n              Ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={showDescModal} onHide={handleCloseDescModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Descriptions</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Button variant=\"primary\" className=\"mb-3\" onClick={addDescription}>\r\n              Add Description\r\n            </Button>\r\n            {descriptions.map((desc, index) => (\r\n              <Row key={index} className=\"mb-3\">\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  className=\"w-100\"\r\n                  onClick={() => selectDescription(index)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <span>{desc.description || \"Description\"}</span>\r\n                    <span\r\n                      style={{\r\n                        borderLeft: \"1px solid #ccc\",\r\n                        paddingLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      {desc.date || \"Date\"}\r\n                    </span>\r\n                  </div>\r\n                </Button>\r\n              </Row>\r\n            ))}\r\n            <Button variant=\"primary\" onClick={handleCloseDescModal}>\r\n              OK\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <Modal show={showWoModal} onHide={handleCloseWoModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Work Orders</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"mb-3\"\r\n              onClick={addWorkOrder}\r\n              style={{ marginBottom: \"1rem\" }}\r\n            >\r\n              Add Work Order\r\n            </Button>\r\n            {workOrders.map((wo, index) => (\r\n              <Row key={index} className=\"mb-3\">\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Work Order\"\r\n                    value={wo.workOrder}\r\n                    onChange={(e) =>\r\n                      handleWorkOrderChange(index, \"workOrder\", e.target.value)\r\n                    }\r\n                    style={{ marginBottom: \"0.5rem\" }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"Date\"\r\n                    value={wo.date}\r\n                    onChange={(e) =>\r\n                      handleWorkOrderChange(index, \"date\", e.target.value)\r\n                    }\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => removeWorkOrder(index)}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n            <Button variant=\"primary\" onClick={handleCloseWoModal}>\r\n              OK\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <ClientInfoModal\r\n          show={showMachineModal}\r\n          handleClose={handleCloseMachineModal}\r\n          selectedClient={selectedClient}\r\n          machineOptions={machineOptions}\r\n          setSelectedMachine={handleSetSelectedMachine}\r\n        />\r\n\r\n        <Modal show={showClientModal} onHide={handleCloseClientModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Select Client</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search by name\"\r\n              className=\"mb-3\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n            <ClientTable\r\n              clients={clients.filter((client) =>\r\n                (client.name || \"\").toLowerCase().includes(search.toLowerCase())\r\n              )}\r\n              onSelectClient={handleClientInfo}\r\n              onInfoClick={handleClientInfo}\r\n              clearSelection={() => handleClientInfo(null)}\r\n              onAddClient={handleAddNewClient}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <ParentModal\r\n          show={showParentModal}\r\n          handleClose={handleCloseParentModal}\r\n          setSelectedParent={setSelectedParent}\r\n        />\r\n\r\n        <MachineSelectionModal\r\n          show={machineSelectionModal}\r\n          handleClose={() => setMachineSelectionModal(false)}\r\n          setMachine={setTheMachine}\r\n        />\r\n\r\n        <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Take a Photo</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"camera\">\r\n              {!capturedPhoto && (\r\n                <BarcodeScannerComponent\r\n                  width=\"100%\"\r\n                  height={300}\r\n                  onUpdate={handleCapture}\r\n                  facingMode={cameraFacing}\r\n                />\r\n              )}\r\n              {capturedPhoto && (\r\n                <div className=\"photo-preview\">\r\n                  <img\r\n                    src={URL.createObjectURL(capturedPhoto)}\r\n                    alt=\"captured\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {!capturedPhoto ? (\r\n              <>\r\n                <Button\r\n                  onClick={capturePhoto}\r\n                  style={{\r\n                    borderRadius: \"50%\",\r\n                    width: \"60px\",\r\n                    height: \"60px\",\r\n                    position: \"absolute\",\r\n                    left: \"50%\",\r\n                    transform: \"translateX(-50%)\",\r\n                    bottom: \"10px\",\r\n                  }}\r\n                >\r\n                  📷\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    setCameraFacing((prev) =>\r\n                      prev === \"environment\" ? \"user\" : \"environment\"\r\n                    )\r\n                  }\r\n                >\r\n                  Flip Camera\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\r\n                  Cancel\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => setCapturedPhoto(null)}\r\n                >\r\n                  Retake\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={savePhoto}>\r\n                  OK\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <InfoModal\r\n          show={showInfoModal}\r\n          handleClose={handleCloseInfoModal}\r\n          itemName={items.name}\r\n          dimensions={items.length + \",\" + items.width + \",\" + items.height}\r\n          price={items.price}\r\n          freqI={freqItem}\r\n          freqM={machineFrequency}\r\n          usage={usagePastYear}\r\n        />\r\n\r\n        <Container\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <div className=\"w-100\" style={{ maxWidth: \"600px\" }}>\r\n            <Card className=\"align-items-center justify-content-center\">\r\n              <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Item</h2>\r\n                <Form onSubmit={handleSubmit}>\r\n                  {/* Row for Name and PN */}\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          value={items.name}\r\n                          onChange={handleChange(\"name\")}\r\n                        />\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group controlId=\"pn\">\r\n                        <Form.Label>Product Number</Form.Label>\r\n                        <div style={{ position: \"relative\" }}>\r\n                          <InputGroup>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              value={items.pn[currentPnIndex] || \"\"}\r\n                              onChange={(e) =>\r\n                                handlePnChange(currentPnIndex, e.target.value)\r\n                              }\r\n                            />\r\n                            <Button\r\n                              variant=\"outline-secondary\"\r\n                              onClick={() => setShowDropdown(!showDropdown)}\r\n                            >\r\n                              &#9662;\r\n                            </Button>\r\n                            <InputGroup.Text>\r\n                              <Button\r\n                                variant=\"outline-secondary\"\r\n                                onClick={() => setAddingNewPn(true)}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </InputGroup.Text>\r\n                          </InputGroup>\r\n                          {showDropdown && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: \"100%\",\r\n                                left: 0,\r\n                                right: 0,\r\n                                backgroundColor: \"white\",\r\n                                border: \"1px solid #ccc\",\r\n                                zIndex: 1000,\r\n                                maxHeight: \"150px\",\r\n                                overflowY: \"auto\",\r\n                              }}\r\n                            >\r\n                              {pnOptions.map((pnOption, idx) => (\r\n                                <div\r\n                                  key={idx}\r\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\r\n                                  onClick={() => {\r\n                                    setCurrentPnIndex(idx);\r\n                                    setShowDropdown(false);\r\n                                  }}\r\n                                >\r\n                                  {pnOption}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {addingNewPn && (\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter new PN\"\r\n                            value={newPn}\r\n                            onChange={(e) => setNewPn(e.target.value)}\r\n                            onBlur={handleAddNewPn}\r\n                            onKeyDown={(e) =>\r\n                              e.key === \"Enter\" && handleAddNewPn()\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* Row for SN and Status */}\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <Form.Group controlId=\"sn\">\r\n                        <Form.Label>Serial Number</Form.Label>\r\n                        <div style={{ position: \"relative\" }}>\r\n                          <InputGroup>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              value={items.sn[currentSnIndex] || \"\"}\r\n                              onChange={(e) =>\r\n                                handleSnChange(currentSnIndex, e.target.value)\r\n                              }\r\n                            />\r\n                            <Button\r\n                              variant=\"outline-secondary\"\r\n                              onClick={() => setShowSnDropdown(!showSnDropdown)}\r\n                            >\r\n                              &#9662;\r\n                            </Button>\r\n                            <InputGroup.Text>\r\n                              <Button\r\n                                variant=\"outline-secondary\"\r\n                                onClick={() => setAddingNewSn(true)}\r\n                              >\r\n                                +\r\n                              </Button>\r\n                            </InputGroup.Text>\r\n                          </InputGroup>\r\n                          {showSnDropdown && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: \"100%\",\r\n                                left: 0,\r\n                                right: 0,\r\n                                backgroundColor: \"white\",\r\n                                border: \"1px solid #ccc\",\r\n                                zIndex: 1000,\r\n                                maxHeight: \"150px\",\r\n                                overflowY: \"auto\",\r\n                              }}\r\n                            >\r\n                              {snOptions.map((snOption, idx) => (\r\n                                <div\r\n                                  key={idx}\r\n                                  style={{ padding: \"8px\", cursor: \"pointer\" }}\r\n                                  onClick={() => {\r\n                                    setCurrentSnIndex(idx);\r\n                                    setShowSnDropdown(false);\r\n                                  }}\r\n                                >\r\n                                  {snOption}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        {addingNewSn && (\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter new SN\"\r\n                            value={newSn}\r\n                            onChange={(e) => setNewSn(e.target.value)}\r\n                            onBlur={handleAddNewSn}\r\n                            onKeyDown={(e) =>\r\n                              e.key === \"Enter\" && handleAddNewSn()\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Group controlId=\"status\">\r\n                        <Form.Label>Status</Form.Label>\r\n                        <Form.Select\r\n                          value={items.status || \"\"}\r\n                          onChange={handleChange(\"status\")}\r\n                        >\r\n                          <option value=\"\">Select status</option>\r\n                          <option value=\"Good\">Good</option>\r\n                          <option value=\"Bad\">Bad</option>\r\n                          <option value=\"Unknown\">Unknown</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* Row for OEM, Modality, Model */}\r\n                  <Row className=\"mb-3\">\r\n                    <Col>\r\n                      <Form.Label>OEM</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"OEM\"\r\n                        value={oem}\r\n                        onChange={(e) => setOem(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Modality</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Modality\"\r\n                        value={modality}\r\n                        onChange={(e) => setModality(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label>Model</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Model\"\r\n                        value={model}\r\n                        onChange={(e) => setModel(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  {/* Work Orders and Inline Description Section */}\r\n                  <div style={{ marginBottom: \"1rem\", marginTop: \"1rem\" }}>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <Button\r\n                        variant=\"outline-secondary\"\r\n                        onClick={handleShowWoModal}\r\n                        className=\"me-2\"\r\n                      >\r\n                        Manage Work Orders\r\n                      </Button>\r\n                      {workOrders.length > 0 && (\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                          <Form.Label>Work Order</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Most Recent Work Order\"\r\n                            value={mostRecentWorkOrder.workOrder}\r\n                            onChange={(e) =>\r\n                              handleWorkOrderChange(\r\n                                workOrders.indexOf(mostRecentWorkOrder),\r\n                                \"workOrder\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                            style={{ marginBottom: \"0.5rem\" }}\r\n                          />\r\n                          <Form.Label>Date</Form.Label>\r\n                          <Form.Control\r\n                            type=\"date\"\r\n                            placeholder=\"Work Order Date\"\r\n                            value={mostRecentWorkOrder.date}\r\n                            onChange={(e) =>\r\n                              handleWorkOrderChange(\r\n                                workOrders.indexOf(mostRecentWorkOrder),\r\n                                \"date\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                            style={{ marginBottom: \"0.5rem\" }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div style={{ marginBottom: \"1rem\" }}>\r\n                      <Form.Group controlId=\"desc\">\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          onClick={listDescriptions}\r\n                          className=\"mb-2 me-2\"\r\n                        >\r\n                          List Descriptions\r\n                        </Button>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          placeholder=\"Enter description\"\r\n                          value={descriptions[selectedDesc]?.description || \"\"}\r\n                          onChange={(e) =>\r\n                            handleDescriptionChange(\r\n                              selectedDesc,\r\n                              \"description\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          style={{ marginBottom: \"0.5rem\" }}\r\n                        />\r\n                        <Form.Control\r\n                          type=\"date\"\r\n                          value={descriptions[selectedDesc]?.date || \"\"}\r\n                          onChange={(e) =>\r\n                            handleDescriptionChange(\r\n                              selectedDesc,\r\n                              \"date\",\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                          style={{\r\n                            marginTop: \"0.5rem\",\r\n                            marginBottom: \"0.5rem\",\r\n                          }}\r\n                        />\r\n                      </Form.Group>\r\n                    </div>\r\n                  </div>\r\n                  {/* Machine Selection Row */}\r\n                  <div style={{ marginBottom: \"1rem\" }}>\r\n                    <Row className=\"mb-3\">\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          onClick={() => {\r\n                            setMachinePick(true);\r\n                            handleShowClientModal();\r\n                          }}\r\n                          className=\"me-2\"\r\n                        >\r\n                          Select From\r\n                        </Button>\r\n                        {selectedClientFrom && (\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid #ccc\",\r\n                              padding: \"0.75rem\",\r\n                              borderRadius: \"4px\",\r\n                              marginBottom: \"1rem\",\r\n                            }}\r\n                          >\r\n                            <p>\r\n                              <strong>Selected Client (From):</strong>{\" \"}\r\n                              {selectedClientFrom.name}\r\n                            </p>\r\n                            <div style={{ marginTop: \"0.5rem\" }}>\r\n                              <Button\r\n                                variant=\"outline-secondary\"\r\n                                onClick={() => setShowMachineModal(true)}\r\n                              >\r\n                                Select Machine for {selectedClientFrom.name}\r\n                              </Button>\r\n                              {selectedMachine && (\r\n                                <>\r\n                                  <p style={{ marginTop: \"0.5rem\" }}>\r\n                                    <strong>Selected Machine (From):</strong>{\" \"}\r\n                                    {selectedMachine.name}\r\n                                  </p>\r\n                                  {showLocalLocFrom && (\r\n                                    <>\r\n                                      <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={() =>\r\n                                          setShowNewLocalModalFrom(true)\r\n                                        }\r\n                                        className=\"w-100 mb-2\"\r\n                                      >\r\n                                        {/* build a little helper inline: region-section-bin-pallet */}\r\n                                        {[\r\n                                          newLocalFrom.region,\r\n                                          newLocalFrom.section?.letter +\r\n                                            newLocalFrom.section?.number,\r\n                                          newLocalFrom.bin &&\r\n                                            `B${newLocalFrom.bin}`,\r\n                                          newLocalFrom.pallet &&\r\n                                            `P${newLocalFrom.pallet}`,\r\n                                        ]\r\n                                          .filter(Boolean)\r\n                                          .join(\"-\")}\r\n                                        {/* e.g. “E-A7-B3-P2” */}\r\n                                      </Button>\r\n\r\n                                      <Modal\r\n                                        show={showNewLocalModalFrom}\r\n                                        onHide={() =>\r\n                                          setShowNewLocalModalFrom(false)\r\n                                        }\r\n                                        centered\r\n                                      >\r\n                                        <Modal.Header>\r\n                                          <Modal.Title>\r\n                                            Edit Local Loc (From)\r\n                                          </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                          <NewLocal\r\n                                            selectedClient={selectedClientFrom}\r\n                                            showLocalLoc={showNewLocalModalFrom}\r\n                                            value={newLocalFrom}\r\n                                            onChange={setNewLocalFrom}\r\n                                            onSave={(p) => {\r\n                                              setNewLocalFrom(p);\r\n                                              setShowNewLocalModalFrom(false);\r\n                                            }}\r\n                                            onCancel={() =>\r\n                                              setShowNewLocalModalFrom(false)\r\n                                            }\r\n                                          />\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                          <Button\r\n                                            variant=\"secondary\"\r\n                                            onClick={() => setShowNewLocalModalFrom(false)}\r\n                                          >\r\n                                            Close\r\n                                          </Button>\r\n                                        </Modal.Footer> */}\r\n                                      </Modal>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          onClick={() => {\r\n                            setMachinePick(false);\r\n                            handleShowClientModal();\r\n                          }}\r\n                          className=\"me-2\"\r\n                        >\r\n                          Select Current\r\n                        </Button>\r\n                        {selectedClientCurrent && (\r\n                          <div\r\n                            style={{\r\n                              border: \"1px solid #ccc\",\r\n                              padding: \"0.75rem\",\r\n                              borderRadius: \"4px\",\r\n                              marginBottom: \"1rem\",\r\n                            }}\r\n                          >\r\n                            <p>\r\n                              <strong>Selected Client (Current):</strong>{\" \"}\r\n                              {selectedClientCurrent.name}\r\n                            </p>\r\n                            <div style={{ marginTop: \"0.5rem\" }}>\r\n                              <Button\r\n                                variant=\"outline-secondary\"\r\n                                onClick={() => setShowMachineModal(true)}\r\n                              >\r\n                                Select Machine for {selectedClientCurrent.name}\r\n                              </Button>\r\n                              {selectedCurrentMachine && (\r\n                                <>\r\n                                  <p style={{ marginTop: \"0.5rem\" }}>\r\n                                    <strong>Selected Machine (Current):</strong>{\" \"}\r\n                                    {selectedCurrentMachine.name}\r\n                                  </p>\r\n                                  {showLocalLocCurrent && (\r\n                                    <>\r\n                                      <Button\r\n                                        variant=\"outline-secondary\"\r\n                                        onClick={() =>\r\n                                          setShowNewLocalModalCurrent(true)\r\n                                        }\r\n                                        className=\"w-100 mb-2\"\r\n                                      >\r\n                                        {[\r\n                                          newLocalCurrent.region,\r\n                                          newLocalCurrent.section?.letter +\r\n                                            newLocalCurrent.section?.number,\r\n                                          newLocalCurrent.bin &&\r\n                                            `B${newLocalCurrent.bin}`,\r\n                                          newLocalCurrent.pallet &&\r\n                                            `P${newLocalCurrent.pallet}`,\r\n                                        ]\r\n                                          .filter(Boolean)\r\n                                          .join(\"-\")}\r\n                                      </Button>\r\n                                      <Modal\r\n                                        show={showNewLocalModalCurrent}\r\n                                        onHide={() =>\r\n                                          setShowNewLocalModalCurrent(false)\r\n                                        }\r\n                                        centered\r\n                                      >\r\n                                        <Modal.Header>\r\n                                          <Modal.Title>\r\n                                            Edit Local Loc (Current)\r\n                                          </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                          <NewLocal\r\n                                            selectedClient={\r\n                                              selectedClientCurrent\r\n                                            }\r\n                                            showLocalLoc={\r\n                                              showNewLocalModalCurrent\r\n                                            }\r\n                                            value={newLocalCurrent}\r\n                                            onChange={setNewLocalCurrent}\r\n                                            onSave={(p) => {\r\n                                              setNewLocalCurrent(p);\r\n                                              setShowNewLocalModalCurrent(\r\n                                                false\r\n                                              );\r\n                                            }}\r\n                                            onCancel={() =>\r\n                                              setShowNewLocalModalCurrent(false)\r\n                                            }\r\n                                          />\r\n                                        </Modal.Body>\r\n                                        {/* <Modal.Footer>\r\n                                          <Button\r\n                                            variant=\"secondary\"\r\n                                            onClick={() => setShowNewLocalModalCurrent(false)}\r\n                                          >\r\n                                            Close\r\n                                          </Button>\r\n                                        </Modal.Footer> */}\r\n                                      </Modal>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </Col>\r\n                      <Col>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          onClick={handleShowParentModal}\r\n                          className=\"me-2\"\r\n                        >\r\n                          Select Parent\r\n                        </Button>\r\n                        {selectedParent && (\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Selected Parent\"\r\n                            value={selectedParent.name}\r\n                            readOnly\r\n                            style={{ marginTop: \"0.5rem\" }}\r\n                          />\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  {/* Photo and Website Options */}\r\n                  <div style={{ marginBottom: \"1rem\" }}>\r\n                    <Row className=\"mb-3\">\r\n                      <Col xs={6}>\r\n                        <ButtonGroup>\r\n                          <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={handleShowCameraModal}\r\n                          >\r\n                            Take Photo\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={handleBrowsePhotos}\r\n                          >\r\n                            Browse\r\n                          </Button>\r\n                        </ButtonGroup>\r\n                      </Col>\r\n                      <Col xs={6} className=\"d-flex align-items-center\">\r\n                        <Button\r\n                          variant=\"success\"\r\n                          onClick={handleSendToInflow}\r\n                          style={{ marginLeft: \"auto\" }}\r\n                        >\r\n                          Send to inFlow\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"secondary\"\r\n                          onClick={handleBluefolderButton}\r\n                          style={{ marginLeft: \"0.5rem\", marginRight: \".5rem\" }}\r\n                        >\r\n                          BlueFolder\r\n                        </Button>\r\n                        \r\n\r\n                        <Button\r\n                          variant={addToWebsite ? \"primary\" : \"outline-primary\"}\r\n                          onClick={() => setAddToWebsite((prev) => !prev)}\r\n                        >\r\n                          {addToWebsite ? \"✓ Add to Website\" : \"Add to Website\"}\r\n                        </Button>\r\n\r\n                        <Form.Check\r\n                          type=\"checkbox\"\r\n                          id=\"hide-checkbox\"\r\n                          label=\"Hide\"\r\n                          // box is checked when we want visible = false\r\n                          checked={!items.visible}\r\n                          onChange={(e) => {\r\n                            // grab checked immediately\r\n                            const isHidden = e.currentTarget.checked;\r\n                            setItems((prev) => ({\r\n                              ...prev,\r\n                              visible: !isHidden,\r\n                            }));\r\n                          }}\r\n                          className=\"ms-3\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      multiple\r\n                      ref={browseInputRef}\r\n                      style={{ display: \"none\" }}\r\n                      onChange={handleFilesSelected}\r\n                    />\r\n                  </div>\r\n                  {/* Photo Gallery */}\r\n                  {photos && photos.length > 0 && (\r\n                    <div\r\n                      className=\"photo-gallery\"\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexWrap: \"wrap\",\r\n                        gap: \"10px\",\r\n                        marginBottom: \"1rem\",\r\n                      }}\r\n                    >\r\n                      {photos.map((photo, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            position: \"relative\",\r\n                            width: \"100px\",\r\n                            height: \"100px\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={photo.url}\r\n                            alt={`Photo ${index + 1}`}\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                          {photo.file && (\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              size=\"sm\"\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: 0,\r\n                                right: 0,\r\n                                padding: \"0 5px\",\r\n                              }}\r\n                              onClick={() => removePhoto(index)}\r\n                            >\r\n                              x\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  {/* Action Buttons */}\r\n                  <div className=\"mt-3 d-flex flex-wrap align-items-center\">\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      style={{ marginRight: \"1rem\" }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={handleShowInfoModal}\r\n                      style={{ marginRight: \"1rem\" }}\r\n                    >\r\n                      More Info\r\n                    </Button>\r\n                    <LoadingButton\r\n                      type=\"primary\"\r\n                      name=\"Back\"\r\n                      route=\"NewSearch/mainSearch\"\r\n                    />\r\n                    {SHOW_SLACK_BUTTONS && (\r\n                      <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: \".5rem\" }}>\r\n                        <span style={{ fontSize: 12, lineHeight: \"12px\", textAlign: \"center\" }}>Slack</span>\r\n                        <div style={{ display: \"flex\", border: \"1px solid #ced4da\", borderRadius: 6, overflow: \"hidden\" }}>\r\n                          <Button\r\n                            variant=\"outline-primary\"\r\n                            onClick={() => handleAddToSlack(\"receiving\")}\r\n                            style={{ border: \"none\", borderRight: \"1px solid #ced4da\" }}\r\n                          >\r\n                            Receiving\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outline-primary\"\r\n                            onClick={() => handleAddToSlack(\"shipping\")}\r\n                            style={{ border: \"none\" }}\r\n                          >\r\n                            Shipping\r\n                          </Button>\r\n                          {/* <Button\r\n                            variant=\"outline-primary\"\r\n                            onClick={() => handleAddToSlack(\"tasks\")}\r\n                          >\r\n                            Tasks\r\n                          </Button> */}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <Button\r\n                      variant=\"info\"\r\n                      onClick={handlePrint}\r\n                      style={{ marginLeft: \"auto\" }}\r\n                    >\r\n                      Print Label\r\n                    </Button>\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\", margin: \"1rem 0\" }}>\r\n                    <Button\r\n                      variant=\"link\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"black\",\r\n                        fontSize: \"24px\",\r\n                      }}\r\n                      onClick={() => setShowExtra(!showExtra)}\r\n                    >\r\n                      ▼\r\n                    </Button>\r\n                  </div>\r\n                  <Collapse in={showExtra}>\r\n                    <div id=\"extra-collapse\" className=\"mt-3\">\r\n                      <Row>\r\n                        <Form.Group as={Col} controlId=\"dimensions\">\r\n                          <Form.Label>Dimensions</Form.Label>\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Form.Control\r\n                              placeholder=\"Length\"\r\n                              type=\"text\"\r\n                              value={items.length}\r\n                              onChange={handleChange(\"length\")}\r\n                            />\r\n                            <span style={{ padding: \"0 5px\" }}>x</span>\r\n                            <Form.Control\r\n                              placeholder=\"Width\"\r\n                              type=\"text\"\r\n                              value={items.width}\r\n                              onChange={handleChange(\"width\")}\r\n                            />\r\n                            <span style={{ padding: \"0 5px\" }}>x</span>\r\n                            <Form.Control\r\n                              placeholder=\"Height\"\r\n                              type=\"text\"\r\n                              value={items.height}\r\n                              onChange={handleChange(\"height\")}\r\n                            />\r\n                          </div>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"trackingNumber\">\r\n                          <Form.Label>Tracking Number</Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Tracking Number\"\r\n                            type=\"text\"\r\n                            value={items.trackingNumber}\r\n                            onChange={handleChange(\"trackingNumber\")}\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n\r\n                      <Row className=\"mt-3\">\r\n                        <Form.Group as={Col} controlId=\"Price\">\r\n                          <Form.Label>Price</Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Price\"\r\n                            type=\"text\"\r\n                            value={items.price}\r\n                            onChange={handleChange(\"price\")}\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"DOM\">\r\n                          <Form.Label>DOM</Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Date of Manufacture\"\r\n                            type=\"date\"\r\n                            value={DOM}\r\n                            onChange={(e) => setDOM(e.target.value)}\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"poNumber\">\r\n                          <Form.Label>PO Number</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"PO Number\"\r\n                            value={items.poNumber || \"\"}\r\n                            onChange={handleChange(\"poNumber\")}\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                      <Row className=\"mt-3\">\r\n                        <Form.Group as={Col} controlId=\"localSN\">\r\n                          <Form.Label>Local SN</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Local SN\"\r\n                            value={items.localSN || \"\"}\r\n                            onChange={handleChange(\"localSN\")}\r\n                          />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"arrivalDate\">\r\n                          <Form.Label>Arrival Date</Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Enter Arrival Date\"\r\n                            type=\"date\"\r\n                            value={items.arrival_date}\r\n                            onChange={(e) => {\r\n                              const value = e.target.value;\r\n                              setItems((prev) => ({\r\n                                ...prev,\r\n                                arrival_date: value,\r\n                              }));\r\n                            }}\r\n                          />\r\n                        </Form.Group>\r\n                      </Row>\r\n                    </div>\r\n                  </Collapse>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      {/* Camera Modal */}\r\n      <Modal show={showCameraModal} onHide={handleCloseCameraModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Take a Photo</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"camera\">\r\n            {!capturedPhoto ? (\r\n              <BarcodeScannerComponent\r\n                width=\"100%\"\r\n                height={300}\r\n                onUpdate={handleCapture}\r\n                facingMode={cameraFacing}\r\n              />\r\n            ) : (\r\n              <div className=\"photo-preview\">\r\n                <img\r\n                  src={URL.createObjectURL(capturedPhoto)}\r\n                  alt=\"captured\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {!capturedPhoto ? (\r\n            <>\r\n              <Button\r\n                onClick={capturePhoto}\r\n                style={{\r\n                  borderRadius: \"50%\",\r\n                  width: \"60px\",\r\n                  height: \"60px\",\r\n                  position: \"absolute\",\r\n                  left: \"50%\",\r\n                  transform: \"translateX(-50%)\",\r\n                  bottom: \"10px\",\r\n                }}\r\n              >\r\n                📷\r\n              </Button>\r\n              <Button\r\n                onClick={() =>\r\n                  setCameraFacing((prev) =>\r\n                    prev === \"environment\" ? \"user\" : \"environment\"\r\n                  )\r\n                }\r\n              >\r\n                Flip Camera\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={handleCloseCameraModal}>\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => setCapturedPhoto(null)}\r\n              >\r\n                Retake\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={savePhoto}>\r\n                OK\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </LoggedIn>\r\n  );\r\n}\r\n\r\n// Server-side rendering function\r\nexport async function getServerSideProps(context) {\r\n  const { id } = context.params;\r\n\r\n  try {\r\n    const itemDoc = await adminDb.collection(\"Test\").doc(id).get();\r\n    if (!itemDoc.exists) return { notFound: true };\r\n\r\n    const itemData = itemDoc.data();\r\n\r\n    // normalize to arrays for consistent client-side handling\r\n    const pnArray = Array.isArray(itemData.pn)\r\n      ? itemData.pn\r\n      : (itemData.pn ? [itemData.pn] : []);\r\n    const snArray = Array.isArray(itemData.sn)\r\n      ? itemData.sn\r\n      : (itemData.sn ? [itemData.sn] : []);\r\n\r\n    // fetch machineData (optional; you already had this)\r\n    let machineData = {};\r\n    if (itemData.Machine && itemData.Machine.path) {\r\n      try {\r\n        const machineDoc = await adminDb.doc(itemData.Machine.path).get();\r\n        if (machineDoc.exists) {\r\n          machineData = machineDoc.data();\r\n          if (machineData.client && machineData.client.path) {\r\n            const clientDoc = await adminDb.doc(machineData.client.path).get();\r\n            if (clientDoc.exists) machineData.Client = clientDoc.data().name;\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching machine data:\", e);\r\n      }\r\n    }\r\n\r\n    const serializedItem = {\r\n      id,\r\n      name: itemData.name || \"\",\r\n      pn: pnArray,\r\n      sn: snArray,\r\n      price: itemData.price || \"\",\r\n      status: itemData.status || \"\",\r\n      length: itemData.length || \"\",\r\n      width: itemData.width || \"\",\r\n      height: itemData.height || \"\",\r\n      poNumber: itemData.poNumber || \"\",\r\n      trackingNumber: itemData.trackingNumber || \"\",\r\n      localSN: itemData.localSN || \"\",\r\n      arrival_date: itemData.arrival_date || \"\",\r\n      visible: itemData.visible !== undefined ? itemData.visible : true,\r\n\r\n      // add the pieces the UI reads directly\r\n      descriptions: itemData.descriptions || [],\r\n      workOrders: itemData.workOrders || [],\r\n      DOM: itemData.DOM || \"\",\r\n    };\r\n\r\n    return {\r\n      props: {\r\n        initialItem: serializedItem,\r\n        initialMachineData: machineData,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error in getServerSideProps:\", error);\r\n    return { props: { error: \"Failed to load item data\" } };\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}