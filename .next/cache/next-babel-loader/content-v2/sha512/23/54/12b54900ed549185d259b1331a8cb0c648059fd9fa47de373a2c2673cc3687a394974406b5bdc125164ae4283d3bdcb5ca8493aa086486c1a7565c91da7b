{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Container, Alert } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthUserContext';\nimport { useRouter } from 'next/router';\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    createUserWithEmailAndPassword\n  } = useAuth();\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value).then(authUser => {\n        console.log(\"Success. The user is created in Firebase\");\n        router.push(\"/dashboard\");\n      }).catch(error => {\n        // An error occurred. Set error message to be displayed to user\n        setError(error.message);\n      });\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    }\n  }, __jsx(Card, null, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Sign Up\"), error && __jsx(Alert, {\n    variant: \"danger\"\n  }, error), __jsx(Form, {\n    onSubmit: handleSubmit\n  }, __jsx(Form.Group, {\n    id: \"email\"\n  }, __jsx(Form.Label, null, \"Email\"), __jsx(Form.Control, {\n    type: \"email\",\n    ref: emailRef,\n    required: true\n  })), __jsx(Form.Group, {\n    id: \"password\"\n  }, __jsx(Form.Label, null, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    ref: passwordRef,\n    required: true\n  })), __jsx(Form.Group, {\n    id: \"password-confirm\"\n  }, __jsx(Form.Label, null, \"Password Confirmation\"), __jsx(Form.Control, {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    required: true\n  })), __jsx(Button, {\n    className: \"w-100 mt-3\",\n    type: \"submit\"\n  }, \"Sign Up\")))), __jsx(\"div\", {\n    className: \"w-100 text-center mt-2\"\n  }, \"Already have an account? \", __jsx(Button, {\n    variant: \"link\",\n    href: \"/\"\n  }, \"Login\"))));\n}","map":null,"metadata":{},"sourceType":"module"}