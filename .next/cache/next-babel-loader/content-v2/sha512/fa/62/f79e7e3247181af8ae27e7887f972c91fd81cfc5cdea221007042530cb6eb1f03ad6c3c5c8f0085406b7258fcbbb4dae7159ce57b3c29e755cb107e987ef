{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styles from \"../../styles/Home.module.css\";\nimport { Form, Button, Card, Container, FormControl, NavDropdown } from \"react-bootstrap\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport LoggedIn from \"../LoggedIn\";\nimport Link from \"next/link\";\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nfunction LoadingButton(type, name, route) {\n  const {\n    0: isLoading,\n    1: setLoading\n  } = useState({\n    name: false\n  });\n  useEffect(() => {\n    if (isLoading.name) {\n      simulateNetworkRequest().then(() => {\n        setLoading({\n          name: false\n        });\n      });\n    }\n  }, [isLoading.name]);\n\n  const handleClick = () => setLoading({\n    name: true\n  });\n\n  return __jsx(Link, {\n    href: `/${route}`\n  }, __jsx(\"a\", {\n    className: `btn btn-${type}`,\n    disabled: isLoading.name,\n    onClick: !isLoading.name ? handleClick : null\n  }, isLoading.name ? \"Loadingâ€¦\" : name));\n}\n\nexport default function WarehouseSelect() {\n  const {\n    signOut\n  } = useAuth();\n  const {\n    0: show,\n    1: setShow\n  } = useState(false); //passsing variables to warehouse list\n  // const [select, setSelect] = useState(\"Name\");\n\n  const {\n    0: showList,\n    1: setShowList\n  } = useState(false);\n  const {\n    0: showListSearch,\n    1: setShowListSearch\n  } = useState(\"text\");\n  const {\n    0: search,\n    1: setSearch\n  } = useState();\n  const {\n    0: select,\n    1: setSelect\n  } = useState(\"Name\");\n\n  const showDropdown = e => {\n    setShow(!show);\n  };\n\n  const hideDropdown = e => {\n    setShow(false);\n  };\n\n  const searchChangeHandler = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(search, showListSearch);\n    router.push(\"../NewSearch/mainSearch\" + `?inputText=${search}&selectedType=${select}`);\n  };\n\n  const router = useRouter();\n  return __jsx(LoggedIn, null, __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    }\n  }, __jsx(Card, {\n    className: \"align-items-center justify-content-center\"\n  }, __jsx(Card.Body, null, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Warehouse DB\"), __jsx(\"div\", {\n    className: \"d-grid gap-3\"\n  }, LoadingButton(\"primary\", \"Scan\", \"Warehousedb/WarehouseScan\"), LoadingButton(\"secondary\", \"Main List\", \"../NewSearch/mainSearch\"), LoadingButton(\"primary\", \"Client List\", \"../NewSearch/clientSearch\"), LoadingButton(\"secondary\", \"Inventory manager\", \"../NewSearch/inventory/inventoryManage\"), LoadingButton(\"primary\", \"Add New Item\", \"../NewSearch/AddItem/NewItem\"), LoadingButton(\"secondary\", \"Test Print\", \"../NewSearch/TestPrint\"), __jsx(Form, {\n    className: \"d-flex\"\n  }, __jsx(FormControl, {\n    type: showListSearch // type=\"search\"\n    ,\n    placeholder: \"Search\",\n    className: \"me-2\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: show,\n    onMouseEnter: showDropdown,\n    onMouseLeave: hideDropdown\n  }, __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: () => setSelect(\"Name\") & setShowListSearch(\"text\")\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: () => setSelect(\"Date\") & setShowListSearch(\"date\")\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: () => setSelect(\"Work Order\") & setShowListSearch(\"number\")\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: () => setSelect(\"Product Number\") & setShowListSearch(\"number\")\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    href: \"\",\n    onClick: () => setSelect(\"Description\") & setShowListSearch(\"text\")\n  }, \"Description\")), __jsx(Button, {\n    variant: \"info\",\n    onClick: handleSubmit\n  }, \"Search\")), LoadingButton(\"secondary\", \"Back <-\", \"dashboard\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}