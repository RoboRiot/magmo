{"ast":null,"code":"import _defineProperty from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\pages\\\\NewSearch\\\\mainSearch.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Card, Row, Col, InputGroup, Dropdown, FormControl, Button, NavDropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { fetchPartsWithMachineData, fetchClients, fetchModels, formatDate } from \"../../utils/fetchAssociations\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport LoggedIn from \"../LoggedIn\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport ModelTable from \"../../utils/ModelTable\";\nimport PartTable from \"../../utils/PartTable\";\nimport styles from \"../../styles/MainSearch.module.css\";\nimport firebase from \"../../context/Firebase\"; // Predefined warehouse client IDs and display names\n\nvar SOCAL_CLIENT_ID = \"AIS17182\";\nvar NORCAL_CLIENT_ID = \"AIS25097\";\nvar UNASSIGNED_CLIENT_ID = \"AIS00404\"; // Simulates a network request delay\n\nfunction simulateNetworkRequest() {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, 2000);\n  });\n} // Custom LoadingButton component\n\n\nfunction LoadingButton(_ref) {\n  _s();\n\n  var type = _ref.type,\n      name = _ref.name,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    if (isLoading) {\n      simulateNetworkRequest().then(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isLoading]);\n  return __jsx(Link, {\n    href: \"/\".concat(route),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-\".concat(type),\n    disabled: isLoading,\n    onClick: function onClick() {\n      return !isLoading && setLoading(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, isLoading ? \"Loadingâ€¦\" : name));\n}\n\n_s(LoadingButton, \"LHJkidtbt8bk0SOCXf2Y2viet6g=\");\n\n_c = LoadingButton;\nexport default function MainSearch() {\n  _s2();\n\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useState2 = useState([]),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState([]),\n      backupInfo = _useState3[0],\n      setBackupInfo = _useState3[1];\n\n  var _useState4 = useState([]),\n      augmentedInfo = _useState4[0],\n      setAugmentedInfo = _useState4[1]; // items with clientFromId/currentId added\n\n\n  var _useState5 = useState(true),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  var _useState6 = useState([]),\n      ids = _useState6[0],\n      setID = _useState6[1];\n\n  var _useState7 = useState(false),\n      show = _useState7[0],\n      setShow = _useState7[1];\n\n  var _useState8 = useState(),\n      dItem = _useState8[0],\n      setDItem = _useState8[1];\n\n  var _useState9 = useState(\"Name\"),\n      select = _useState9[0],\n      setSelect = _useState9[1];\n\n  var _useState10 = useState(false),\n      showList = _useState10[0],\n      setShowList = _useState10[1];\n\n  var _useState11 = useState(\"text\"),\n      showListSearch = _useState11[0],\n      setShowListSearch = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useState13 = useState(null),\n      selectedOEM = _useState13[0],\n      setSelectedOEM = _useState13[1];\n\n  var _useState14 = useState(null),\n      selectedModality = _useState14[0],\n      setSelectedModality = _useState14[1]; // Replace the old single client state with two sets:\n\n\n  var _useState15 = useState(null),\n      selectedClientFrom = _useState15[0],\n      setSelectedClientFrom = _useState15[1];\n\n  var _useState16 = useState(\"Select Option\"),\n      clientFromButtonText = _useState16[0],\n      setClientFromButtonText = _useState16[1];\n\n  var _useState17 = useState(null),\n      selectedClientCurrent = _useState17[0],\n      setSelectedClientCurrent = _useState17[1];\n\n  var _useState18 = useState(\"Select Option\"),\n      clientCurrentButtonText = _useState18[0],\n      setClientCurrentButtonText = _useState18[1];\n\n  var _useState19 = useState([]),\n      clients = _useState19[0],\n      setClients = _useState19[1];\n\n  var _useState20 = useState(false),\n      showClientModal = _useState20[0],\n      setShowClientModal = _useState20[1]; // This state tells the modal which client box is being updated: \"from\" or \"current\"\n\n\n  var _useState21 = useState(null),\n      clientSelectionType = _useState21[0],\n      setClientSelectionType = _useState21[1];\n\n  var router = useRouter();\n  var labelBase = [\"name\", \"date\", \"w/o\", \"p/n\", \"s/n\"];\n  var labelBaseNames = [\"name\", \"date\", \"wo\", \"pn\", \"sn\"];\n  var sortCheckBase = [false, false, false, false, false, false];\n\n  var _useState22 = useState(labelBase),\n      labels = _useState22[0],\n      setLabels = _useState22[1];\n\n  var _useState23 = useState(sortCheckBase),\n      sortCheck = _useState23[0],\n      setSortCheck = _useState23[1];\n\n  var _useState24 = useState(null),\n      hoverIndex = _useState24[0],\n      setHoverIndex = _useState24[1];\n\n  var _useState25 = useState(null),\n      selectedModel = _useState25[0],\n      setSelectedModel = _useState25[1];\n\n  var _useState26 = useState(null),\n      gPos = _useState26[0],\n      setGPos = _useState26[1];\n\n  var _useState27 = useState(null),\n      gIde = _useState27[0],\n      setGIde = _useState27[1];\n\n  var _useState28 = useState(false),\n      isDeleting = _useState28[0],\n      setIsDeleting = _useState28[1]; // Fetch data on component mount and route change\n\n\n  useEffect(function () {\n    fetchData();\n  }, [router.route]);\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var load, data, db, machineIds, curMachineIds, _iterator2, _step2, _item$Machine2, _item$CurrentMachine2, item, uniq, mIds, cIds, fetchMachineClients, _yield$Promise$all, _yield$Promise$all2, fromMap, curMap, augmented;\n\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              setIsLoading(true);\n              _context11.prev = 1;\n\n              if (router.query.inputText && router.query.selectedType) {\n                setSelect(router.query.selectedType);\n                setSearch(router.query.inputText);\n              } // light retry for transient Firestore hiccups\n\n\n              load = /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                  var attempt,\n                      _args9 = arguments;\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          attempt = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : 1;\n                          _context9.prev = 1;\n                          _context9.next = 4;\n                          return fetchPartsWithMachineData();\n\n                        case 4:\n                          return _context9.abrupt(\"return\", _context9.sent);\n\n                        case 7:\n                          _context9.prev = 7;\n                          _context9.t0 = _context9[\"catch\"](1);\n\n                          if (!(attempt >= 3)) {\n                            _context9.next = 11;\n                            break;\n                          }\n\n                          throw _context9.t0;\n\n                        case 11:\n                          _context9.next = 13;\n                          return new Promise(function (r) {\n                            return setTimeout(r, 250 * Math.pow(2, attempt - 1));\n                          });\n\n                        case 13:\n                          return _context9.abrupt(\"return\", load(attempt + 1));\n\n                        case 14:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9, null, [[1, 7]]);\n                }));\n\n                return function load() {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              _context11.next = 6;\n              return load();\n\n            case 6:\n              data = _context11.sent;\n              setBackupInfo(data);\n              setID(data.map(function (item) {\n                return item.id;\n              })); // --- Pre-augment: resolve client ids of Machine / CurrentMachine once ---\n\n              db = firebase.firestore();\n              machineIds = [];\n              curMachineIds = [];\n              _iterator2 = _createForOfIteratorHelper(data);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  item = _step2.value;\n                  if (item !== null && item !== void 0 && (_item$Machine2 = item.Machine) !== null && _item$Machine2 !== void 0 && _item$Machine2.id) machineIds.push(item.Machine.id);\n                  if (item !== null && item !== void 0 && (_item$CurrentMachine2 = item.CurrentMachine) !== null && _item$CurrentMachine2 !== void 0 && _item$CurrentMachine2.id) curMachineIds.push(item.CurrentMachine.id);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              uniq = function uniq(arr) {\n                return _toConsumableArray(new Set(arr));\n              };\n\n              mIds = uniq(machineIds);\n              cIds = uniq(curMachineIds);\n\n              fetchMachineClients = /*#__PURE__*/function () {\n                var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(ids) {\n                  var out, chunks, i, _i, _chunks, chunk, snap;\n\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          if (ids.length) {\n                            _context10.next = 2;\n                            break;\n                          }\n\n                          return _context10.abrupt(\"return\", {});\n\n                        case 2:\n                          out = {}; // Firestore \"in\" supports up to 10 document IDs per query\n\n                          chunks = [];\n\n                          for (i = 0; i < ids.length; i += 10) {\n                            chunks.push(ids.slice(i, i + 10));\n                          }\n\n                          _i = 0, _chunks = chunks;\n\n                        case 6:\n                          if (!(_i < _chunks.length)) {\n                            _context10.next = 15;\n                            break;\n                          }\n\n                          chunk = _chunks[_i];\n                          _context10.next = 10;\n                          return db.collection(\"Machine\").where(firebase.firestore.FieldPath.documentId(), \"in\", chunk).get();\n\n                        case 10:\n                          snap = _context10.sent;\n                          snap.forEach(function (doc) {\n                            var _md$client;\n\n                            var md = doc.data() || {};\n                            out[doc.id] = ((_md$client = md.client) === null || _md$client === void 0 ? void 0 : _md$client.id) || null;\n                          });\n\n                        case 12:\n                          _i++;\n                          _context10.next = 6;\n                          break;\n\n                        case 15:\n                          return _context10.abrupt(\"return\", out);\n\n                        case 16:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function fetchMachineClients(_x5) {\n                  return _ref10.apply(this, arguments);\n                };\n              }();\n\n              _context11.next = 20;\n              return Promise.all([fetchMachineClients(mIds), fetchMachineClients(cIds)]);\n\n            case 20:\n              _yield$Promise$all = _context11.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              fromMap = _yield$Promise$all2[0];\n              curMap = _yield$Promise$all2[1];\n              augmented = data.map(function (item) {\n                var _item$Machine, _fromMap$item$Machine, _item$CurrentMachine, _curMap$item$CurrentM;\n\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  // keep existing fields; add fast client id fields for sync filtering\n                  clientFromId: item !== null && item !== void 0 && (_item$Machine = item.Machine) !== null && _item$Machine !== void 0 && _item$Machine.id ? (_fromMap$item$Machine = fromMap[item.Machine.id]) !== null && _fromMap$item$Machine !== void 0 ? _fromMap$item$Machine : null : null,\n                  clientCurrentId: item !== null && item !== void 0 && (_item$CurrentMachine = item.CurrentMachine) !== null && _item$CurrentMachine !== void 0 && _item$CurrentMachine.id ? (_curMap$item$CurrentM = curMap[item.CurrentMachine.id]) !== null && _curMap$item$CurrentM !== void 0 ? _curMap$item$CurrentM : null : null\n                });\n              });\n              setAugmentedInfo(augmented); // default view = everything not explicitly hidden\n\n              setInfo(augmented.filter(function (it) {\n                return it.visible !== false;\n              }));\n              _context11.next = 34;\n              break;\n\n            case 29:\n              _context11.prev = 29;\n              _context11.t0 = _context11[\"catch\"](1);\n              console.error(\"Error fetching data:\", _context11.t0);\n              setInfo([]);\n              setAugmentedInfo([]);\n\n            case 34:\n              _context11.prev = 34;\n              setIsLoading(false);\n              return _context11.finish(34);\n\n            case 37:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[1, 29, 34, 37]]);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  var searchChangeHandler = function searchChangeHandler(event) {\n    return setSearch(event.target.value);\n  }; // Asynchronous filter function that loops through backupInfo and,\n  // for each item, fetches its Machine and CurrentMachine documents,\n  // then compares the client id (from machineData.client.id) to the selected client.\n\n\n  useEffect(function () {\n    function filterParts() {\n      return _filterParts.apply(this, arguments);\n    }\n\n    function _filterParts() {\n      _filterParts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var filtered, filteredResults;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"filterParts called with selectedClientFrom:\", selectedClientFrom, \"selectedClientCurrent:\", selectedClientCurrent);\n                _context2.next = 3;\n                return Promise.all(backupInfo.map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n                    var passes, machineSnap, machineData, clientFromId, currentMachineSnap, currentMachineData, clientCurrentId, _item$date$split, _item$date$split2, month, day, year, reformattedDate, hasMatch;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (item.visible) {\n                              _context.next = 2;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", null);\n\n                          case 2:\n                            passes = true; // Check OEM, Modality, and Model from machineData (if available)\n\n                            if (item.machineData) {\n                              if (selectedOEM && item.machineData.OEM !== selectedOEM) passes = false;\n                              if (selectedModality && item.machineData.Modality !== selectedModality) passes = false;\n                              if (selectedModel && item.machineData.Model !== selectedModel) passes = false;\n                            } // For Client From: use the partâ€™s Machine reference\n\n\n                            if (!(passes && selectedClientFrom)) {\n                              _context.next = 21;\n                              break;\n                            }\n\n                            if (item.Machine) {\n                              _context.next = 10;\n                              break;\n                            }\n\n                            console.log(\"Item \".concat(item.id, \" has no Machine reference.\"));\n                            passes = false;\n                            _context.next = 21;\n                            break;\n\n                          case 10:\n                            _context.prev = 10;\n                            _context.next = 13;\n                            return item.Machine.get();\n\n                          case 13:\n                            machineSnap = _context.sent;\n\n                            if (!machineSnap.exists) {\n                              console.log(\"Item \".concat(item.id, \" Machine document does not exist.\"));\n                              passes = false;\n                            } else {\n                              machineData = machineSnap.data();\n\n                              if (!machineData.client) {\n                                console.log(\"Item \".concat(item.id, \" Machine has no client reference.\"));\n                                passes = false;\n                              } else {\n                                // Get the client id from the DocumentReference\n                                clientFromId = machineData.client.id;\n                                console.log(\"Item \".concat(item.id, \": fetched Client From id = \").concat(clientFromId, \", selectedClientFrom = \").concat(selectedClientFrom));\n                                if (clientFromId !== selectedClientFrom) passes = false;\n                              }\n                            }\n\n                            _context.next = 21;\n                            break;\n\n                          case 17:\n                            _context.prev = 17;\n                            _context.t0 = _context[\"catch\"](10);\n                            console.error(\"Error fetching Machine for item \".concat(item.id, \":\"), _context.t0);\n                            passes = false;\n\n                          case 21:\n                            if (!(passes && selectedClientCurrent)) {\n                              _context.next = 38;\n                              break;\n                            }\n\n                            if (item.CurrentMachine) {\n                              _context.next = 27;\n                              break;\n                            }\n\n                            console.log(\"Item \".concat(item.id, \" has no CurrentMachine reference.\"));\n                            passes = false;\n                            _context.next = 38;\n                            break;\n\n                          case 27:\n                            _context.prev = 27;\n                            _context.next = 30;\n                            return item.CurrentMachine.get();\n\n                          case 30:\n                            currentMachineSnap = _context.sent;\n\n                            if (!currentMachineSnap.exists) {\n                              console.log(\"Item \".concat(item.id, \" CurrentMachine document does not exist.\"));\n                              passes = false;\n                            } else {\n                              currentMachineData = currentMachineSnap.data();\n\n                              if (!currentMachineData.client) {\n                                console.log(\"Item \".concat(item.id, \" CurrentMachine has no client reference.\"));\n                                passes = false;\n                              } else {\n                                clientCurrentId = currentMachineData.client.id;\n                                console.log(\"Item \".concat(item.id, \": fetched Client Current id = \").concat(clientCurrentId, \", selectedClientCurrent = \").concat(selectedClientCurrent));\n                                if (clientCurrentId !== selectedClientCurrent) passes = false;\n                              }\n                            }\n\n                            _context.next = 38;\n                            break;\n\n                          case 34:\n                            _context.prev = 34;\n                            _context.t1 = _context[\"catch\"](27);\n                            console.error(\"Error fetching CurrentMachine for item \".concat(item.id, \":\"), _context.t1);\n                            passes = false;\n\n                          case 38:\n                            // If search text is not empty, apply additional filtering\n                            if (passes && search !== \"\") {\n                              if (select === \"Name\" && !item.name.toLowerCase().includes(search.toLowerCase())) passes = false;\n\n                              if (select === \"Date\") {\n                                _item$date$split = item.date.split(\"/\"), _item$date$split2 = _slicedToArray(_item$date$split, 3), month = _item$date$split2[0], day = _item$date$split2[1], year = _item$date$split2[2];\n                                reformattedDate = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n                                if (reformattedDate !== search) passes = false;\n                              }\n\n                              if (select === \"Work Order\") {\n                                hasMatch = item.workOrders && item.workOrders.some(function (wo) {\n                                  return wo.workOrder.toLowerCase().includes(search.toLowerCase());\n                                });\n                                if (!hasMatch) passes = false;\n                              }\n\n                              if (select === \"Product Number\" && item.pn !== search) passes = false;\n                              if (select === \"Description\" && !item.desc.toLowerCase().includes(search.toLowerCase())) passes = false;\n                              if (select === \"SKU\" && !item.id.toLowerCase().includes(search.toLowerCase())) passes = false;\n                            }\n\n                            return _context.abrupt(\"return\", passes ? item : null);\n\n                          case 40:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[10, 17], [27, 34]]);\n                  }));\n\n                  return function (_x) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n\n              case 3:\n                filtered = _context2.sent;\n                filteredResults = filtered.filter(function (item) {\n                  return item !== null;\n                });\n                console.log(\"Filtered result count:\", filteredResults.length);\n                setInfo(filteredResults);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _filterParts.apply(this, arguments);\n    }\n\n    filterParts();\n  }, [selectedOEM, selectedModality, selectedClientFrom, selectedClientCurrent, selectedModel, search, backupInfo]);\n\n  function sortCheckAll(pos) {\n    var sortedInfo = _toConsumableArray(info).sort(function (a, b) {\n      if (pos === 0 || pos === 5) {\n        return sortCheck[pos] ? b[labelBaseNames[pos]].localeCompare(a[labelBaseNames[pos]]) : a[labelBaseNames[pos]].localeCompare(b[labelBaseNames[pos]]);\n      }\n\n      if (pos === 1) {\n        return sortCheck[pos] ? Date.parse(b[labelBaseNames[pos]]) - Date.parse(a[labelBaseNames[pos]]) : Date.parse(a[labelBaseNames[pos]]) - Date.parse(b[labelBaseNames[pos]]);\n      }\n\n      return sortCheck[pos] ? Number(b[labelBaseNames[pos]]) - Number(a[labelBaseNames[pos]]) : Number(a[labelBaseNames[pos]]) - Number(b[labelBaseNames[pos]]);\n    });\n\n    setInfo(sortedInfo);\n    setSortCheck(function (prevSortCheck) {\n      return prevSortCheck.map(function (_, index) {\n        return index === pos ? !prevSortCheck[pos] : prevSortCheck[index];\n      });\n    });\n  }\n\n  var rowSelect = function rowSelect(item) {\n    if (item && item.id) {\n      console.log(\"Selected item:\", item);\n      router.push(\"./item/\" + item.id);\n    } else {\n      console.error(\"Unable to determine the selected itemâ€™s ID: \", item);\n    }\n  };\n\n  var _useState29 = useState([]),\n      selectedItems = _useState29[0],\n      setSelectedItems = _useState29[1];\n\n  var _useState30 = useState(false),\n      showDeleteModal = _useState30[0],\n      setShowDeleteModal = _useState30[1];\n\n  var handleSelectItem = function handleSelectItem(id) {\n    setSelectedItems(function (prev) {\n      var newSelection = prev.includes(id) ? prev.filter(function (itemId) {\n        return itemId !== id;\n      }) : [].concat(_toConsumableArray(prev), [id]);\n      console.log(\"Selected items:\", newSelection);\n    });\n  };\n\n  var handleShowDeleteModal = function handleShowDeleteModal() {\n    return setShowDeleteModal(true);\n  };\n\n  var handleCloseDeleteModal = function handleCloseDeleteModal() {\n    return setShowDeleteModal(false);\n  };\n\n  var handleDeleteSelected = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var db, _iterator, _step, itemId;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsDeleting(true);\n              db = firebase.firestore();\n              _context3.prev = 2;\n              // Loop over each selected item one at a time\n              _iterator = _createForOfIteratorHelper(selectedItems);\n              _context3.prev = 4;\n\n              _iterator.s();\n\n            case 6:\n              if ((_step = _iterator.n()).done) {\n                _context3.next = 35;\n                break;\n              }\n\n              itemId = _step.value;\n              console.log(itemId);\n              _context3.prev = 9;\n              _context3.next = 12;\n              return db.collection(\"Test\").doc(itemId)[\"delete\"]();\n\n            case 12:\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](9);\n              console.error(\"Error deleting document \".concat(itemId, \" from Test:\"), _context3.t0);\n\n            case 17:\n              _context3.prev = 17;\n              _context3.next = 20;\n              return db.collection(\"Parts\").doc(itemId)[\"delete\"]();\n\n            case 20:\n              _context3.next = 25;\n              break;\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t1 = _context3[\"catch\"](17);\n              console.error(\"Error deleting document \".concat(itemId, \" from Parts:\"), _context3.t1);\n\n            case 25:\n              _context3.prev = 25;\n              _context3.next = 28;\n              return deleteFromStorage(itemId);\n\n            case 28:\n              _context3.next = 33;\n              break;\n\n            case 30:\n              _context3.prev = 30;\n              _context3.t2 = _context3[\"catch\"](25);\n              console.error(\"Error deleting storage for \".concat(itemId, \":\"), _context3.t2);\n\n            case 33:\n              _context3.next = 6;\n              break;\n\n            case 35:\n              _context3.next = 40;\n              break;\n\n            case 37:\n              _context3.prev = 37;\n              _context3.t3 = _context3[\"catch\"](4);\n\n              _iterator.e(_context3.t3);\n\n            case 40:\n              _context3.prev = 40;\n\n              _iterator.f();\n\n              return _context3.finish(40);\n\n            case 43:\n              // Update local state by filtering out the deleted items\n              setInfo(info.filter(function (item) {\n                return !selectedItems.includes(item.id);\n              }));\n              setSelectedItems([]);\n              _context3.next = 50;\n              break;\n\n            case 47:\n              _context3.prev = 47;\n              _context3.t4 = _context3[\"catch\"](2);\n              console.error(\"Error deleting items:\", _context3.t4);\n\n            case 50:\n              _context3.prev = 50;\n              setIsDeleting(false);\n              handleCloseDeleteModal(); // Optionally, reload the page\n              // router.reload();\n\n              return _context3.finish(50);\n\n            case 54:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 47, 50, 54], [4, 37, 40, 43], [9, 14], [17, 22], [25, 30]]);\n    }));\n\n    return function handleDeleteSelected() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var checkDelete = function checkDelete(event, pos, idsToDelete, name) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    console.log(\"Selected IDs to delete:\", idsToDelete);\n    setSelectedItems(idsToDelete);\n    setDItem(name);\n    setShowDeleteModal(true);\n  }; // const handleDelete = async () => {\n  //   let itemId = gIde;\n  //   try {\n  //     setIsDeleting(true);\n  //     const db = firebase.firestore();\n  //     await db.collection(\"Test\").doc(itemId).delete();\n  //     await deleteFromPartsCollection(itemId);\n  //     await deleteFromStorage(itemId);\n  //     setInfo(info.filter((_, i) => gPos !== i));\n  //     console.log(`Deleted item: ${itemId}`);\n  //   } catch (error) {\n  //     console.error(\"Error deleting item:\", error);\n  //   } finally {\n  //     setIsDeleting(false);\n  //   }\n  //   handleClose();\n  // };\n\n\n  var hoverStyle = function hoverStyle(index) {\n    return {\n      backgroundColor: hoverIndex === index ? \"#ddd\" : \"transparent\",\n      textAlign: \"center\",\n      cursor: \"default\"\n    };\n  };\n\n  var _useState31 = useState(\"Select Option\"),\n      dropdown1Text = _useState31[0],\n      setDropdown1Text = _useState31[1];\n\n  var _useState32 = useState(\"Select Option\"),\n      dropdown2Text = _useState32[0],\n      setDropdown2Text = _useState32[1];\n\n  var handleSelect1 = function handleSelect1(eventKey, event) {\n    if (eventKey === \"unassigned\") {\n      setDropdown1Text(\"Select Option\");\n      setSelectedOEM(null);\n    } else {\n      setDropdown1Text(event.target.textContent);\n      setSelectedOEM(event.target.textContent);\n    }\n  };\n\n  var handleSelect2 = function handleSelect2(eventKey, event) {\n    if (eventKey === \"unassigned\") {\n      setDropdown2Text(\"Select Option\");\n      setSelectedModality(null);\n    } else {\n      setDropdown2Text(event.target.textContent);\n      setSelectedModality(event.target.textContent);\n    }\n  }; // --------------------\n  // CLIENT SELECTION HANDLING\n  // --------------------\n  // This function fetches clients and opens the client modal.\n\n\n  var handleClientClick = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var clientsData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetchClients(selectedOEM, selectedModality);\n\n            case 2:\n              clientsData = _context4.sent;\n              setClients(clientsData);\n              setClientSearchTerm(\"\");\n              setShowClientModal(true);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleClientClick() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // When a client is selected in the modal, we now assume the parameter is a client ID.\n  // If the passed value is null, we clear the selection.\n\n\n  var handleClientSelect = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(clientId) {\n      var clientSnap, clientData;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(\"User selected client id:\", clientId);\n\n              if (clientId) {\n                _context5.next = 5;\n                break;\n              }\n\n              if (clientSelectionType === \"from\") {\n                setClientFromButtonText(\"Select Option\");\n                setSelectedClientFrom(null);\n              } else if (clientSelectionType === \"current\") {\n                setClientCurrentButtonText(\"Select Option\");\n                setSelectedClientCurrent(null);\n              }\n\n              setShowClientModal(false);\n              return _context5.abrupt(\"return\");\n\n            case 5:\n              _context5.prev = 5;\n              _context5.next = 8;\n              return firebase.firestore().collection(\"Client\").doc(clientId).get();\n\n            case 8:\n              clientSnap = _context5.sent;\n\n              if (clientSnap.exists) {\n                clientData = clientSnap.data();\n\n                if (clientSelectionType === \"from\") {\n                  setClientFromButtonText(clientData.name);\n                  setSelectedClientFrom(clientId);\n                } else if (clientSelectionType === \"current\") {\n                  setClientCurrentButtonText(clientData.name);\n                  setSelectedClientCurrent(clientId);\n                }\n              } else {\n                console.error(\"No client document found for id:\", clientId);\n              }\n\n              _context5.next = 15;\n              break;\n\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](5);\n              console.error(\"Error fetching client data:\", _context5.t0);\n\n            case 15:\n              setShowClientModal(false);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[5, 12]]);\n    }));\n\n    return function handleClientSelect(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleClientInfo = function handleClientInfo(clientId, clientName) {\n    console.log(\"Client ID: \".concat(clientId, \", Client Name: \").concat(clientName));\n    router.push(\"client/\" + clientId);\n  };\n\n  var handleClearClientSelection = function handleClearClientSelection() {\n    if (clientSelectionType === \"from\") {\n      setClientFromButtonText(\"Select Option\");\n      setSelectedClientFrom(null);\n    } else if (clientSelectionType === \"current\") {\n      setClientCurrentButtonText(\"Select Option\");\n      setSelectedClientCurrent(null);\n    }\n\n    setShowClientModal(false);\n  }; // --------------------\n  // MODEL SELECTION HANDLING\n  // --------------------\n\n\n  var _useState33 = useState([]),\n      models = _useState33[0],\n      setModels = _useState33[1];\n\n  var _useState34 = useState(false),\n      showModelModal = _useState34[0],\n      setShowModelModal = _useState34[1];\n\n  var _useState35 = useState(\"Select Option\"),\n      modelButtonText = _useState35[0],\n      setModelButtonText = _useState35[1];\n\n  var handleModelClick = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var modelsData;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return fetchModels(selectedOEM, selectedModality, selectedClientFrom);\n\n            case 2:\n              modelsData = _context6.sent;\n              setModels(modelsData);\n              setModelSearchTerm(\"\");\n              setShowModelModal(true);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleModelClick() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleModelSelect = function handleModelSelect(modelName) {\n    setModelButtonText(modelName || \"Select Option\");\n    setSelectedModel(modelName || null);\n    setShowModelModal(false);\n  };\n\n  var handleClearModelSelection = function handleClearModelSelection() {\n    setModelButtonText(\"Select Option\");\n    setSelectedModel(null);\n    setShowModelModal(false);\n  }; // --------------------\n  // WAREHOUSE BUTTONS (for Client Current)\n  // --------------------\n\n\n  var handleSoCalWarehouseClick = function handleSoCalWarehouseClick() {\n    setClientCurrentButtonText(\"SoCal Warehouse\");\n    setSelectedClientCurrent(SOCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", SOCAL_CLIENT_ID);\n  };\n\n  var handleNorCalWarehouseClick = function handleNorCalWarehouseClick() {\n    setClientCurrentButtonText(\"NorCal Warehouse\");\n    setSelectedClientCurrent(NORCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", NORCAL_CLIENT_ID);\n  };\n\n  var handleWarehouseUnassignedClick = function handleWarehouseUnassignedClick() {\n    setClientCurrentButtonText(\"Unassigned\");\n    setSelectedClientCurrent(UNASSIGNED_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", UNASSIGNED_CLIENT_ID);\n  };\n\n  var _useState36 = useState(\"\"),\n      clientSearchTerm = _useState36[0],\n      setClientSearchTerm = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      modelSearchTerm = _useState37[0],\n      setModelSearchTerm = _useState37[1];\n\n  var deleteFromStorage = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(itemId) {\n      var storageRef, folderRef, listResult, deletePromises;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              storageRef = firebase.storage().ref();\n              folderRef = storageRef.child(\"Parts/\".concat(itemId, \"/\"));\n              _context7.prev = 2;\n              _context7.next = 5;\n              return folderRef.listAll();\n\n            case 5:\n              listResult = _context7.sent;\n              deletePromises = listResult.items.map(function (item) {\n                return item[\"delete\"]();\n              });\n              _context7.next = 9;\n              return Promise.all(deletePromises);\n\n            case 9:\n              _context7.next = 14;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.error(\"Error deleting from storage:\", _context7.t0);\n\n            case 14:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 11]]);\n    }));\n\n    return function deleteFromStorage(_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var deleteFromPartsCollection = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(itemId) {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db = firebase.firestore();\n              _context8.prev = 1;\n              _context8.next = 4;\n              return db.collection(\"Parts\").doc(itemId)[\"delete\"]();\n\n            case 4:\n              console.log(\"Deleted item from Parts collection: \".concat(itemId));\n              _context8.next = 10;\n              break;\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](1);\n              console.error(\"Error deleting from Parts collection:\", _context8.t0);\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 7]]);\n    }));\n\n    return function deleteFromPartsCollection(_x4) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 5\n    }\n  }, isDeleting && __jsx(\"div\", {\n    className: \"loading-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    className: \"spinner-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))), __jsx(Modal, {\n    show: showDeleteModal,\n    onHide: handleCloseDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 11\n    }\n  }, \"Confirm Deletion\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 9\n    }\n  }, \"Are you sure you want to delete \", selectedItems.length, \" item\", selectedItems.length > 1 ? \"s\" : \"\", \"?\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"danger\",\n    onClick: handleDeleteSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 11\n    }\n  }, \"Yes, delete\"), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleCloseDeleteModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))), __jsx(Modal, {\n    show: showClientModal,\n    onHide: function onHide() {\n      return setShowClientModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 11\n    }\n  }, \"Select \", clientSelectionType === \"from\" ? \"Client From\" : \"Client Current\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: clientSearchTerm,\n    onChange: function onChange(e) {\n      return setClientSearchTerm(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 11\n    }\n  }), __jsx(ClientTable, {\n    clients: clients.filter(function (client) {\n      return client.name.toLowerCase().includes(clientSearchTerm.toLowerCase());\n    }),\n    onSelectClient: handleClientSelect,\n    onInfoClick: handleClientInfo,\n    isClientSearch: false,\n    clearSelection: function clearSelection() {\n      return handleClientSelect(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 11\n    }\n  }))), __jsx(Modal, {\n    show: showModelModal,\n    onHide: function onHide() {\n      return setShowModelModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 11\n    }\n  }, \"Select Model\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Search by name\",\n    className: \"mb-3\",\n    value: modelSearchTerm,\n    onChange: function onChange(e) {\n      return setModelSearchTerm(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 11\n    }\n  }), __jsx(ModelTable, {\n    models: models.filter(function (model) {\n      return typeof model === \"string\" ? model.toLowerCase().includes(modelSearchTerm.toLowerCase()) : false;\n    }),\n    onSelectModel: handleModelSelect,\n    clearSelection: function clearSelection() {\n      return handleModelSelect(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 11\n    }\n  }))), __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 15\n    }\n  }, \"Magmo\"), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 19\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 23\n    }\n  }, \"OEM\"), __jsx(Dropdown, {\n    onSelect: handleSelect1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 23\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-1\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 25\n    }\n  }, dropdown1Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 27\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"GE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 27\n    }\n  }, \"GE\"), __jsx(Dropdown.Item, {\n    eventKey: \"Toshiba\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 27\n    }\n  }, \"Toshiba\"), __jsx(Dropdown.Item, {\n    eventKey: \"Siemens\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 27\n    }\n  }, \"Siemens\"), __jsx(Dropdown.Item, {\n    eventKey: \"Philips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 27\n    }\n  }, \"Philips\")))), __jsx(InputGroup, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 23\n    }\n  }, \"Modality\"), __jsx(Dropdown, {\n    onSelect: handleSelect2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 23\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"outline-secondary\",\n    id: \"dropdown-button-2\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 25\n    }\n  }, dropdown2Text), __jsx(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Item, {\n    eventKey: \"unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 27\n    }\n  }, \"Select Option\"), __jsx(Dropdown.Item, {\n    eventKey: \"CT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 27\n    }\n  }, \"CT\"), __jsx(Dropdown.Item, {\n    eventKey: \"MRI\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 27\n    }\n  }, \"MRI\"))))), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 19\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 23\n    }\n  }, \"Client From\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: function onClick() {\n      setClientSelectionType(\"from\");\n      handleClientClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 23\n    }\n  }, clientFromButtonText)), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 23\n    }\n  }, \"Client Current\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: function onClick() {\n      setClientSelectionType(\"current\");\n      handleClientClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 23\n    }\n  }, clientCurrentButtonText)), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 23\n    }\n  }, \"Model\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: \"w-100\",\n    onClick: handleModelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 23\n    }\n  }, modelButtonText)), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 21\n    }\n  }), __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 21\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 23\n    }\n  }, \"Warehouse\"), __jsx(\"div\", {\n    className: styles.buttonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleSoCalWarehouseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 25\n    }\n  }, \"SoCal Warehouse\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleNorCalWarehouseClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 25\n    }\n  }, \"NorCal Warehouse\"), __jsx(Button, {\n    variant: \"outline-secondary\",\n    className: styles.flexButton,\n    onClick: handleWarehouseUnassignedClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 25\n    }\n  }, \"Unassigned\"))))), __jsx(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.tableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 19\n    }\n  }, __jsx(PartTable, {\n    info: info,\n    labels: labels,\n    ids: ids,\n    hoverStyle: hoverStyle,\n    sortCheckAll: sortCheckAll,\n    checkDelete: checkDelete,\n    isDeleting: isDeleting,\n    rowSelect: rowSelect,\n    setHoverIndex: setHoverIndex,\n    hoverIndex: hoverIndex,\n    selectedItems: selectedItems // Pass selectedItems state\n    ,\n    setSelectedItems: setSelectedItems // Pass its setter\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: styles.searchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 21\n    }\n  }, __jsx(Form, {\n    className: \"d-flex pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 23\n    }\n  }, __jsx(FormControl, {\n    type: showListSearch,\n    placeholder: \"Search\",\n    className: \"me-2 flex-grow-1\",\n    \"aria-label\": \"Search\",\n    value: search,\n    onChange: searchChangeHandler,\n    style: {\n      flex: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 25\n    }\n  }), __jsx(NavDropdown, {\n    title: select,\n    id: \"collasible-nav-dropdown\",\n    show: showList,\n    onMouseEnter: function onMouseEnter() {\n      return setShowList(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setShowList(false);\n    },\n    style: {\n      marginTop: \"-5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 25\n    }\n  }, __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Name\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 27\n    }\n  }, \"Name\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Date\");\n      setShowListSearch(\"date\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 27\n    }\n  }, \"Date\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Work Order\");\n      setShowListSearch(\"number\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 27\n    }\n  }, \"Work Order\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Product Number\");\n      setShowListSearch(\"number\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 27\n    }\n  }, \"Product Number\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"Description\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 27\n    }\n  }, \"Description\"), __jsx(NavDropdown.Item, {\n    onClick: function onClick() {\n      setSelect(\"SKU\");\n      setShowListSearch(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 27\n    }\n  }, \"SKU\"))), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 23\n    }\n  }, __jsx(LoadingButton, {\n    type: \"secondary\",\n    name: \"Add New Item\",\n    route: \"NewSearch/AddItem/NewItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 25\n    }\n  }), __jsx(LoadingButton, {\n    type: \"primary\",\n    name: \"Back\",\n    route: \"Warehousedb/WarehouseSelect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 25\n    }\n  })))))))))));\n}\n\n_s2(MainSearch, \"iYVWSRaTNBKZ5HVQ2BBbjG3R/Ok=\", false, function () {\n  return [useAuth, useRouter];\n});\n\n_c2 = MainSearch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadingButton\");\n$RefreshReg$(_c2, \"MainSearch\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/pages/NewSearch/mainSearch.js"],"names":["React","useEffect","useState","Container","Card","Row","Col","InputGroup","Dropdown","FormControl","Button","NavDropdown","Form","Modal","Spinner","Link","useRouter","fetchPartsWithMachineData","fetchClients","fetchModels","formatDate","useAuth","LoggedIn","ClientTable","ModelTable","PartTable","styles","firebase","SOCAL_CLIENT_ID","NORCAL_CLIENT_ID","UNASSIGNED_CLIENT_ID","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","type","name","route","isLoading","setLoading","then","MainSearch","signOut","info","setInfo","backupInfo","setBackupInfo","augmentedInfo","setAugmentedInfo","setIsLoading","ids","setID","show","setShow","dItem","setDItem","select","setSelect","showList","setShowList","showListSearch","setShowListSearch","search","setSearch","selectedOEM","setSelectedOEM","selectedModality","setSelectedModality","selectedClientFrom","setSelectedClientFrom","clientFromButtonText","setClientFromButtonText","selectedClientCurrent","setSelectedClientCurrent","clientCurrentButtonText","setClientCurrentButtonText","clients","setClients","showClientModal","setShowClientModal","clientSelectionType","setClientSelectionType","router","labelBase","labelBaseNames","sortCheckBase","labels","setLabels","sortCheck","setSortCheck","hoverIndex","setHoverIndex","selectedModel","setSelectedModel","gPos","setGPos","gIde","setGIde","isDeleting","setIsDeleting","fetchData","query","inputText","selectedType","load","attempt","r","Math","pow","data","map","item","id","db","firestore","machineIds","curMachineIds","Machine","push","CurrentMachine","uniq","arr","Set","mIds","cIds","fetchMachineClients","length","out","chunks","i","slice","chunk","collection","where","FieldPath","documentId","get","snap","forEach","doc","md","client","all","fromMap","curMap","augmented","clientFromId","clientCurrentId","filter","it","visible","console","error","searchChangeHandler","event","target","value","filterParts","log","passes","machineData","OEM","Modality","Model","machineSnap","exists","currentMachineSnap","currentMachineData","toLowerCase","includes","date","split","month","day","year","reformattedDate","hasMatch","workOrders","some","wo","workOrder","pn","desc","filtered","filteredResults","sortCheckAll","pos","sortedInfo","sort","a","b","localeCompare","Date","parse","Number","prevSortCheck","_","index","rowSelect","selectedItems","setSelectedItems","showDeleteModal","setShowDeleteModal","handleSelectItem","prev","newSelection","itemId","handleShowDeleteModal","handleCloseDeleteModal","handleDeleteSelected","deleteFromStorage","handleClose","handleShow","checkDelete","idsToDelete","preventDefault","stopPropagation","hoverStyle","backgroundColor","textAlign","cursor","dropdown1Text","setDropdown1Text","dropdown2Text","setDropdown2Text","handleSelect1","eventKey","textContent","handleSelect2","handleClientClick","clientsData","setClientSearchTerm","handleClientSelect","clientId","clientSnap","clientData","handleClientInfo","clientName","handleClearClientSelection","models","setModels","showModelModal","setShowModelModal","modelButtonText","setModelButtonText","handleModelClick","modelsData","setModelSearchTerm","handleModelSelect","modelName","handleClearModelSelection","handleSoCalWarehouseClick","handleNorCalWarehouseClick","handleWarehouseUnassignedClick","clientSearchTerm","modelSearchTerm","storageRef","storage","ref","folderRef","child","listAll","listResult","deletePromises","items","deleteFromPartsCollection","e","model","minHeight","maxWidth","divider","buttonGroup","flexButton","tableContainer","searchContainer","flex","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Card,\n  Row,\n  Col,\n  InputGroup,\n  Dropdown,\n  FormControl,\n  Button,\n  NavDropdown,\n  Form,\n  Modal,\n  Spinner,\n} from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport {\n  fetchPartsWithMachineData,\n  fetchClients,\n  fetchModels,\n  formatDate,\n} from \"../../utils/fetchAssociations\";\nimport { useAuth } from \"../../context/AuthUserContext\";\nimport LoggedIn from \"../LoggedIn\";\nimport ClientTable from \"../../utils/ClientTable\";\nimport ModelTable from \"../../utils/ModelTable\";\nimport PartTable from \"../../utils/PartTable\";\nimport styles from \"../../styles/MainSearch.module.css\";\nimport firebase from \"../../context/Firebase\";\n\n// Predefined warehouse client IDs and display names\nconst SOCAL_CLIENT_ID = \"AIS17182\";\nconst NORCAL_CLIENT_ID = \"AIS25097\";\nconst UNASSIGNED_CLIENT_ID = \"AIS00404\";\n\n\n// Simulates a network request delay\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\n// Custom LoadingButton component\nfunction LoadingButton({ type, name, route }) {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => setLoading(false));\n    }\n  }, [isLoading]);\n\n  return (\n    <Link href={`/${route}`}>\n      <a\n        className={`btn btn-${type}`}\n        disabled={isLoading}\n        onClick={() => !isLoading && setLoading(true)}\n      >\n        {isLoading ? \"Loadingâ€¦\" : name}\n      </a>\n    </Link>\n  );\n}\n\nexport default function MainSearch() {\n  const { signOut } = useAuth();\n  const [info, setInfo] = useState([]);\n  const [backupInfo, setBackupInfo] = useState([]);\n  const [augmentedInfo, setAugmentedInfo] = useState([]); // items with clientFromId/currentId added\n  const [isLoading, setIsLoading] = useState(true);\n  const [ids, setID] = useState([]);\n  const [show, setShow] = useState(false);\n  const [dItem, setDItem] = useState();\n  const [select, setSelect] = useState(\"Name\");\n  const [showList, setShowList] = useState(false);\n  const [showListSearch, setShowListSearch] = useState(\"text\");\n  const [search, setSearch] = useState(\"\");\n  const [selectedOEM, setSelectedOEM] = useState(null);\n  const [selectedModality, setSelectedModality] = useState(null);\n  // Replace the old single client state with two sets:\n  const [selectedClientFrom, setSelectedClientFrom] = useState(null);\n  const [clientFromButtonText, setClientFromButtonText] = useState(\"Select Option\");\n  const [selectedClientCurrent, setSelectedClientCurrent] = useState(null);\n  const [clientCurrentButtonText, setClientCurrentButtonText] = useState(\"Select Option\");\n\n  const [clients, setClients] = useState([]);\n  const [showClientModal, setShowClientModal] = useState(false);\n  // This state tells the modal which client box is being updated: \"from\" or \"current\"\n  const [clientSelectionType, setClientSelectionType] = useState(null);\n\n  const router = useRouter();\n  const labelBase = [\"name\", \"date\", \"w/o\", \"p/n\", \"s/n\"];\n  const labelBaseNames = [\"name\", \"date\", \"wo\", \"pn\", \"sn\"];\n  const sortCheckBase = [false, false, false, false, false, false];\n  const [labels, setLabels] = useState(labelBase);\n  const [sortCheck, setSortCheck] = useState(sortCheckBase);\n  const [hoverIndex, setHoverIndex] = useState(null);\n  const [selectedModel, setSelectedModel] = useState(null);\n  const [gPos, setGPos] = useState(null);\n  const [gIde, setGIde] = useState(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n\n  // Fetch data on component mount and route change\n  useEffect(() => {\n    fetchData();\n  }, [router.route]);\n\n async function fetchData() {\n   setIsLoading(true);\n   try {\n     if (router.query.inputText && router.query.selectedType) {\n       setSelect(router.query.selectedType);\n       setSearch(router.query.inputText);\n     }\n     // light retry for transient Firestore hiccups\n     const load = async (attempt = 1) => {\n       try {\n         return await fetchPartsWithMachineData();\n       } catch (e) {\n         if (attempt >= 3) throw e;\n         await new Promise(r => setTimeout(r, 250 * Math.pow(2, attempt - 1)));\n         return load(attempt + 1);\n       }\n     };\n     const data = await load();\n     setBackupInfo(data);\n     setID(data.map((item) => item.id));\n\n     // --- Pre-augment: resolve client ids of Machine / CurrentMachine once ---\n     const db = firebase.firestore();\n     const machineIds = [];\n     const curMachineIds = [];\n     for (const item of data) {\n       if (item?.Machine?.id) machineIds.push(item.Machine.id);\n       if (item?.CurrentMachine?.id) curMachineIds.push(item.CurrentMachine.id);\n     }\n     const uniq = (arr) => [...new Set(arr)];\n     const mIds = uniq(machineIds);\n     const cIds = uniq(curMachineIds);\n\n     const fetchMachineClients = async (ids) => {\n       if (!ids.length) return {};\n       const out = {};\n       // Firestore \"in\" supports up to 10 document IDs per query\n       const chunks = [];\n       for (let i = 0; i < ids.length; i += 10) chunks.push(ids.slice(i, i + 10));\n       for (const chunk of chunks) {\n         const snap = await db\n           .collection(\"Machine\")\n           .where(firebase.firestore.FieldPath.documentId(), \"in\", chunk)\n           .get();\n         snap.forEach((doc) => {\n           const md = doc.data() || {};\n           out[doc.id] = md.client?.id || null;\n         });\n       }\n       return out;\n     };\n\n     const [fromMap, curMap] = await Promise.all([\n       fetchMachineClients(mIds),\n       fetchMachineClients(cIds),\n     ]);\n\n     const augmented = data.map((item) => ({\n       ...item,\n       // keep existing fields; add fast client id fields for sync filtering\n       clientFromId: item?.Machine?.id ? fromMap[item.Machine.id] ?? null : null,\n       clientCurrentId: item?.CurrentMachine?.id ? curMap[item.CurrentMachine.id] ?? null : null,\n     }));\n\n     setAugmentedInfo(augmented);\n     // default view = everything not explicitly hidden\n     setInfo(augmented.filter((it) => it.visible !== false));\n   } catch (err) {\n     console.error(\"Error fetching data:\", err);\n     setInfo([]);\n     setAugmentedInfo([]);\n   } finally {\n     setIsLoading(false);\n   }\n }\n\n  const searchChangeHandler = (event) => setSearch(event.target.value);\n\n  // Asynchronous filter function that loops through backupInfo and,\n  // for each item, fetches its Machine and CurrentMachine documents,\n  // then compares the client id (from machineData.client.id) to the selected client.\n  useEffect(() => {\n    async function filterParts() {\n      console.log(\n        \"filterParts called with selectedClientFrom:\",\n        selectedClientFrom,\n        \"selectedClientCurrent:\",\n        selectedClientCurrent\n      );\n      const filtered = await Promise.all(\n        backupInfo.map(async (item) => {\n          if (!item.visible) {\n            return null;\n          }\n          \n          let passes = true;\n          // Check OEM, Modality, and Model from machineData (if available)\n          if (item.machineData) {\n            if (selectedOEM && item.machineData.OEM !== selectedOEM) passes = false;\n            if (selectedModality && item.machineData.Modality !== selectedModality)\n              passes = false;\n            if (selectedModel && item.machineData.Model !== selectedModel) passes = false;\n          }\n          // For Client From: use the partâ€™s Machine reference\n          if (passes && selectedClientFrom) {\n            if (!item.Machine) {\n              console.log(`Item ${item.id} has no Machine reference.`);\n              passes = false;\n            } else {\n              try {\n                const machineSnap = await item.Machine.get();\n                if (!machineSnap.exists) {\n                  console.log(`Item ${item.id} Machine document does not exist.`);\n                  passes = false;\n                } else {\n                  const machineData = machineSnap.data();\n                  if (!machineData.client) {\n                    console.log(`Item ${item.id} Machine has no client reference.`);\n                    passes = false;\n                  } else {\n                    // Get the client id from the DocumentReference\n                    const clientFromId = machineData.client.id;\n                    console.log(\n                      `Item ${item.id}: fetched Client From id = ${clientFromId}, selectedClientFrom = ${selectedClientFrom}`\n                    );\n                    if (clientFromId !== selectedClientFrom) passes = false;\n                  }\n                }\n              } catch (error) {\n                console.error(`Error fetching Machine for item ${item.id}:`, error);\n                passes = false;\n              }\n            }\n          }\n          // For Client Current: use the partâ€™s CurrentMachine reference\n          if (passes && selectedClientCurrent) {\n            if (!item.CurrentMachine) {\n              console.log(`Item ${item.id} has no CurrentMachine reference.`);\n              passes = false;\n            } else {\n              try {\n                const currentMachineSnap = await item.CurrentMachine.get();\n                if (!currentMachineSnap.exists) {\n                  console.log(`Item ${item.id} CurrentMachine document does not exist.`);\n                  passes = false;\n                } else {\n                  const currentMachineData = currentMachineSnap.data();\n                  if (!currentMachineData.client) {\n                    console.log(`Item ${item.id} CurrentMachine has no client reference.`);\n                    passes = false;\n                  } else {\n                    const clientCurrentId = currentMachineData.client.id;\n                    console.log(\n                      `Item ${item.id}: fetched Client Current id = ${clientCurrentId}, selectedClientCurrent = ${selectedClientCurrent}`\n                    );\n                    if (clientCurrentId !== selectedClientCurrent) passes = false;\n                  }\n                }\n              } catch (error) {\n                console.error(`Error fetching CurrentMachine for item ${item.id}:`, error);\n                passes = false;\n              }\n            }\n          }\n          // If search text is not empty, apply additional filtering\n          if (passes && search !== \"\") {\n            if (select === \"Name\" && !item.name.toLowerCase().includes(search.toLowerCase()))\n              passes = false;\n            if (select === \"Date\") {\n              const [month, day, year] = item.date.split(\"/\");\n              const reformattedDate = `${year}-${month}-${day}`;\n              if (reformattedDate !== search) passes = false;\n            }\n            if (select === \"Work Order\") {\n              const hasMatch =\n                item.workOrders &&\n                item.workOrders.some((wo) =>\n                  wo.workOrder.toLowerCase().includes(search.toLowerCase())\n                );\n              if (!hasMatch) passes = false;\n            }            \n            if (select === \"Product Number\" && item.pn !== search) passes = false;\n            if (select === \"Description\" && !item.desc.toLowerCase().includes(search.toLowerCase()))\n              passes = false;\n            if (select === \"SKU\" && !item.id.toLowerCase().includes(search.toLowerCase()))\n              passes = false;\n          }\n          return passes ? item : null;\n        })\n      );\n      const filteredResults = filtered.filter((item) => item !== null);\n      console.log(\"Filtered result count:\", filteredResults.length);\n      setInfo(filteredResults);\n    }\n    filterParts();\n  }, [\n    selectedOEM,\n    selectedModality,\n    selectedClientFrom,\n    selectedClientCurrent,\n    selectedModel,\n    search,\n    backupInfo,\n  ]);\n\n  function sortCheckAll(pos) {\n    const sortedInfo = [...info].sort((a, b) => {\n      if (pos === 0 || pos === 5) {\n        return sortCheck[pos]\n          ? b[labelBaseNames[pos]].localeCompare(a[labelBaseNames[pos]])\n          : a[labelBaseNames[pos]].localeCompare(b[labelBaseNames[pos]]);\n      }\n      if (pos === 1) {\n        return sortCheck[pos]\n          ? Date.parse(b[labelBaseNames[pos]]) - Date.parse(a[labelBaseNames[pos]])\n          : Date.parse(a[labelBaseNames[pos]]) - Date.parse(b[labelBaseNames[pos]]);\n      }\n      return sortCheck[pos]\n        ? Number(b[labelBaseNames[pos]]) - Number(a[labelBaseNames[pos]])\n        : Number(a[labelBaseNames[pos]]) - Number(b[labelBaseNames[pos]]);\n    });\n    setInfo(sortedInfo);\n    setSortCheck((prevSortCheck) =>\n      prevSortCheck.map((_, index) =>\n        index === pos ? !prevSortCheck[pos] : prevSortCheck[index]\n      )\n    );\n  }\n\n  const rowSelect = (item) => {\n    if (item && item.id) {\n      console.log(\"Selected item:\", item);\n      router.push(\"./item/\" + item.id);\n    } else {\n      console.error(\"Unable to determine the selected itemâ€™s ID: \", item);\n    }\n  };\n\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const handleSelectItem = (id) => {\n    setSelectedItems((prev) => {\n      const newSelection = prev.includes(id) ? prev.filter((itemId) => itemId !== id) : [...prev, id]\n      console.log(\"Selected items:\", newSelection);\n    });\n  };\n\n  const handleShowDeleteModal = () => setShowDeleteModal(true);\n  const handleCloseDeleteModal = () => setShowDeleteModal(false);\n\n  const handleDeleteSelected = async () => {\n    setIsDeleting(true);\n    const db = firebase.firestore();\n    try {\n      // Loop over each selected item one at a time\n      for (const itemId of selectedItems) {\n        console.log(itemId)\n        try {\n          // Delete from \"Test\" collection\n          await db.collection(\"Test\").doc(itemId).delete();\n        } catch (err) {\n          console.error(`Error deleting document ${itemId} from Test:`, err);\n        }\n        try {\n          // Delete from \"Parts\" collection\n          await db.collection(\"Parts\").doc(itemId).delete();\n        } catch (err) {\n          console.error(`Error deleting document ${itemId} from Parts:`, err);\n        }\n        try {\n          // Delete associated photos from storage\n          await deleteFromStorage(itemId);\n        } catch (err) {\n          console.error(`Error deleting storage for ${itemId}:`, err);\n        }\n      }\n      // Update local state by filtering out the deleted items\n      setInfo(info.filter((item) => !selectedItems.includes(item.id)));\n      setSelectedItems([]);\n    } catch (error) {\n      console.error(\"Error deleting items:\", error);\n    } finally {\n      setIsDeleting(false);\n      handleCloseDeleteModal();\n      // Optionally, reload the page\n      // router.reload();\n    }\n  };\n\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const checkDelete = (event, pos, idsToDelete, name) => {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    console.log(\"Selected IDs to delete:\", idsToDelete);\n    setSelectedItems(idsToDelete);\n    setDItem(name);\n    setShowDeleteModal(true);\n  };\n\n  // const handleDelete = async () => {\n  //   let itemId = gIde;\n  //   try {\n  //     setIsDeleting(true);\n  //     const db = firebase.firestore();\n  //     await db.collection(\"Test\").doc(itemId).delete();\n  //     await deleteFromPartsCollection(itemId);\n  //     await deleteFromStorage(itemId);\n  //     setInfo(info.filter((_, i) => gPos !== i));\n  //     console.log(`Deleted item: ${itemId}`);\n  //   } catch (error) {\n  //     console.error(\"Error deleting item:\", error);\n  //   } finally {\n  //     setIsDeleting(false);\n  //   }\n  //   handleClose();\n  // };\n\n  const hoverStyle = (index) => ({\n    backgroundColor: hoverIndex === index ? \"#ddd\" : \"transparent\",\n    textAlign: \"center\",\n    cursor: \"default\",\n  });\n\n  const [dropdown1Text, setDropdown1Text] = useState(\"Select Option\");\n  const [dropdown2Text, setDropdown2Text] = useState(\"Select Option\");\n\n  const handleSelect1 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown1Text(\"Select Option\");\n      setSelectedOEM(null);\n    } else {\n      setDropdown1Text(event.target.textContent);\n      setSelectedOEM(event.target.textContent);\n    }\n  };\n\n  const handleSelect2 = (eventKey, event) => {\n    if (eventKey === \"unassigned\") {\n      setDropdown2Text(\"Select Option\");\n      setSelectedModality(null);\n    } else {\n      setDropdown2Text(event.target.textContent);\n      setSelectedModality(event.target.textContent);\n    }\n  };\n\n  // --------------------\n  // CLIENT SELECTION HANDLING\n  // --------------------\n  // This function fetches clients and opens the client modal.\n  const handleClientClick = async () => {\n    const clientsData = await fetchClients(selectedOEM, selectedModality);\n    setClients(clientsData);\n    setClientSearchTerm(\"\");\n    setShowClientModal(true);\n  };\n\n  // When a client is selected in the modal, we now assume the parameter is a client ID.\n  // If the passed value is null, we clear the selection.\n  const handleClientSelect = async (clientId) => {\n    console.log(\"User selected client id:\", clientId);\n    if (!clientId) {\n      if (clientSelectionType === \"from\") {\n        setClientFromButtonText(\"Select Option\");\n        setSelectedClientFrom(null);\n      } else if (clientSelectionType === \"current\") {\n        setClientCurrentButtonText(\"Select Option\");\n        setSelectedClientCurrent(null);\n      }\n      setShowClientModal(false);\n      return;\n    }\n    try {\n      const clientSnap = await firebase.firestore().collection(\"Client\").doc(clientId).get();\n      if (clientSnap.exists) {\n        const clientData = clientSnap.data();\n        if (clientSelectionType === \"from\") {\n          setClientFromButtonText(clientData.name);\n          setSelectedClientFrom(clientId);\n        } else if (clientSelectionType === \"current\") {\n          setClientCurrentButtonText(clientData.name);\n          setSelectedClientCurrent(clientId);\n        }\n      } else {\n        console.error(\"No client document found for id:\", clientId);\n      }\n    } catch (error) {\n      console.error(\"Error fetching client data:\", error);\n    }\n    setShowClientModal(false);\n  };\n\n  const handleClientInfo = (clientId, clientName) => {\n    console.log(`Client ID: ${clientId}, Client Name: ${clientName}`);\n    router.push(\"client/\" + clientId);\n  };\n\n  const handleClearClientSelection = () => {\n    if (clientSelectionType === \"from\") {\n      setClientFromButtonText(\"Select Option\");\n      setSelectedClientFrom(null);\n    } else if (clientSelectionType === \"current\") {\n      setClientCurrentButtonText(\"Select Option\");\n      setSelectedClientCurrent(null);\n    }\n    setShowClientModal(false);\n  };\n\n  // --------------------\n  // MODEL SELECTION HANDLING\n  // --------------------\n  const [models, setModels] = useState([]);\n  const [showModelModal, setShowModelModal] = useState(false);\n  const [modelButtonText, setModelButtonText] = useState(\"Select Option\");\n\n  const handleModelClick = async () => {\n    const modelsData = await fetchModels(\n      selectedOEM,\n      selectedModality,\n      selectedClientFrom\n    );\n    setModels(modelsData);\n    setModelSearchTerm(\"\");\n    setShowModelModal(true);\n  };\n\n  const handleModelSelect = (modelName) => {\n    setModelButtonText(modelName || \"Select Option\");\n    setSelectedModel(modelName || null);\n    setShowModelModal(false);\n  };\n\n  const handleClearModelSelection = () => {\n    setModelButtonText(\"Select Option\");\n    setSelectedModel(null);\n    setShowModelModal(false);\n  };\n\n  // --------------------\n  // WAREHOUSE BUTTONS (for Client Current)\n  // --------------------\n  const handleSoCalWarehouseClick = () => {\n    setClientCurrentButtonText(\"SoCal Warehouse\");\n    setSelectedClientCurrent(SOCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", SOCAL_CLIENT_ID);\n  };\n\n  const handleNorCalWarehouseClick = () => {\n    setClientCurrentButtonText(\"NorCal Warehouse\");\n    setSelectedClientCurrent(NORCAL_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", NORCAL_CLIENT_ID);\n  };\n\n  const handleWarehouseUnassignedClick = () => {\n    setClientCurrentButtonText(\"Unassigned\");\n    setSelectedClientCurrent(UNASSIGNED_CLIENT_ID);\n    console.log(\"Warehouse button clicked: setting Client Current to\", UNASSIGNED_CLIENT_ID);\n  };\n\n  const [clientSearchTerm, setClientSearchTerm] = useState(\"\");\n  const [modelSearchTerm, setModelSearchTerm] = useState(\"\");\n\n  const deleteFromStorage = async (itemId) => {\n    const storageRef = firebase.storage().ref();\n    const folderRef = storageRef.child(`Parts/${itemId}/`);\n    try {\n      const listResult = await folderRef.listAll();\n      const deletePromises = listResult.items.map((item) => item.delete());\n      await Promise.all(deletePromises);\n    } catch (error) {\n      console.error(\"Error deleting from storage:\", error);\n    }\n  };\n\n  const deleteFromPartsCollection = async (itemId) => {\n    const db = firebase.firestore();\n    try {\n      await db.collection(\"Parts\").doc(itemId).delete();\n      console.log(`Deleted item from Parts collection: ${itemId}`);\n    } catch (error) {\n      console.error(\"Error deleting from Parts collection:\", error);\n    }\n  };\n\n  return (\n    <LoggedIn>\n      {isDeleting && (\n        <div className=\"loading-overlay\">\n          <Spinner animation=\"border\" role=\"status\" className=\"spinner-center\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Deletion</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete {selectedItems.length} item\n          {selectedItems.length > 1 ? \"s\" : \"\"}?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleDeleteSelected}>\n            Yes, delete\n          </Button>\n          <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showClientModal} onHide={() => setShowClientModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Select {clientSelectionType === \"from\" ? \"Client From\" : \"Client Current\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={clientSearchTerm}\n            onChange={(e) => setClientSearchTerm(e.target.value)}\n          />\n          <ClientTable\n            clients={clients.filter((client) =>\n              client.name.toLowerCase().includes(clientSearchTerm.toLowerCase())\n            )}\n            onSelectClient={handleClientSelect}\n            onInfoClick={handleClientInfo}\n            isClientSearch={false}\n            clearSelection={() => handleClientSelect(null)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      <Modal show={showModelModal} onHide={() => setShowModelModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Select Model</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Search by name\"\n            className=\"mb-3\"\n            value={modelSearchTerm}\n            onChange={(e) => setModelSearchTerm(e.target.value)}\n          />\n          <ModelTable\n            models={models.filter((model) =>\n              typeof model === \"string\"\n                ? model.toLowerCase().includes(modelSearchTerm.toLowerCase())\n                : false\n            )}\n            onSelectModel={handleModelSelect}\n            clearSelection={() => handleModelSelect(null)}\n          />\n        </Modal.Body>\n      </Modal>\n\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"1200px\" }}>\n          <Card>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Magmo</h2>\n              <Row>\n                <Col md={4}>\n                  {/* Dropdowns */}\n                  <div>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text>OEM</InputGroup.Text>\n                      <Dropdown onSelect={handleSelect1}>\n                        <Dropdown.Toggle\n                          variant=\"outline-secondary\"\n                          id=\"dropdown-button-1\"\n                          className=\"w-100\"\n                        >\n                          {dropdown1Text}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"w-100\">\n                          <Dropdown.Item eventKey=\"unassigned\">\n                            Select Option\n                          </Dropdown.Item>\n                          <Dropdown.Item eventKey=\"GE\">GE</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Toshiba\">\n                            Toshiba\n                          </Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Siemens\">\n                            Siemens\n                          </Dropdown.Item>\n                          <Dropdown.Item eventKey=\"Philips\">\n                            Philips\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </InputGroup>\n\n                    <InputGroup className=\"mb-5\">\n                      <InputGroup.Text>Modality</InputGroup.Text>\n                      <Dropdown onSelect={handleSelect2}>\n                        <Dropdown.Toggle\n                          variant=\"outline-secondary\"\n                          id=\"dropdown-button-2\"\n                          className=\"w-100\"\n                        >\n                          {dropdown2Text}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className=\"w-100\">\n                          <Dropdown.Item eventKey=\"unassigned\">\n                            Select Option\n                          </Dropdown.Item>\n                          <Dropdown.Item eventKey=\"CT\">CT</Dropdown.Item>\n                          <Dropdown.Item eventKey=\"MRI\">MRI</Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </InputGroup>\n                  </div>\n\n                  <div className={styles.divider}></div>\n\n                  {/* Client selection boxes */}\n                  <div>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text>Client From</InputGroup.Text>\n                      <Button\n                        variant=\"outline-secondary\"\n                        className=\"w-100\"\n                        onClick={() => {\n                          setClientSelectionType(\"from\");\n                          handleClientClick();\n                        }}\n                      >\n                        {clientFromButtonText}\n                      </Button>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text>Client Current</InputGroup.Text>\n                      <Button\n                        variant=\"outline-secondary\"\n                        className=\"w-100\"\n                        onClick={() => {\n                          setClientSelectionType(\"current\");\n                          handleClientClick();\n                        }}\n                      >\n                        {clientCurrentButtonText}\n                      </Button>\n                    </InputGroup>\n\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text>Model</InputGroup.Text>\n                      <Button\n                        variant=\"outline-secondary\"\n                        className=\"w-100\"\n                        onClick={handleModelClick}\n                      >\n                        {modelButtonText}\n                      </Button>\n                    </InputGroup>\n\n                    <div className={styles.divider}></div>\n\n                    {/* Warehouse buttons for Client Current */}\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Text>Warehouse</InputGroup.Text>\n                      <div className={styles.buttonGroup}>\n                        <Button\n                          variant=\"outline-secondary\"\n                          className={styles.flexButton}\n                          onClick={handleSoCalWarehouseClick}\n                        >\n                          SoCal Warehouse\n                        </Button>\n                        <Button\n                          variant=\"outline-secondary\"\n                          className={styles.flexButton}\n                          onClick={handleNorCalWarehouseClick}\n                        >\n                          NorCal Warehouse\n                        </Button>\n                        <Button\n                          variant=\"outline-secondary\"\n                          className={styles.flexButton}\n                          onClick={handleWarehouseUnassignedClick}\n                        >\n                          Unassigned\n                        </Button>\n                      </div>\n                    </InputGroup>\n                  </div>\n                </Col>\n\n                <Col md={8}>\n                  <div className={styles.tableContainer}>\n                    <PartTable\n                      info={info}\n                      labels={labels}\n                      ids={ids}\n                      hoverStyle={hoverStyle}\n                      sortCheckAll={sortCheckAll}\n                      checkDelete={checkDelete}\n                      isDeleting={isDeleting}\n                      rowSelect={rowSelect}\n                      setHoverIndex={setHoverIndex}\n                      hoverIndex={hoverIndex}\n                      selectedItems={selectedItems}         // Pass selectedItems state\n                      setSelectedItems={setSelectedItems}   // Pass its setter\n                    />\n\n\n                    <div className={styles.searchContainer}>\n                      <Form className=\"d-flex pb-2\">\n                        <FormControl\n                          type={showListSearch}\n                          placeholder=\"Search\"\n                          className=\"me-2 flex-grow-1\"\n                          aria-label=\"Search\"\n                          value={search}\n                          onChange={searchChangeHandler}\n                          style={{ flex: \"1\" }}\n                        />\n                        <NavDropdown\n                          title={select}\n                          id=\"collasible-nav-dropdown\"\n                          show={showList}\n                          onMouseEnter={() => setShowList(true)}\n                          onMouseLeave={() => setShowList(false)}\n                          style={{ marginTop: \"-5px\" }}\n                        >\n                          <NavDropdown.Item onClick={() => { setSelect(\"Name\"); setShowListSearch(\"text\"); }}>\n                            Name\n                          </NavDropdown.Item>\n                          <NavDropdown.Item onClick={() => { setSelect(\"Date\"); setShowListSearch(\"date\"); }}>\n                            Date\n                          </NavDropdown.Item>\n                          <NavDropdown.Item onClick={() => { setSelect(\"Work Order\"); setShowListSearch(\"number\"); }}>\n                            Work Order\n                          </NavDropdown.Item>\n                          <NavDropdown.Item onClick={() => { setSelect(\"Product Number\"); setShowListSearch(\"number\"); }}>\n                            Product Number\n                          </NavDropdown.Item>\n                          <NavDropdown.Item onClick={() => { setSelect(\"Description\"); setShowListSearch(\"text\"); }}>\n                            Description\n                          </NavDropdown.Item>\n                          <NavDropdown.Item\n                            onClick={() => {\n                              setSelect(\"SKU\");\n                              setShowListSearch(\"text\");\n                            }}\n                          >\n                            SKU\n                          </NavDropdown.Item>\n                        </NavDropdown>\n                      </Form>\n                      <div className=\"d-flex justify-content-between\">\n                        <LoadingButton type=\"secondary\" name=\"Add New Item\" route=\"NewSearch/AddItem/NewItem\" />\n                        <LoadingButton type=\"primary\" name=\"Back\" route=\"Warehousedb/WarehouseSelect\" />\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </div>\n      </Container>\n    </LoggedIn>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}