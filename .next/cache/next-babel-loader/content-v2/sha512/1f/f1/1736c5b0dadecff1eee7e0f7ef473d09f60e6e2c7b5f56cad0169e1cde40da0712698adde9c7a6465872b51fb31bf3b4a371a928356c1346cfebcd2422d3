{"ast":null,"code":"import _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mack2\\\\Desktop\\\\code\\\\utils\\\\PartTable.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Table, Button, Form } from \"react-bootstrap\";\nimport { formatDate } from \"./fetchAssociations\";\nimport styles from \"../styles/PartTable.module.css\";\nexport default function PartTable(_ref) {\n  var _this = this;\n\n  var info = _ref.info,\n      labels = _ref.labels,\n      ids = _ref.ids,\n      hoverStyle = _ref.hoverStyle,\n      sortCheckAll = _ref.sortCheckAll,\n      checkDelete = _ref.checkDelete,\n      isDeleting = _ref.isDeleting,\n      rowSelect = _ref.rowSelect,\n      setHoverIndex = _ref.setHoverIndex,\n      hoverIndex = _ref.hoverIndex,\n      selectedItems = _ref.selectedItems,\n      setSelectedItems = _ref.setSelectedItems;\n\n  // const [selectedItems, setSelectedItems] = useState([]);\n  // Toggle selection of items\n  var handleSelectItem = function handleSelectItem(id) {\n    setSelectedItems(function (prevSelectedItems) {\n      return prevSelectedItems.includes(id) ? prevSelectedItems.filter(function (itemId) {\n        return itemId !== id;\n      }) : [].concat(_toConsumableArray(prevSelectedItems), [id]);\n    });\n  }; // Handle delete button click for selected items\n\n\n  var handleDeleteSelected = function handleDeleteSelected() {\n    if (selectedItems.length > 0) {\n      checkDelete(null, null, selectedItems, \"selected items\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.scrollableTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    className: \"mb-0 \".concat(styles.fixedTable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    className: styles.stickyHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, labels.map(function (item, index) {\n    return __jsx(\"th\", {\n      style: hoverStyle(index),\n      onMouseOver: function onMouseOver() {\n        return setHoverIndex(index);\n      },\n      onMouseOut: function onMouseOut() {\n        return setHoverIndex(null);\n      },\n      onClick: function onClick() {\n        return sortCheckAll(index);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, item);\n  }), __jsx(\"th\", {\n    className: styles.actionCol,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, selectedItems.length > 0 ? __jsx(Button, {\n    variant: \"danger\",\n    onClick: handleDeleteSelected,\n    disabled: isDeleting,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Delete Selected (\", selectedItems.length, \")\") : \"select\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, info.map(function (item, index) {\n    return __jsx(\"tr\", {\n      key: index,\n      onClick: function onClick(e) {\n        // Only trigger rowSelect if the target is not a checkbox\n        if (e.target.type !== \"checkbox\") {\n          rowSelect(item);\n        }\n      },\n      className: \"clickable-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, item.name), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, formatDate(item.date)), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, item.workOrders && item.workOrders.length > 0 ? item.workOrders[item.workOrders.length - 1].workOrder : \"N/A\"), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, item.pn), __jsx(\"td\", {\n      style: {\n        textAlign: \"center\",\n        cursor: \"default\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, item.sn), __jsx(\"td\", {\n      className: styles.actionCol,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      checked: selectedItems.includes(item.id),\n      onChange: function onChange(e) {\n        e.stopPropagation(); // Prevent row click when checkbox is clicked\n        // Toggle selection using item.id directly\n\n        setSelectedItems(function (prevSelectedItems) {\n          return prevSelectedItems.includes(item.id) ? prevSelectedItems.filter(function (id) {\n            return id !== item.id;\n          }) : [].concat(_toConsumableArray(prevSelectedItems), [item.id]);\n        });\n      },\n      \"aria-label\": \"Select \".concat(item.name),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })));\n  }), info.length < 10 && Array.from({\n    length: 10 - info.length\n  }).map(function (_, index) {\n    return __jsx(\"tr\", {\n      key: \"empty-\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, __jsx(\"td\", {\n      colSpan: labels.length + 1,\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"\\xA0\"));\n  }))));\n}\n_c = PartTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartTable\");","map":{"version":3,"sources":["C:/Users/mack2/Desktop/code/utils/PartTable.js"],"names":["React","useState","Table","Button","Form","formatDate","styles","PartTable","info","labels","ids","hoverStyle","sortCheckAll","checkDelete","isDeleting","rowSelect","setHoverIndex","hoverIndex","selectedItems","setSelectedItems","handleSelectItem","id","prevSelectedItems","includes","filter","itemId","handleDeleteSelected","length","scrollableTable","fixedTable","stickyHeader","map","item","index","actionCol","textAlign","e","target","type","cursor","name","date","workOrders","workOrder","pn","sn","stopPropagation","Array","from","_"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Button, Form } from \"react-bootstrap\";\nimport { formatDate } from \"./fetchAssociations\";\nimport styles from \"../styles/PartTable.module.css\";\n\n\nexport default function PartTable({\n  info,\n  labels,\n  ids,\n  hoverStyle,\n  sortCheckAll,\n  checkDelete,\n  isDeleting,\n  rowSelect,\n  setHoverIndex,\n  hoverIndex,\n  selectedItems,\n  setSelectedItems,\n}) {\n  // const [selectedItems, setSelectedItems] = useState([]);\n\n  // Toggle selection of items\n  const handleSelectItem = (id) => {\n    setSelectedItems((prevSelectedItems) =>\n      prevSelectedItems.includes(id)\n        ? prevSelectedItems.filter((itemId) => itemId !== id)\n        : [...prevSelectedItems, id]\n    );\n  };\n\n  // Handle delete button click for selected items\n  const handleDeleteSelected = () => {\n    if (selectedItems.length > 0) {\n      checkDelete(null, null, selectedItems, \"selected items\");\n    }\n  };\n\n  return (\n    <div className={styles.scrollableTable}>\n      <Table striped bordered hover size=\"sm\" className={`mb-0 ${styles.fixedTable}`}>\n        <thead className={styles.stickyHeader}>\n          <tr>\n            {labels.map((item, index) => (\n              <th\n                style={hoverStyle(index)}\n                onMouseOver={() => setHoverIndex(index)}\n                onMouseOut={() => setHoverIndex(null)}\n                onClick={() => sortCheckAll(index)}\n                key={index}\n              >\n                {item}\n              </th>\n            ))}\n            <th className={styles.actionCol} style={{ textAlign: \"center\" }}>\n              {selectedItems.length > 0 ? (\n                <Button\n                  variant=\"danger\"\n                  onClick={handleDeleteSelected}\n                  disabled={isDeleting}\n                  size=\"sm\"\n                >\n                  Delete Selected ({selectedItems.length})\n                </Button>\n              ) : (\n                \"select\"\n              )}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {info.map((item, index) => (\n            <tr\n              key={index}\n              onClick={(e) => {\n                // Only trigger rowSelect if the target is not a checkbox\n                if (e.target.type !== \"checkbox\") {\n                  rowSelect(item);\n                }\n              }}\n              className=\"clickable-row\"\n            >\n              <td style={{ textAlign: \"center\", cursor: \"default\" }}>\n                {item.name}\n              </td>\n              <td style={{ textAlign: \"center\", cursor: \"default\" }}>\n                {formatDate(item.date)}\n              </td>\n              <td style={{ textAlign: \"center\", cursor: \"default\" }}>\n                {item.workOrders && item.workOrders.length > 0\n                  ? item.workOrders[item.workOrders.length - 1].workOrder\n                  : \"N/A\"}\n              </td>\n              <td style={{ textAlign: \"center\", cursor: \"default\" }}>\n                {item.pn}\n              </td>\n              <td style={{ textAlign: \"center\", cursor: \"default\" }}>\n                {item.sn}\n              </td>\n              <td className={styles.actionCol} style={{ textAlign: \"center\" }}>\n                <Form.Check\n                  type=\"checkbox\"\n                  checked={selectedItems.includes(item.id)}\n                  onChange={(e) => {\n                    e.stopPropagation(); // Prevent row click when checkbox is clicked\n                    // Toggle selection using item.id directly\n                    setSelectedItems((prevSelectedItems) =>\n                      prevSelectedItems.includes(item.id)\n                        ? prevSelectedItems.filter((id) => id !== item.id)\n                        : [...prevSelectedItems, item.id]\n                    );\n                  }}\n                  aria-label={`Select ${item.name}`}\n                />\n              </td>\n            </tr>\n          ))}\n          {info.length < 10 &&\n            Array.from({ length: 10 - info.length }).map((_, index) => (\n              <tr key={`empty-${index}`}>\n                <td colSpan={labels.length + 1} style={{ textAlign: \"center\" }}>\n                  &nbsp;\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}