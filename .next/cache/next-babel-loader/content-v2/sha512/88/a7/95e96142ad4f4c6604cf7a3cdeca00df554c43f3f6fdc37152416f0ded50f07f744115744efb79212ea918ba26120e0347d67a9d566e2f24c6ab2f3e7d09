{"ast":null,"code":"import _toConsumableArray from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mack2/Desktop/code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, Button, Card, Container, Tab, Row, Col, ListGroup } from \"react-bootstrap\";\nimport styles from \"../styles/Home.module.css\";\nimport { useAuth } from \"../context/AuthUserContext\";\nimport LoggedIn from \"./LoggedIn\";\nimport { getStorage, ref, listAll } from \"firebase/storage\";\nexport default function dashboard() {\n  var _useAuth = useAuth(),\n      signOut = _useAuth.signOut;\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState([]),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var storage = getStorage();\n  var listRef = ref(storage, \"/\");\n  var list = useRef(); // const buttonList = items.map((itemName) => loadingButton(\"primary\",itemName.folder,\"/\"))\n\n  if (true) {\n    window.addEventListener(\"load\", function () {\n      console.log(\"enter 1\");\n      fetchData();\n    });\n  } // Find all the prefixes and items.\n\n\n  function fetchStuff() {\n    return _fetchStuff.apply(this, arguments);\n  }\n\n  function _fetchStuff() {\n    _fetchStuff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var itemList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"enter 1 \");\n              itemList = [];\n              _context.next = 4;\n              return listAll(listRef).then(function (res) {\n                res.prefixes.forEach(function (folderRef) {\n                  // All the prefixes under listRef.\n                  // You may call listAll() recursively on them.\n                  console.log(\"enter 2\");\n                  console.log(itemList);\n                  itemList.push(folderRef.name);\n                });\n                res.items.forEach(function (itemRef) {\n                  // All the items under listRef.\n                  //   setItems(\"item\", itemRef.name);\n                  console.log(\"enter 3\");\n                  console.log(itemRef.name);\n                });\n              })[\"catch\"](function (error) {\n                // Uh-oh, an error occurred!\n                alert(error.message);\n              });\n\n            case 4:\n              return _context.abrupt(\"return\", itemList);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchStuff.apply(this, arguments);\n  }\n\n  ;\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetchStuff();\n\n            case 2:\n              data = _context2.sent;\n              console.log(data);\n              setItems(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n              });\n              console.log(items);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  function simulateNetworkRequest() {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, 2000);\n    });\n  }\n\n  function LoadingButton(type, name, route) {\n    var _useState3 = useState({\n      name: false\n    }),\n        isLoading = _useState3[0],\n        setLoading = _useState3[1];\n\n    useEffect(function () {\n      if (isLoading.name) {\n        simulateNetworkRequest().then(function () {\n          setLoading({\n            name: false\n          });\n        });\n      }\n    }, [isLoading.name]);\n\n    var handleClick = function handleClick() {\n      return setLoading({\n        name: true\n      });\n    };\n\n    return __jsx(\"a\", {\n      \"class\": \"btn btn-\" + type,\n      variant: type,\n      href: \"/\" + route,\n      disabled: isLoading.name,\n      onClick: !isLoading.name ? handleClick : null\n    }, isLoading.name ? \"Loadingâ€¦\" : name);\n  }\n\n  return __jsx(LoggedIn, null, __jsx(Container, {\n    className: \"d-flex align-items-center justify-content-center\",\n    style: {\n      minHeight: \"100vh\"\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"600px\"\n    }\n  }, __jsx(Card, null, __jsx(Card.Body, {\n    ref: list\n  }, __jsx(\"h2\", {\n    className: \"text-center mb-4\"\n  }, \"Drive\"), __jsx(\"div\", {\n    \"class\": \"d-grid gap-3\"\n  }, LoadingButton(\"primary\", \"Info\", \"#\"), __jsx(Tab.Container, {\n    id: \"list-group-tabs-example\",\n    defaultActiveKey: \"#link1\"\n  }, __jsx(Row, null, __jsx(Col, {\n    sm: 4\n  }, __jsx(ListGroup, null, __jsx(ListGroup.Item, {\n    action: true,\n    href: \"#link1\"\n  }, \"Link 1\"), __jsx(ListGroup.Item, {\n    action: true,\n    href: \"#link2\"\n  }, \"Link 2\"), __jsx(Button, null, \"List\"), items.map(function (val) {\n    return __jsx(\"h2\", null, val);\n  }))))), __jsx(Button, {\n    variant: \"link\",\n    onClick: signOut\n  }, \"Sign out\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}